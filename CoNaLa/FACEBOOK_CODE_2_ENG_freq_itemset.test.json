["[j for i in zip(a, b) for j in i]", "map(int, ['1', '2', '3'])", "datetime.strptime('21/11/06 16:30', '%d/%m/%y %H:%M')", "c = [[(i + j) for i, j in zip(e, b)] for e in a]", "[y for x in range(3) for y in [x, x]]", "item = re.sub(' ?\\\\([^)]+\\\\)', '', item)", "list('Word to Split')", "print(df.loc[df['A'] == 'foo'])", "sorted(list(data.items()), key=lambda x: x[1])", "[x for x in l if x[1] == 1]", "soup.body.findAll(text='Python Jobs')", "'sdfasdf'.index('df')", "[y for x in range(3) for y in [x, x]]", "pd.concat([students, pd.DataFrame(marks)], axis=1)", "re.sub('<[^<]+?>', '', text)", "datetime.datetime.fromtimestamp(ms / 1000.0)", "int('deadbeef', 16)", "dict((v, k) for k, v in map.items())", "print(s.encode('unicode_escape'))", "raise ValueError('A very specific bad thing happened')", "i, j = np.where(a == value)", "driver.find_element_by_xpath(\"//div[@id='a']//a[@class='click']\")", "sum(item['gold'] for item in myLIst)", "zip(it, it, it)", "print('Total cost is: ${:,.2f}'.format(TotalAmount))", "line = re.sub('[!@#$]', '', line)", "[s.strip() for s in input().split(',')]", "[s.strip() for s in input().split(',')]", "word = re.sub('([aeiou]):(([aeiou][^aeiou]*){3})$', '\\\\1\\\\2', word)", "datetime.datetime.strptime('24052010', '%d%m%Y').date()", "r = requests.head(url)\nreturn (r.status_code == 200)", "[i for i in range(len(a)) if a[i] > 2]", "sum(x * y for x, y in zip(a, b))", "sum(x * y for x, y in zip(a, b))", "sum(x * y for x, y in zip(a, b))", "s.translate(None, string.punctuation)", "pat = re.compile('^\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}$')", "list(map(''.join, a))", "struct.unpack('d', struct.pack('Q', int(s2, 0)))[0]", "sorted(list(dictionary.items()), key=operator.itemgetter(1))", "dict((k, v) for k, v in parent_dict.items() if k > 2 and k < 4)", "a.to_csv('test.csv', cols=['sum'])", "s.sort(key=operator.itemgetter(1, 2))", "print([('%5.3f' % val) for val in l])", "re.split('(?<=[\\\\.\\\\?!]) ', text)", "datetime.strptime('2009/05/13 19:19:30 -0400', '%Y/%m/%d %H:%M:%S %z')", "[item[0] for item in queryresult]", "for item in thelist:\n    pass", "strftime('%Y-%m-%d %H:%M:%S', gmtime())", "os.listdir('somedirectory')", "os.stat('C:\\\\Python27\\\\Lib\\\\genericpath.py').st_size", "for item in thelist:\n    pass", "os.path.dirname(path)", "str(datetime.now())", "import platform\nplatform.release()", "[i[0] for i in re.findall('((\\\\d)(?:[()]*\\\\2*[()]*)*)', s)]", "x = [int(i) for i in x.split()]", "re.split('\\n\\\\s*\\n', s)", "pd.concat([df.drop('b', axis=1), pd.DataFrame(df['b'].tolist())], axis=1)", "sorted(lst, key=lambda x: (sum(x[1:]), x[0]))", "alist[(-1)]", "[(v, k) for k, v in a.items()]", "print(sorted(student_tuples, key=lambda t: (-t[2], t[0])))", "ctypes.windll.user32.MessageBoxW(0, 'Error', 'Error', 0)", "re.findall('abc(de)fg(123)', 'abcdefg123 and again abcdefg123')", "my_list.sort(key=operator.itemgetter('name'))", "Article.objects.annotate(like_count=Count('likes')).order_by('-like_count')", "lst.sort(key=lambda x: x[2], reverse=True)", "sorted(list(tag_weight.items()), key=lambda x: int(x[1]), reverse=True)", "y = [row[:] for row in x]", "logging.info('date=%s', date)", "with open(fname) as f:\n    content = f.readlines()", "max_item = max(a_list, key=operator.itemgetter(1))", "datetime.datetime.strptime(s, '%Y-%m-%dT%H:%M:%SZ')", "[map(int, x.split('\\t')) for x in s.rstrip().split('\\r\\n')]", "sys.path.insert(0, './path/to/your/modules/')", "dict([('A', 1), ('B', 2), ('C', 3)])", "print(glob.glob('/home/adam/*.txt'))", "result = [sum(b) for b in a]", "[(x + y) for x, y in zip(first, second)]", "d.apply(lambda row: min([row['A'], row['B']]) - row['C'], axis=1)", "time.mktime(dt.timetuple()) + dt.microsecond / 1000000.0", "sum(1 for i, j in zip(a, b) if i != j)", "re.compile('^([^A]*)AA([^A]|AA)*$')", "re.split('; |, ', str)", "\"\"\"0x{0:08X}\"\"\".format(3652458)", "x = [[] for i in range(3)]", "json.loads(open('sample.json').read().decode('utf-8-sig'))", "re.match('[:;][)(](?![)(])', str)", "print(any(x in a for x in b))", "[max(len(str(x)) for x in line) for line in zip(*foo)]", "dict([(e[0], int(e[1])) for e in lst])", "[(t[1], t[0]) for t in mylist]", "print([key for key, value in d.items() if value == 1])", "list(permutations(list(range(9)), 2))", "C = [(a - b) for a, b in zip(A, B)]", "re.findall('(?::|;|=)(?:-)?(?:\\\\)|\\\\(|D|P)', s)", "exec(compile(open('file.py').read(), 'file.py', 'exec'))", "s = s[beginning:(beginning + LENGTH)]", "sys.version_info", "driver.find_element_by_id('foo').clear()", "df[~df.index.duplicated()]", "d = {key: value for (key, value) in iterable}", "[m.start() for m in re.finditer('test', 'test test test test')]", "[d['key'] for d in l if 'key' in d]", "l[:3] + l[-3:]", "hashtags = re.findall('#(\\\\w+)', str1, re.UNICODE)", "re.compile('XYZ', re.IGNORECASE).split('fooxyzbar')", "[map(int, x.split('\\t')) for x in s.rstrip().split('\\r\\n')]", "re.search('Test(.*)print', testStr, re.DOTALL)", "s.split('s')", "MyModel.objects.order_by('?').first()", "winsound.PlaySound('sound.wav', winsound.SND_FILENAME)", "a.fromlist([int(val) for val in stdin.read().split()])", "df.index.values.tolist()", "'used\\u200b'.replace('\\u200b', '*')", "heapq.nlargest(3, iter(mydict.items()), key=lambda tup: sum(tup[1]))", "sorted(Profile.objects.all(), key=lambda p: p.reputation)", "re.match('[a-zA-Z][\\\\w-]*\\\\Z', 'A\\n')", "int('{:08b}'.format(n)[::-1], 2)", "list(d.items())", "i = int(s, 16)", "A[[0, 1], [0, 1]]", "np.zeros((6, 9, 20)) + np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])[(None), :, (None)]", "np.zeros((6, 9, 20)) + np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])[(None), :, (None)]", "dict(zip([1, 2, 3, 4], ['a', 'b', 'c', 'd']))", "sorted(lst, key=lambda x: (sum(x[1:]), x[0]), reverse=True)", "df.loc[df.groupby('User')['X'].transform(sum) == 0]", "sorted(list(range(len(a))), key=lambda i: a[i], reverse=True)[:2]", "os.path.abspath(__file__)", "count.setdefault('a', 0)", "any(np.equal(a, [1, 2]).all(1))", "b = np.delete(a, -1, 1)", "df.drop(df.index[[1, 3]], inplace=True)", "dict([('A', 1), ('B', 2), ('C', 3)])", "s[:4] + '-' + s[4:]", "df.loc[(df.index < start_remove) | (df.index > end_remove)]", "df.set_index(['Company', 'date'], inplace=True)", "quadmesh.set_clim(vmin=0, vmax=15)", "return list(set(itertools.chain(*result_list)))", "plt.plot(list(range(10)), linestyle='--', marker='o', color='b')", "('c' in d)", "df.groupby('ID').head(4)", "plt.savefig('test.svg')", "print(os.path.getmtime('/tmp'))", "base64.urlsafe_b64decode(uenc.encode('ascii'))", "re.split(' +', str1)", "subprocess.call('tar c my_dir | md5sum', shell=True)", "datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')", "x = numpy.delete(x, 0, axis=0)", "df['A_perc'] = df['A'] / df['sum']", "df.set_index(['Company', 'date'], inplace=True)", "getattr(test, a_string)", "datetime.datetime.strptime('2013-1-25', '%Y-%m-%d').strftime('%m/%d/%y')", "[k for k, v in dictA.items() if v.count('duck') > 1]", "\"\"\"didn't\"\"\".replace(\"'\", '')", "p = subprocess.Popen('ls', shell=True, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)\nfor line in p.stdout.readlines():\n    print(line, end=' ')\nretval = p.wait()", "L.sort(key=operator.itemgetter(1))", "list(x * y for x, y in list(zip(a, b)))", "pd.concat([pd.DataFrame(l) for l in my_list], axis=1).T", "pd.concat([pd.DataFrame(l) for l in my_list], axis=1).T", "{k: bigdict[k] for k in ('l', 'm', 'n')}", "print('[%s]' % ', '.join('%.3f' % val for val in list))", "sys.exit()", "list(permutations(list(range(9)), 2))", "list(d.items())", "df['prod_type'] = 'responsive'", "sorted(l, key=lambda x: (-int(x[1]), x[0]))", "print(re.search('\\\\bLOG_ADDR\\\\s+(\\\\S+)', line).group(1))", "re.split(' +', str1)", "print(re.search('\\\\bLOG_ADDR\\\\s+(\\\\S+)', line).group(1))", "session.query(Task).filter(Task.time_spent > timedelta(hours=3)).all()", "hasattr(obj, 'attr_name')", "\"\"\"\"\"\".join(c for c in text if c not in 'aeiouAEIOU')", "urllib.parse.unquote(urllib.parse.unquote('FireShot3%2B%25282%2529.png'))", "df['a'].str.contains('-')", "re.findall('\\\\s+|\\\\S+', s)", "decimal.Decimal(random.randrange(10000)) / 100", "[d for d in a if d['name'] == 'pluto']", "myDict = {key: val for key, val in list(myDict.items()) if val != 42}", "set(L[0].f.items()).issubset(set(a3.f.items()))", "any(isinstance(el, list) for el in input_list)", "set(L[0].f.items()).issubset(set(a3.f.items()))", "plt.plot(list(range(10)), linestyle='--', marker='o', color='b')", "shutil.copy('file.txt', 'file2.txt')", "re.findall('\\\\$([^$]*)\\\\$', string)", "ts.plot(marker='.')", "a[np.arange(len(a)) != 3]", "sorted(list(d.items()), key=lambda k_v: k_v[1], reverse=True)", "sorted(list_of_dct, key=lambda x: order.index(list(x.values())[0]))", "sorted(['10', '3', '2'], key=int)", "sorted(list(a_dict.items()), key=lambda item: item[1][1])", "os.rename(src, dst)", "ftp.retrbinary('RETR %s' % filename, file.write)", "[d['key'] for d in l]", "[d['key'] for d in l if 'key' in d]", "a = [x for x in a if x['link'] not in b]", "datetime.strptime('2010-11-13 10:33:54.227806', '%Y-%m-%d %H:%M:%S.%f')", "a = [x for x in a if x['link'] not in b]", "m[~m.mask]", "os.system('clear')", "ax.set_xlabel('Temperature ($^\\\\circ$C)')", "u = s.decode('utf-8-sig')", "\"\"\" \"\"\".join(mystring.split())", "b = a.decode('utf8')[::-1].encode('utf8')", "u = s.decode('utf-8-sig')", "result = [item for word in words for item in word.split(',')]", "x = map(int, x.split())", "os.rename('Joe Blow', 'Blow, Joe')", "l1.sort(key=lambda x: int(x[0]))", "[x for x in my_list if not x.startswith('#')]", "subprocess.call(['/usr/bin/perl', './uireplace.pl', var])", "re.sub('\\\\s{2,}', '|', line.strip())", "a['x'].apply(lambda x, y: x + y, args=(100,))", "df.groupby(['A', 'B'])['C'].unique()", "\"\"\"\"\"\".join([s[x:x + 2][::-1] for x in range(0, len(s), 2)])", "subprocess.call(['shutdown', '/a '])", "subprocess.call(['shutdown', '/a '])", "print([y for x in list(dict.items()) for y in x])", "total = sum(float(item) for item in s.split(','))", "platform.system()", "my_function.__name__", "import platform\nplatform.system()", "print(os.name)", "requests.get('https://www.mysite.com/', auth=('username', 'pwd'))", "df.apply(lambda x: x.tolist(), axis=1)", "date.today().strftime('%A')", "imp.find_module('os')[1]", "Sample.objects.filter(date__year='2011', date__month='01')", "print(np.linspace(1, 3, num=5))", "webbrowser.open_new(url)", "'M\\\\N{AMPERSAND}M\\\\N{APOSTROPHE}s'.encode().decode('unicode-escape')", "df.sort_values(['a', 'b'], ascending=[True, False])", "urllib.parse.unquote('%0a')", "mixed.replace('\\r\\n', '\\n').replace('\\r', '\\n')", "df['Date'] = df['Date'].apply(lambda x: int(str(x)[-4:]))", "gca().get_lines()[n].get_xydata()", "sum(df.apply(lambda x: sum(x.isnull().values), axis=1) > 0)", "u = s.decode('utf-8-sig')", "\"\"\"x = {}\"\"\".format(x.decode('utf8')).encode('utf8')", "k = hashlib.md5('thecakeisalie').hexdigest()", "all(item in list(superset.items()) for item in list(subset.items()))", "set(['a', 'b', 'c', 'd'])", "dict((k, v) for k, v in hand.items() if v)", "sum(item['gold'] for item in example_list)", "\"\"\", \"\"\".join([(str(k) + ' ' + str(v)) for k, v in list(a.items())])", "ord('\\xff')", "list('{0:0b}'.format(8))", "zip(*np.where(a == 1))", "np.where(np.in1d(A, B))[0]", "plt.yscale('log', nonposy='clip')", "A[np.arange(A.shape[0])[:, (None)], B]", "df = pd.read_csv('filename.txt', sep=';', names=['Region Name'])", "re.sub('\\\\w*\\\\d\\\\w*', '', words).strip()", "pandas.set_option('display.max_columns', None)", "[key for key, value in list(my_dict.items()) if set(value).intersection(lst)]", "[s.strip() for s in input().split(',')]", "set(['a', 'b']).issubset(['a', 'b', 'c'])", "[item for item in a if item[0] == 1]", "re.findall('\\\\[[^\\\\]]*\\\\]|\"[^\"]*\"|\\\\S+', s)", "requests.get('https://www.reporo.com/', verify=False)", "requests.get('https://www.reporo.com/', verify=False)", "\"\"\"\"\"\".join('{}{}'.format(key, val) for key, val in list(adict.items()))", "if (key in d):\n    pass", "np.fromstring('\\x00\\x00\\x80?\\x00\\x00\\x00@\\x00\\x00@@\\x00\\x00\\x80@', dtype='<f4')", "a = a.replace(char, '')", "re.sub('\\\\((\\\\w+)\\\\)', '\\\\1', s)", "a = [0] * 10000", "result = [x for x in list_a if x[0] in list_b]", "str_list = [['{0:.8e}'.format(flt) for flt in sublist] for sublist in lst]", "struct.pack('<I', 1633837924)", "\"\"\"{:.50f}\"\"\".format(float(a[0] / a[1]))", "[ord(c) for c in s.decode('hex')]", "struct.pack('<I', 1633837924)", "os.system('GREPDB=\"echo 123\"; /bin/bash -c \"$GREPDB\"')", "os.system('tcsh your_own_script')", "urllib.parse.unquote('%0a')", "woduplicates = list(set(lseperatedOrblist))", "csvwriter.writerow(row)", "exec(compile(open('test2.py').read(), 'test2.py', 'exec'))", "exec(compile(open('test2.py').read(), 'test2.py', 'exec'))", "return re.sub('\\\\p{P}+', '', text)", "url('^$', TemplateView.as_view(template_name='your_template.html'))", "x = map(int, x.split())", "dict(zip([1, 2, 3, 4], ['a', 'b', 'c', 'd']))", "df.groupby(['Month', 'Fruit']).sum().unstack(level=0)", "str.strip()", "with open(input_filename, 'r') as f:\n    html_text = markdown(f.read(), output_format='html4')\npdfkit.from_string(html_text, output_filename)", "df.sort('m')", "sorted(list(u.items()), key=lambda v: v[1])", "pd.merge(y, x, on='k')[['a', 'b', 'y']]", "a[np.in1d(a, b)]", "os.rename('Joe Blow', 'Blow, Joe')", "[a[i] for i in (1, 2, 5)]", "re.findall('\\\\[(.*?)\\\\]', mystring)", "br.select_form(nr=0)", "print(t.decode('unicode_escape'))", "codecs.open('myfile', 'r', 'iso-8859-1').read()", "[[int(x) for x in sublist] for sublist in lst]", "[[int(x) for x in sublist] for sublist in lst]", "[[int(x) for x in sublist] for sublist in lst]", "new_list = my_list[-10:]", "df.apply(lambda x: x.tolist(), axis=1)", "u = s.decode('utf-8-sig')", "res_list = [x[0] for x in rows]", "print(re.match('(\\\\d+(\\\\.\\\\d+)?)', '3434.35353').group(1))", "print(glob.glob('/home/adam/*.txt'))", "zip(it, it, it)", "urllib.parse.unquote(h.path.encode('utf-8')).decode('utf-8')", "a.update(b)", "return iter(sorted(dict.items()))", "webbrowser.open('http://example.com')", "df.loc[:, ((df != 0).any(axis=0))]", "[(a * b) for a, b in zip(lista, listb)]", "list('Word to Split')", "list(set(frozenset(item) for item in L))", "s.strip()", "[index for index, letter in enumerate(word) if letter == 'e']", "map(sum, zip(*lists))", "[list(v) for k, v in itertools.groupby(mylist, key=lambda x: x[:5])]", "l[:3] + l[-3:]", "np.in1d(b, a).nonzero()[0]", "return os.path.getctime(path_to_file)", "a, b, c = [1, 2, 3]", "max(enumerate(a), key=lambda x: x[1])[0]", "driver.set_window_size(1400, 1000)", "sum([sum(x) for x in [[1, 2, 3, 4], [2, 4, 5, 6]]])", "word = re.sub('([aeiou]):(([aeiou][^aeiou]*){3})$', '\\\\1\\\\2', word)", "sorted(list(d.items()), key=lambda name_num: (name_num[0].rsplit(None, 1)[0], name_num[1]))", "sum(x[1] for x in structure)", "os.system(my_cmd)", "max(list(MyCount.keys()), key=int)", "time.strftime('%Y-%m-%d %H:%M')", "int('deadbeef', 16)", "d = {k: v for (k, v) in iterable}", "mylist.sort(key=lambda d: (d['weight'], d['factor']))", "dict((k, v) for k, v in hand.items() if v)", "[x for x in a if x not in [2, 3, 7]]", "[x for x in a if x not in [2, 3, 7]]", "'x' in ['x', 'd', 'a', 's', 'd', 's']", "np.any(np.in1d(a1, a2))", "workbook = xlsxwriter.Workbook('app/smth1/smth2/Expenses01.xlsx')", "[x[0] for x in a]", "s.strip()", "p.terminate()", "subprocess.call(['shutdown', '/a '])", "platform.system()", "np.savetxt('test.txt', x)", "print(re.sub('(\\\\W)\\\\1+', '\\\\1', a))", "sorted(yourdata, reverse=True)", "line = re.sub('[!@#$]', '', line)", "line = re.sub('[!@#$]', '', line)", "line.strip()", "re.sub('<[^>]*>', '', mystring)", "line = re.sub('[!@#$]', '', line)", "sum(j ** i for i, j in enumerate(l, 1))", "dict((x, set(y) & set(d1.get(x, ()))) for x, y in d2.items())", "c = [b[i] for i in index]", "[k for k, v in dictA.items() if v.count('duck') > 1]", "d = dict((k, v) for k, v in d.items() if v > 0)", "a.pop(1)", "no_integers = [x for x in mylist if not isinstance(x, int)]", "dict['Apple']['American']", "list(map(list, set(map(lambda i: tuple(i), testdata))))", "df = pandas.DataFrame(data, columns=['R_Number', 'C_Number', 'Avg', 'Std'])", "datetime.datetime.strptime('2011, 4, 0', '%Y, %U, %w')", "time.sleep(0.1)", "sum(d.values())", "sorted(set(itertools.chain.from_iterable(sequences)))", "new_string = re.sub('\"(\\\\d+),(\\\\d+)\"', '\\\\1.\\\\2', original_string)", "str.find('g')", "pickle.dump(itemlist, outfile)", "sentence = re.sub('\\\\s+', '', sentence, flags=re.UNICODE)", "struct.unpack('f', struct.pack('f', 0.00582811585976))", "ex.groupby(level='A').agg(lambda x: x.index.get_level_values(1).nunique())", "df['C'] = df['A'] + df['B']", "set(['a', 'b']).issubset(['a', 'b', 'c'])", "re.sub('$\\\\d+\\\\W+|\\\\b\\\\d+\\\\b|\\\\W+\\\\d+$', '', s)", "[(v, k) for k, v in list(d.items())]", "sorted(l, key=(lambda x: x[2]))", "[(v, k) for k, v in list(d.items())]", "sorted(l, key=(lambda x: x[2]))", "sum(x * y for x, y in zip(a, b))", "print(' '.join(OrderedDict.fromkeys(s)))", "Employees.objects.values_list('eng_name', flat=True)", "random.choice(foo)", "[(x / y) for x, y in zip(a, b)]", "y = [row[:] for row in x]", "zip(*[[1, 2], [3, 4], [5, 6]])", "r = requests.head(url)\nreturn (r.status_code == 200)", "df['A_perc'] = df['A'] / df['sum']", "User.objects.filter(userprofile__level__gte=0)", "list(grouper(2, [1, 2, 3, 4, 5, 6, 7]))", "dt -= datetime.timedelta(hours=5)", "zip([1, 2], [3, 4])", "dt -= datetime.timedelta(hours=5)", "zip([1, 2], [3, 4])", "[(x, lst2[i]) for i, x in enumerate(lst)]", "df.drop(df.columns[[0, 1, 3]], axis=1)", "gca().get_lines()[n].get_xydata()", "sorted(li, key=operator.itemgetter(1), reverse=True)", "[i for i, e in enumerate(a) if e != 0]", "df.groupby(df.index).sum()", "pandas.concat([df1, df2], axis=1)", "[int(x) for x in '0,1,2'.split(',')]", "[y for x in range(3) for y in [x, x]]", "df.groupby(['stock', 'same1', 'same2'], as_index=False)['positions'].sum()", "datetime.datetime.now().date()", "bin(ord('P'))", "set(['a', 'b']).issubset(['b', 'a', 'foo', 'bar'])", "[(x / y) for x, y in zip(a, b)]", "print(all(word[0].isupper() for word in words))", "sorted(the_list, key=lambda x: int(x.split('_')[1]))", "s.sort(key=operator.attrgetter('resultType'))", "s.sort(key=operator.attrgetter('resultType'))", "list(itertools.chain(*a))", "[''.join(x) for x in a]", "sorted(lst, reverse=True)", "s1 = pd.merge(df1, df2, how='inner', on=['user_id'])", "['hello{0}'.format(i) for i in a]", "zip([1, 2], [3, 4])", "list(d.values())", "len([1, 2, 3])", "calendar.monthrange(year, month)[1]", "numpy.in1d(b, a).all()", "np.einsum('ji,i->j', a, b)", "os.path.realpath(path)", "'used\\u200b'.replace('\\u200b', '*')", "sys.exit('some error message')", "hex(int(''.join([str(int(b)) for b in walls]), 2))", "df.isnull().values.any()", "pd.DataFrame(df.values * df2.values, columns=df.columns, index=df.index)", "re.findall('([0-9]+)([A-Z])', '20M10000N80M')", "[s.strip() for s in input().split(',')]", "print('Total cost is: ${:,.2f}'.format(TotalAmount))", "sentence.strip()", "shutil.copy('file.txt', 'file2.txt')", "line.strip().split(' ')", "re.sub('[^\\\\x00-\\\\x7F]+', ' ', text)", "np.count_nonzero(~np.isnan(data))", "datetime.datetime.fromtimestamp(myNumber).strftime('%Y-%m-%d %H:%M:%S')", "dateobj = datetime.datetime.strptime(datestr, '%Y-%m-%d').date()", "a.remove(6)", "[element for i, element in enumerate(centroids) if i not in index]", "print('Hello, {0}, how do you do?'.format(input('Enter name here: ')))", "len([1 for i in j if (i > 5)])", "[i for i, v in enumerate(a) if v > 4]", "df.set_index('month')", "return_code = subprocess.call('echo Hello World', shell=True)", "return_code = subprocess.call('echo Hello World', shell=True)", "[(i, sum(j) / len(j)) for i, j in list(d.items())]", "datetime.datetime.today().strftime('%Y-%m-%d')", "df.drop(df.index[[1, 3]], inplace=True)", "my_list.pop(2)", "my_list.pop(2)", "[x[0] for x in G]", "from functools import reduce\nreduce(lambda x, y: x * y, [1, 2, 3, 4, 5, 6])", "np.isnan(a).sum() / np.prod(a.shape)", "df2['revenue'] = df2.CET.map(df1.set_index('date')['revenue'])", "df2 = pd.DataFrame(index=df1.index)", "[item.strip() for item in my_string.split(',')]", "outfile.write('\\n'.join(itemlist))", "os.system('msbuild project.sln /p:Configuration=Debug')", "df.set_index('id').to_dict()", "soup.find_all('div', class_='crBlock ')", "ftp.storbinary('STOR myfile.txt', open('myfile.txt', 'rb'))", "zip(*sorted(enumerate(a), key=operator.itemgetter(1)))[0][-2:]", "df.loc[df.groupby('User')['X'].transform(sum) == 0]", "\"\"\"{} %s {}\"\"\".format('foo', 'bar')", "datetime.datetime.strptime('2011, 4, 0', '%Y, %U, %w')", "df.set_index(['year', 'month', 'item']).unstack(level=-1)", "t = datetime.datetime.now()\n(t - datetime.timedelta(hours=1, minutes=10))", "now = datetime.datetime.now().strftime('%H:%M:%S')", "sum(item['gold'] for item in example_list)", "[x for x in items if x[2] == 0]", "[y['baz'] for x in foos for y in x['bar']]", "df.groupby('id').agg(lambda x: x.tolist())", "urllib.request.urlretrieve('http://randomsite.com/file.gz', 'file.gz')", "\"\"\"{0:.{1}%}\"\"\".format(value, digits)", "re.sub('[^A-Z]', '', s)", "'Mac EOL\\r'.rstrip('\\r\\n')", "df = df[['x', 'y', 'a', 'b']]", "re.sub('\\\\[.*?\\\\]', '', 'abcd[e]yth[ac]ytwec')", "re.sub('\\\\[.*?\\\\]', '', 'abcd[e]yth[ac]ytwec')", "'test string\\n'.rstrip()", "re.sub('(?m)^\\\\s+', '', 'a\\n b\\n c')", "myList = [i.split('\\t')[0] for i in myList]", "out = ''.join(c for c in asking if c not in ('!', '.', ':'))", "super(ChildClass, self).__init__(*args, **kwargs)", "myString.strip()", "' Hello '.strip()", "print(set(re.sub('[\\x00-\\x7f]', '', '\\xa3\\u20ac\\xa3\\u20ac')))", "[(i, j) for i, j in zip(lst, lst2)]", "u = s.decode('utf-8-sig')", "df[df['A'].isin([3, 6])]", "json.dumps({'apple': 'cat', 'banana': 'dog', 'pear': 'fish'})", "d = pd.DataFrame(0, index=np.arange(len(data)), columns=feature_list)", "subprocess.call(['test.sh', str(domid)])", "bin(ord('P'))", "tst2 = str(tst)", "tst2 = str(tst)", "sorted(unsorted, key=lambda element: (element[1], element[2]))", "string2.replace('', string1)[len(string1):-len(string1)]", "s1 = pd.merge(df1, df2, how='inner', on=['user_id'])", "super(Instructor, self).__init__(name, year)", "cleaned = [x for x in your_list if x]", "np.dot([1, 0, 0, 1, 0, 0], [[0, 1], [1, 1], [1, 0], [1, 0], [1, 1], [0, 1]])", "\"\"\" \"\"\".join(my_list)", "[('%.2d' % i) for i in range(16)]", "df.drop('column_name', axis=1, inplace=True)", "[(x, lst2[i]) for i, x in enumerate(lst)]", "return re.sub('\\\\p{P}+', '', text)", "print(max(d, key=lambda x: (d[x]['salary'], d[x]['bonus'])))", "os.environ['DEBUSSY'] = '1'", "sum(1 for i, j in zip(a, b) if i != j)", "np.sqrt(((A - B) ** 2).sum(-1))", "pd.concat(map(pd.DataFrame, iter(d.values())), keys=list(d.keys())).stack().unstack(0)", "np.isnan(a).sum() / np.prod(a.shape)", "numpy.delete(a, index)", "[list(g) for _, g in itertools.groupby(test, lambda x: x.partition('_')[0])]", "df.isnull().values.any()", "parser.ParseFile(open('sample.xml', 'rb'))", "parser.ParseFile(open('sample.xml', 'rb'))", "df.groupby(['PplNum', 'RoomNum']).cumcount() + 1", "time.strftime('%l:%M%p %z on %b %d, %Y')", "url = urllib.parse.unquote(url).decode('utf8')", "dataList.sort(key=lambda x: x[1])", "zip([1, 2], [3, 4])", "[list(group) for key, group in itertools.groupby(data, operator.itemgetter(1))]", "[list(group) for key, group in itertools.groupby(data, operator.itemgetter(1))]", "list(permutations(list(range(9)), 2))", "base64.urlsafe_b64decode(uenc.encode('ascii'))", "binascii.a2b_hex(s)", "time.strftime('%l:%M%p %z on %b %d, %Y')", "datetime.datetime.today().strftime('%Y-%m-%d')", "apple.decode('iso-8859-1').encode('utf8')", "set([1, 2, 3]) ^ set([3, 4, 5])", "any(e in lestring for e in lelist)", "df['just_date'] = df['dates'].dt.date", "re.sub('<[^>]*>', '', mystring)", "any(substring in string for substring in substring_list)", "df = df.drop('column_name', 1)", "map(dict, zip(*[[(k, v) for v in value] for k, value in list(d.items())]))", "a.update([3, 4])", "a.update([3, 4])", "os.path.dirname(sys.executable)", "re.findall('\\\\[[^\\\\]]*\\\\]|\"[^\"]*\"|\\\\S+', s)", "{x[1]: x for x in lol}", "datetime.datetime.strptime(s, '%Y-%m-%dT%H:%M:%SZ')", "s.decode('unicode_escape')", "time.ctime(os.path.getctime(file))", "sys.path.append('/path/to/2014_07_13_test')", "a = open('pdf_reference.pdf', 'rb').read().encode('base64')", "[{k: v for k, v in d.items() if k != 'mykey1'} for d in mylist]", "first_name = request.form.get('firstname')", "plt.plot(list(range(10)), linestyle='--', marker='o', color='b')", "df.toPandas().to_csv('mycsv.csv')", "L.sort(key=operator.itemgetter(1))", "re.split(' +', str1)", "'%0.12d' % random.randint(0, 999999999999)", "print(re.match('(\\\\d+(\\\\.\\\\d+)?)', '3434.35353').group(1))", "pat = re.compile('^\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}$')", "os.system(\"awk '{print $10, $11}' test.txt > test2.txt\")", "my_list.sort(key=lambda x: x[1])", "map(lambda t: (t[1], t[0]), mylist)", "map(lambda t: (t[1], t[0]), mylist)", "shutil.rmtree(path, ignore_errors=False, onerror=None)", "shutil.rmtree(path, ignore_errors=False, onerror=None)", "print(glob.glob('/home/adam/*.txt'))", "fn = os.path.join(os.path.dirname(__file__), 'my_file')", "os.chdir('c:\\\\Users\\\\uname\\\\desktop\\\\python')", "datetime.utcnow()", "os.path.expanduser('~user')", "df.sort(['Peak', 'Weeks'], ascending=[True, False], inplace=True)", "[(c / t) for c, t in zip(conversions, trials)]", "[(x + y) for x in '12345' for y in 'ab']", "webbrowser.open_new(url)", "return s[0].upper() + s[1:]", "result = [x for x in list_a if x[0] in list_b]", "ts.plot(marker='.')", "parser.ParseFile(open('sample.xml', 'rb'))", "my_list.sort(key=lambda x: x[1])", "df2['revenue'] = df2.CET.map(df1.set_index('date')['revenue'])", "s.lstrip()", "\"\"\"\"\"\".join([c for c in strs if c.isdigit()])", "[i.split() for i in re.findall('\\\\[([^\\\\[\\\\]]+)\\\\]', a)]", "[s.strip() for s in input().split(',')]", "a = a.replace(char, '')", "os.remove(filename)", "new_list = [x.split()[-1] for x in Original_List]", "some_list[(-2)]", "open('file.txt', 'w').close()", "emaillist = '\\n'.join([item[0] for item in queryresult])", "zip([1, 2], [3, 4])", "print('your string'.decode('string_escape'))", "datetime.datetime.strptime('01-Jan-1995', '%d-%b-%Y')", "\"\"\"\"\"\".join(c for c in my_string if c.isdigit())", "plt.plot(list(range(10)), linestyle='--', marker='o', color='b')", "d = {(a.lower(), b): v for (a, b), v in list(d.items())}", "pd.concat(g for _, g in df.groupby('ID') if len(g) > 1)", "some_list[(-1)]", "[map(int, x.split('\\t')) for x in s.rstrip().split('\\r\\n')]", "df[df.columns - ['T1_V6']]", "df.loc[df['column_name'] == some_value]", "[k for k, g in itertools.groupby([1, 2, 2, 3, 2, 2, 4])]", "sorted(set(itertools.chain.from_iterable(sequences)))", "sorted(list_of_tuples, key=lambda tup: tup[1])", "soup.find_all('a', href=re.compile('^(?!(?:[a-zA-Z][a-zA-Z0-9+.-]*:|//))'))", "np.concatenate(input_list).ravel().tolist()", "struct.pack('<I', 1633837924)", "subprocess.call('grep -r PASSED *.log | sort -u | wc -l', shell=True)", "os.path.realpath(path)", "writer.writerow(A)", "struct.unpack('d', b8)[0]", "a.sort(key=lambda x: b.index(x[0]))", "a.sort(key=lambda x: b.index(x[0]))", "ax.set_title('$%s \\\\times 10^{%s}$' % ('3.5', '+20'))", "random.sample(range(1, 50), 6)", "df.sub(df.mean(axis=1), axis=0)", "dict((k.lower(), v) for k, v in {'My Key': 'My Value'}.items())", "print('\\xc5\\xc4\\xd6'.encode('UTF8'))", "output = open('/home/user/test/wsservice/data.pkl', 'wb')", "driver.execute_script('window.scrollTo(0, Y)')", "print('{0:.2f}'.format(your_number))", "Image.open('pathToFile').show()", "sum(item['gold'] for item in example_list)", "np.vstack(np.meshgrid(x_p, y_p, z_p)).reshape(3, -1).T", "{{car.date_of_manufacture | datetime}}", "Content.objects.all().order_by('?')[:100]", "[0, 0, 1, 1, 2, 2, 3, 3, 4, 4]", "np.count_nonzero(~np.isnan(data))", "a.update(b)", "print('\\u0420\\u043e\\u0441\\u0441\\u0438\\u044f')", "sum(1 for i in it)", "ax.xaxis.set_ticks_position('top')", "print('Value is \"{}\"'.format(value))", "str_list = [['{0:.8e}'.format(flt) for flt in sublist] for sublist in lst]", "r = int(''.join(map(str, x)))", "from functools import reduce\nreduce(lambda x, y: 10 * x + y, [1, 2, 3, 4, 5])", "zip(list_a, list_b)", "[i[0] for i in a]", "[d for d in a if d['name'] == 'pluto']", "datetime.datetime.strptime('24052010', '%d%m%Y').date()", "datetime.datetime.fromtimestamp(ms / 1000.0)", "df.sort('m')", "data.apply(lambda x: sorted(x, 3))", "img = Image.open('picture.jpg')\nImg.show", "str = open('very_Important.txt', 'r').read()", "img = Image.open('picture.jpg')\nImg.show", "data.loc[:, (list(itertools.product(['one', 'two'], ['a', 'c'])))]", "if (not myString):\n    pass", "B = np.reshape(A, (-1, 2))", "B = np.reshape(A, (-1, 2))", "arr[arr != 0].min()", "B = np.reshape(A, (-1, 2))", "l[:3] + l[-3:]", "\"\"\"\"\"\".join('{}{}'.format(key, val) for key, val in list(adict.items()))", "arr[arr != 0].min()", "[]", "dict((i, i * 2) for i in range(10))", "pattern = re.compile('(?:review: )?(http://url.com/(\\\\d+))\\\\s?', re.IGNORECASE)", "shutil.copy2('/dir/file.ext', '/new/dir/newname.ext')", "np.any(np.in1d(a1, a2))", "print(hashlib.md5(open(full_path, 'rb').read()).hexdigest())", "y = [row[:] for row in x]", "app.run(host='192.168.0.58', port=9000, debug=False)", "re.sub('(http://\\\\S+|\\\\S*[^\\\\w\\\\s]\\\\S*)', '', a)", "imtag = re.match('<img.*?>', line).group(0)", "struct.unpack('>q', s)[0]", "struct.unpack('>q', s)[0]", "chr(int('fd9b', 16)).encode('utf-8')", "int('01010101111', 2)", "struct.pack('<I', 1633837924)", "return (bool(str1) ^ bool(str2))", "print(t.decode('unicode_escape'))", "re.findall('\\\\[(.*?)\\\\]', mystring)", "os.listdir('somedirectory')", "[x for x in li if 'ar' in x[2]]", "mylist.sort(key=lambda d: (d['weight'], d['factor']))", "mylist.sort(key=lambda d: (d['weight'], d['factor']))", "lst.sort(key=lambda x: x[2], reverse=True)", "pd.merge(y, x, on='k')[['a', 'b', 'y']]", "default_data.update({'item4': 4, 'item5': 5, })", "\"\"\"\u0001ABC\"\"\".encode('hex')", "int('11111111', 2)", "print('[{0}, {1}, {2}]'.format(1, 2, 3))", "hex(65)", "parsed_html = BeautifulSoup(html)\nprint(parsed_html.body.find('div', attrs={'class': 'container', }).text)", "re.findall('a*?bc*?', 'aabcc', re.DOTALL)", "sys.exit('aa! errors!')", "df.colour.value_counts().plot(kind='bar')", "line = line.translate(string.maketrans('', ''), '!@#$')", "line = line.translate(string.maketrans('', ''), '!@#$')", "line = line.translate(string.maketrans('', ''), '!@#$')", "print(my_string.split(', ', 1)[1])", "[list(t) for t in zip(*list_of_tuples)]", "print((random.randint(0, 9)))", "print(text.encode('windows-1252'))", "os.path.commonprefix(['/usr/var', '/usr/var2/log'])", "super(Executive, self).__init__(*args)", "re.sub('[^A-Z]', '', s)", "re.findall('([a-z])*', 'f233op')", "'Hello\\n\\n\\n'.rstrip('\\n')", "all(value == 0 for value in list(your_dict.values()))", "datetime.datetime.strptime('16Sep2012', '%d%b%Y')", "datetime.datetime.strptime('16Sep2012', '%d%b%Y')", "setStyleSheet('QPushButton {background-color: #A3C1DA; color: red;}')", "' '.join((str(x) for x in L))", "\"\"\"\\\\xc3\\\\x85\u3042\"\"\".encode('utf-8')", "out = ''.join(c for c in asking if c not in ('!', '.', ':'))", "[(d['Name'], d['Age']) for d in thisismylist]", "[w for w in open('file.txt') if not re.search('[aeiou]{2}', w)]", "sorted_list_of_keyvalues = sorted(list(ips_data.items()), key=item[1]['data_two'])", "datetime.datetime.strptime('03:55', '%H:%M').time()", "datetime.datetime.strptime('03:55', '%H:%M').time()", "open('ComponentReport-DJI.xls', 'rb').read(200)", "(type(x) == int)", "pd.concat([students, pd.DataFrame(marks)], axis=1)", "driver.execute_script('window.scrollTo(0, Y)')", "file_name = wget.download(file_url)", "pyplot.plot(x, y, color='#112233')", "s.split(' ', 1)[1]", "urllib.parse.unquote(urllib.parse.unquote(some_string))", "results = [item['value'] for item in test_data]", "decimal.Decimal(random.randrange(10000)) / 100", "itertools.permutations([1, 2, 3])", "ast.literal_eval('0xdeadbeef')", "r = requests.get(url, params=payload)", "urllib.request.urlretrieve('http://randomsite.com/file.gz', 'file.gz')", "testfile = urllib.request.URLopener()\ntestfile.retrieve('http://randomsite.com/file.gz', 'file.gz')", "urllib.request.urlretrieve('http://randomsite.com/file.gz', 'file.gz')", "\"\"\"\"\"\".join('{}{}'.format(key, val) for key, val in list(adict.items()))", "df['x']['C'] = 10", "sorted(zipped, key=lambda x: x[1])", "sorted(zipped, key=lambda x: x[1])", "dict(zip(my_list, map(my_dictionary.get, my_list)))", "dict(zip(my_list, map(my_dictionary.get, my_list)))", "[(v, k) for k, v in d.items()]", "d = {key: value for (key, value) in iterable}", "dict(zip(my_list, map(my_dictionary.get, my_list)))", "dict(zip(my_list, map(my_dictionary.get, my_list)))", "dict(zip(my_list, map(my_dictionary.get, my_list)))", "df[df.columns - ['T1_V6']]", "dogtail.rawinput.click(100, 100)", "[d['key'] for d in l]", "subprocess.call('tar c my_dir | md5sum', shell=True)", "lambda x, y: x + y", "{p.id: {'id': p.id, 'position': ind} for ind, p in enumerate(p_list)}", "a[np.argmin(a[:, (1)])]", "sorted(list_of_tuples, key=lambda tup: tup[1])", "l1.sort(key=lambda x: int(x[0]))", "[(x + y) for x, y in zip(first, second)]", "l[:3] + l[-3:]", "sys.path.insert(0, '/path/to/application/app/folder')\nimport file", "driver.page_source", "datetime.datetime.now().isoformat()", "re.sub('.*I', 'I', stri)", "numpy.concatenate([a, b])", "ast.literal_eval('(1,2,3,4)')", "socket.inet_ntoa(struct.pack('!L', 2130706433))", "re.sub('\\\\b(this|string)\\\\b', '<markup>\\\\1</markup>', 'this is my string')", "plt.savefig('test.png', bbox_inches='tight')", "s.sort(key=operator.itemgetter(1, 2))", "br.form.add_file(open(filename), 'text/plain', filename)", "df.to_sparse(0)", "datetime.datetime.strptime('01-Jan-1995', '%d-%b-%Y')", "s = s.replace(',', '')", "re.split('\\\\.\\\\s', re.sub('\\\\.\\\\s*$', '', text))", "np.mean(np.array([old_set, new_set]), axis=0)", "print(np.array(list(mystr), dtype=int))", "sorted(set(my_list))", "newcontents = contents.replace('a', 'e').replace('s', '3')", "unicodedata.normalize('NFKD', title).encode('ascii', 'ignore')", "stream = os.popen('some_command with args')", "df.loc[df['column_name'] == some_value]", "datetime.datetime.combine(dateobject, datetime.time())", "sorted(a, key=lambda x: (sum(x[1:3]), x[0]))", "df = df.set_index(['TRX_DATE'])", "d = pd.DataFrame(0, index=np.arange(len(data)), columns=feature_list)", "df.groupby('ID').head(4)", "df.loc[df['column_name'] == some_value]", "dict((v, k) for k, v in my_dict.items())", "[{k: v for k, v in d.items() if k != 'mykey1'} for d in mylist]", "[{k: v for k, v in d.items() if k != 'mykey1'} for d in mylist]", "np.outer(a, b)", "[list(a) for a in zip([1, 2, 3], [4, 5, 6], [7, 8, 9])]", "mylist.sort()", "a.remove(c)", "df.Country.value_counts().reset_index(name='Sum of Accidents')", "browser.find_elements_by_xpath(\"//*[@type='submit']\").get_attribute('value')", "browser.find_elements_by_xpath(\"//*[@type='submit']\").get_attribute('value')", "server = smtplib.SMTP('smtp.gmail.com', 587)", "stringnamehere.decode('utf-8', 'ignore')", "dict([(k, v) for k, v in zip(keys, values)])", "os.rename('Joe Blow', 'Blow, Joe')", "A[np.all(np.any(A - B[:, (None)], axis=2), axis=0)]", "any(item[2] == 0 for item in items)", "[(x + y) for x, y in zip(first, second)]", "sorted_list = sorted(list_to_sort, key=itemgetter(2, 0, 1))", "int('  23  ')", "open('test', 'a+b').write('koko')", "df.groupby(level=0).agg(['sum', 'count', 'std'])", "p.terminate()", "exec(compile(open('file.py').read(), 'file.py', 'exec'))", "[int(x) for x in list('{0:0b}'.format(8))]", "slice = [arr[i][0:2] for i in range(0, 2)]", "list(grouper(2, [1, 2, 3, 4, 5, 6, 7]))", "sorted(l, key=lambda x: int(re.search('\\\\d+', x).group(0)))", "formatter = logging.Formatter('%(asctime)s;%(levelname)s;%(message)s')", "males = df[(df[Gender] == 'Male') & (df[Year] == 2014)]", "s = s[beginning:(beginning + LENGTH)]", "unsorted_list.sort(key=lambda x: x[3])", "re.findall('\\\\[(.*?)\\\\]', mystring)", "s.reset_index(0).reset_index(drop=True)", "\"\"\"foo bar bar bar\"\"\".replace('bar', 'XXX', 1).find('bar')", "s = s[beginning:(beginning + LENGTH)]", "df['Date'] = df['Date'].apply(lambda x: int(str(x)[-4:]))", "strg.startswith(('0', '1', '2', '3', '4', '5', '6', '7', '8', '9'))", "del my_list[2:6]", "re.match('(.*?[.?!](?:\\\\s+.*?[.?!]){0,1})', phrase).group(1)", "sorted(list(y.items()), key=lambda x: (x[1], x[0]), reverse=True)", "re.findall('[\\u4e00-\\u9fff]+', ipath)", "driver.find_element_by_css_selector(\"a[href^='javascript']\").click()", "[m.start() for m in re.finditer('test', 'test test test test')]", "[item.strip() for item in my_string.split(',')]", "\"\"\"0,1,2\"\"\".split(',')", "your_list.sort(key=lambda x: x.anniversary_score)", "exec(compile(open('file.py').read(), 'file.py', 'exec'))", "exec(compile(open('filename.py').read(), 'filename.py', 'exec'))", "copyfile(src, dst)", "f.write('text to write\\n')", "t = datetime.datetime.now()\n(t - datetime.timedelta(hours=1, minutes=10))", "[m.start() for m in re.finditer('test', 'test test test test')]", "re.split('\\\\t+', yas.rstrip('\\t'))", "subprocess.call(['test.sh', str(domid)])", "list(itertools.chain.from_iterable(list2d))", "datetime.datetime.strptime('10/05/2012', '%d/%m/%Y').strftime('%Y-%m-%d')", "datetime.datetime.strptime('10/05/2012', '%d/%m/%Y').strftime('%Y-%m-%d')", "list(set('aaabcabccd'))", "cleaned = [x for x in your_list if x]", "(first.lower() == second.lower())", "subprocess.call(['java', '-jar', 'Blender.jar'])", "plt.savefig('filename.png', dpi=300)", "legend(numpoints=1)", "df.colour.value_counts().plot(kind='bar')", "{{car.date_of_manufacture.strftime('%Y-%m-%d')}}", "x_file = open(os.path.join(direct, '5_1.txt'), 'r')", "x_file = open(os.path.join(direct, '5_1.txt'), 'r')", "p.terminate()", "subprocess.Popen(['bash', '-c', '. foo.sh; go'])", "p.wait()", "[a[i] for i in (1, 2, 5)]", "print(os.path.relpath('/usr/var/log/', '/usr/var'))", "os.listdir(path)", "all(x.count(1) == 3 for x in L)", "soup.findAll('div', style='width=300px;')", "{x[1]: x for x in lol}", "\"\"\"\"\"\".join(chr(ord(c)) for c in 'Andr\\xc3\\xa9')", "string.find('substring')", "[sublist[::-1] for sublist in to_reverse[::-1]]", "print('0x%X' % value)", "\"\"\"\\\\xc3\\\\x85\u3042\"\"\".encode('utf-8')", "t = tuple(x[0] for x in s)", "[(x1 - x2) for x1, x2 in zip(List1, List2)]", "males = df[(df[Gender] == 'Male') & (df[Year] == 2014)]", "users.sort(key=lambda x: order.index(x['id']))", "sorted(enumerate(a), key=lambda x: x[1])", "sentence = ''.join(sentence.split())", "re.sub('$\\\\d+\\\\W+|\\\\b\\\\d+\\\\b|\\\\W+\\\\d+$', '', s)", "s.sort(key=operator.itemgetter(1, 2))", "unsorted_list.sort(key=lambda x: x[3])", "'sdfasdf'.index('cc')", "len([1, 2, 3])", "print(list(itertools.chain.from_iterable(a)))", "map(sum, zip(*lists))", "np.in1d(b, a).nonzero()[0]", "[(a if a else 2) for a in [0, 1, 0, 3]]", "zip(*[[1, 2], [3, 4], [5, 6]])", "df.c_contofficeID.str.replace('^12(?=.{4}$)', '')", "dict(map(lambda s: s.split(':'), ['A:1', 'B:2', 'C:3', 'D:4']))", "list(x.keys()).index('c')", "os.path.isfile(fname)", "subprocess.call('mv /home/somedir/subdir/* somedir/', shell=True)", "df.ix[:-1]", "a[np.all(a != 0, axis=1)]", "calendar.monthrange(2008, 2)", "re.compile('XYZ', re.IGNORECASE).split('fooxyzbar')", "my_datetime.strftime('%B %d, %Y')", "datetime.datetime.strptime(str_date, '%m/%d/%Y').date().isoformat()", "lst = list(itertools.product([0, 1], repeat=3))", "[d['value'] for d in l if 'value' in d]", "[d['value'] for d in l if 'value' in d]", "int('11111111', 2)", "\"\"\",\"\"\".join(x or '0' for x in s.split(','))", "s.strip()", "map(int, ['1', '2', '3'])", "[x for x in l if x[1] == 1]", "s = s[beginning:(beginning + LENGTH)]", "subprocess.Popen(['rm', '-r', 'some.file'])", "df.groupby(by=df.columns, axis=1).mean()", "if ('blah' not in somestring):\n    pass", "driver.find_element_by_id('foo').clear()", "return user.groups.filter(name='Member').exists()", "no_integers = [x for x in mylist if not isinstance(x, int)]", "bar.sort(key=lambda x: (x.attrb1, x.attrb2), reverse=True)", "users.sort(key=lambda x: order.index(x['id']))", "od = collections.OrderedDict(sorted(d.items()))", "df.iloc[:, (np.r_[1:10, (15), (17), 50:100])]", "plt.rc('font', **{'size': '30'})", "np.array([np.arange(3), np.arange(2, -1, -1), np.ones((3,))]).min(axis=0)", "{{json.key1}}", "strftime('%Y-%m-%d %H:%M:%S', gmtime())", "redirect('Home.views.index')", "br.addheaders = [('Cookie', 'cookiename=cookie value')]", "[i for i, v in enumerate(L) if v[0] == 53]", "[x[0] for x in G]", "(date(2010, 12, 31) + relativedelta(months=(+ 1)))", "((2, 3) not in [(2, 3), (5, 6), (9, 1)])", "print(re.findall('[\\\\u0600-\\\\u06FF]+', my_string))", "{{car.date_of_manufacture | datetime}}", "df.to_pickle(file_name)", "mixed.replace('\\r\\n', '\\n').replace('\\r', '\\n')", "open('test', 'a+b').write('koko')", "[d['key'] for d in l]", "C = [(a - b) for a, b in zip(A, B)]", "len(set(mylist)) == 1", "[max(abs(x) for x in arr[i:i + 4]) for i in range(0, len(arr), 4)]", "path = os.path.abspath(amodule.__file__)", "re.findall('TAA(?:[ATGC]{3})+?TAA', seq)", "[x(y) for x, y in zip(functions, values)]", "[(x + tuple(y)) for x, y in zip(zip(a, b), c)]", "pd.merge(df1, df2, left_index=True, right_index=True, how='outer')", "ord('\\u3042')", "[(d['Name'], d['Age']) for d in thisismylist]", "some_func(*params)", "socket.inet_ntoa(struct.pack('!L', 2130706433))", "(datetime.now() - timedelta(1)).strftime('%Y-%m-%d')", "df.groupby((df.a == 'B').shift(1).fillna(0).cumsum())", "lst.sort(key=lambda x: x[2], reverse=True)", "print('\\n\\x1b[4m' + '3' + '\\x1b[0m' + '\\n2')", "a.append(b).reset_index(drop=True)", "x = [[None for _ in range(5)] for _ in range(6)]", "new_list = [x.split()[-1] for x in Original_List]", "requests.post('http://httpbin.org/post', json={'test': 'cheers'})", "from functools import reduce\nreduce(lambda x, y: x * y, [1, 2, 3, 4, 5, 6])", "Counter([1, 2, 2, 2, 3]) - Counter([1, 2])", "np.outer(a, b)", "count.setdefault('a', 0)", "count.setdefault('a', 0)", "all(value == 0 for value in list(your_dict.values()))", "from functools import reduce\nreduce(lambda x, y: 10 * x + y, [1, 2, 3, 4, 5])", "ftp.storbinary('STOR myfile.txt', open('myfile.txt', 'rb'))", "subprocess.call(['./abc.py', arg1, arg2])", "int(math.ceil(x)) - 1", "numpy.in1d(b, a).all()", "[x[1] for x in elements]", "pd.concat((df1, df2), axis=1).mean(axis=1)", "int('a', 16)", "print(bool(a))", "df.set_index(['Name', 'Destination'])", "any(x in string for x in search)", "driver.execute_script('window.scrollTo(0, Y)')", "Counter([1, 2, 2, 2, 3]) - Counter([1, 2])", "ord('\\u3042')", "'\\xd0\\xbc\\xd0\\xb0\\xd1\\x80\\xd0\\xba\\xd0\\xb0'.encode('latin-1')", "\"\"\"\"\"\".join(chr(ord(c)) for c in 'Andr\\xc3\\xa9').decode('utf8')", "print('\"Hello,\\\\nworld!\"'.decode('string_escape'))", "[len(x) for x in s.split()]", "datetime.datetime.strptime('10/05/2012', '%d/%m/%Y').strftime('%Y-%m-%d')", "re.sub('<[^<]+?>', '', text)", "len()", "hex(ord('a'))", "hex(ord('a'))", "dataList.sort(key=lambda x: x[1])", "dataList.sort(key=lambda x: x[1])", "dataList.sort(key=lambda x: x[1])", "os.path.realpath(path)", "root.lift()", "pd.merge(frame_1, frame_2, left_on='county_ID', right_on='countyid')", "\"\"\"\"\"\".join([s[x:x + 2][::-1] for x in range(0, len(s), 2)])", "func(*args)", "soup.find_all('a', href=re.compile('http://www\\\\.iwashere\\\\.com/'))", "urlparse.urldefrag('http://www.address.com/something#something')", "requests.post('http://httpbin.org/post', json={'test': 'cheers'})", "urllib.parse.quote('http://spam.com/go/')", "re.compile('\\xe2\\x80\\x93')", "df1 = pd.read_hdf('/home/.../data.h5', 'firstSet')", "df.groupby(np.arange(len(df.columns)) // 2 + 1, axis=1).sum().add_prefix('s')", "sorted(list(tag_weight.items()), key=lambda x: int(x[1]), reverse=True)", "networkx.draw_networkx_labels(G, pos, labels)", "my_string.split('\\n', 1)[0]", "driver.find_element_by_xpath(\"//option[@value='\" + state + \"']\").click()", "\"\"\"\\\\ud83d\\\\ude4f\"\"\".encode('utf-16', 'surrogatepass').decode('utf-16')", "pandas.read_csv(filename, sep='\\t', lineterminator='\\r')", "print(data['places'][0]['post code'])", "re.sub('\\\\*\\\\*+', '*', text)", "cents_int = int(round(float(dollars.strip('$')) * 100))", "len(set(mylist)) == 1", "min(dicts, key=lambda x: (abs(1.77672955975 - x['ratio']), -x['pixels']))", "today = datetime.datetime.utcnow().date()", "print(df.loc[df['B'].isin(['one', 'three'])])", "plt.gca().invert_xaxis()", "df.ix[df.A == 0, 'B'] = np.nan", "df2 = pd.DataFrame(index=df1.index)", "dparser.parse('monkey 10/01/1980 love banana', fuzzy=True)", "dict(zip(list(range(1, 5)), list(range(7, 11))))", "sum(x * y for x, y in zip(a, b))", "df.values.tolist()", "struct.unpack('<L', 'y\\xcc\\xa6\\xbb')[0]", "[(x, lst2[i]) for i, x in enumerate(lst)]", "[{'key1': a, 'key2': b} for a, b in zip(d['key1'], d['key2'])]", "ftp.retrbinary('RETR %s' % filename, file.write)", "df.ix[df.A == 0, 'B'] = np.nan", "data.apply(lambda x: sorted(x, 3))", "[i for s in [list(d.keys()) for d in LoD] for i in s]", "dt -= datetime.timedelta(hours=5)", "any(item[2] == 0 for item in items)", "y = str(int(x, 16))", "pd.concat([df, pd.get_dummies(df, '', '').astype(int)], axis=1)[order]", "df.to_csv(filename, date_format='%Y%m%d')", "print(round(1123.456789, -1))", "pandas.set_option('display.max_columns', 7)", "print('\\n\\x1b[4m' + '3' + '\\x1b[0m' + '\\n2')", "if (needle in haystack):\n    pass", "subprocess.check_output('echo \"foo\"', shell=True)", "[v for k, v in list(my_dict.items()) if 'Date' in k]", "' '.join((str(x) for x in L))", "len(s.split())", "re.compile('a^')", "DataFrame.from_csv('c:/~/trainSetRel3.txt', sep='\\t')", "df['prod_type'] = 'responsive'", "df['name'].str.replace('\\\\(.*\\\\)', '')", "[float(i) for i in lst]", "max(a_list, key=operator.itemgetter(1))", "subprocess.Popen(['rm', '-r', 'some.file'])", "time.mktime(dt.timetuple()) + dt.microsecond / 1000000.0", "threading.Thread(target=SudsMove).start()", "sorted(yourdata, key=lambda d: d.get('key', {}).get('subkey'), reverse=True)", "lst.sort(key=lambda x: x[2], reverse=True)", "print(np.linspace(1, 3, num=5))", "list(range(9))", "('c' in d)", "[list(g) for _, g in itertools.groupby(test, lambda x: x.partition('_')[0])]", "list(range(11, 17))", "re.findall('\\\\b(?:b+a)+b+\\\\b', mystring)", "re.split('\\n\\\\s*\\n', s)", "a = sorted(a, key=lambda x: float(x))", "a.remove(c)", "datetime.datetime.now()", "sum([sum(x) for x in [[1, 2, 3, 4], [2, 4, 5, 6]]])", "dt -= datetime.timedelta(hours=5)", "dict['Apple']['American']", "for (letter, number) in list(d.items()):\n    pass", "[('%.2d' % i) for i in range(16)]", "random_choice = random.choice(choices)", "random_choice = random.choice(choices)", "random_choice = random.choice(choices)", "random_choice = random.choice(choices)", "numpy.array([[1, 2], [3, 4]])", "sorted(list(dictionary.items()), key=operator.itemgetter(1))", "\"\"\"\"\"\".join(c for c in text if c not in 'aeiouAEIOU')", "newcontents = contents.replace('a', 'e').replace('s', '3')", "re.split('\\\\.\\\\s', re.sub('\\\\.\\\\s*$', '', text))", "pd.merge(y, x, on='k')[['a', 'b', 'y']]", "A[np.arange(A.shape[0])[:, (None)], B]", "connection.send('HTTP/1.0 200 OK\\r\\n\\r\\n')", "'\\xd0\\xbc\\xd0\\xb0\\xd1\\x80\\xd0\\xba\\xd0\\xb0'.encode('latin-1')", "[(x / y) for x, y in zip(a, b)]", "re.compile('XYZ', re.IGNORECASE).split('fooxyzbar')", "re.search('Test(.*)print', testStr, re.DOTALL)", "country, capital = random.choice(list(d.items()))", "[i for s in [list(d.keys()) for d in LoD] for i in s]", "list_.sort(key=lambda x: [x[0], len(x[1]), x[1]])", "b = {a[i]: a[i + 1] for i in range(0, len(a), 2)}", "[item for item in a if sum(item) > 10]", "parser.add_argument('input', nargs='+')", "round(32.268907563, 3)", "os.chdir(path)", "os.chdir(path)", "with open('test1', 'ab') as f:\n    pass", "os.chdir(path)", "print('\\n'.join('  '.join(map(str, row)) for row in t))", "sum([item['gold'] for item in example_list])", "sum([item['gold'] for item in example_list])", "sum(d['success'] for d in s)", "cleaned = [x for x in your_list if x]", "for (root, subFolders, files) in os.walk(rootdir):\n    pass", "my_list.pop(2)", "datetime.datetime.now()", "'x' in ['x', 'd', 'a', 's', 'd', 's']", "Sample.objects.filter(date__range=['2011-01-01', '2011-01-31'])", "subprocess.check_output(['espeak', text], stderr=subprocess.STDOUT)", "df.reindex(['Z', 'C', 'A'])", "set(['stackoverflow', 'google']).issubset(sites)", "[(x, lst2[i]) for i, x in enumerate(lst)]", "df = pandas.DataFrame(data, columns=['R_Number', 'C_Number', 'Avg', 'Std'])", "pandas.read_csv(filename, sep='\\t', lineterminator='\\r')", "ax.set_yscale('log')", "threading.Thread(target=SudsMove).start()", "print(a_module.__file__)", "\"\"\"\"\"\".join(c for c in text if c not in 'aeiouAEIOU')", "print(browser.current_url)", "[(v, k) for k, v in a.items()]", "dict(zip(list(range(1, 5)), list(range(7, 11))))", "[{k: v for k, v in d.items() if k != 'mykey1'} for d in mylist]", "a.update(b)", "df[['A', 'B']].multiply(df['C'], axis='index')", "set([1, 2, 3]) ^ set([3, 4, 5])", "df.loc[(df.loc[:, (df.dtypes != object)] != 0).any(1)]", "\"\"\"-\"\"\".join(a + b for a, b in zip(s[::2], s[1::2]))", "re.findall('\\\\b[A-Z]', formula)", "re.findall('\\\\b[A-Z]', formula)", "print(''.join(choice(ascii_uppercase) for i in range(12)))", "print(''.join(choice(ascii_uppercase) for i in range(12)))", "sys.exit()", "\"\"\"foo bar bar bar\"\"\".replace('bar', 'XXX', 1).find('bar')", "print(', '.join(str(x) for x in list_of_ints))", "re.match('[:;][)(](?![)(])', str)", "mylist.sort(key=operator.itemgetter('weight', 'factor'))", "y = str(int(x, 16))", "pd.melt(x, id_vars=['farm', 'fruit'], var_name='year', value_name='value')", "df.sort(['c1', 'c2'], ascending=[True, True])", "[list(x) for x in zip(*sorted(zip(list1, list2), key=lambda pair: pair[0]))]", "L.reverse()", "df[df.columns[1:]].replace('[\\\\$,]', '', regex=True).astype(float)", "sys.exit(0)", "sum(df.apply(lambda x: sum(x.isnull().values), axis=1) > 0)", "b.isdigit()", "re.sub('$\\\\d+\\\\W+|\\\\b\\\\d+\\\\b|\\\\W+\\\\d+$', '', s)", "re.match('(.*?[.?!](?:\\\\s+.*?[.?!]){0,1})', phrase).group(1)", "(type(x) == int)", "df.isnull().sum()", "your_list.sort(key=lambda x: x.anniversary_score)", "len([1 for i in j if (i > 5)])", "df.replace('-', np.nan)", "driver.find_element_by_xpath('xpath').click()", "return os.path.getctime(path_to_file)", "for (k, v) in sorted(foo.items()):\n    pass", "df.to_csv('c:\\\\data\\\\t.csv', index=False)", "pd.concat([df.drop('b', axis=1), pd.DataFrame(df['b'].tolist())], axis=1)", "items = [item for item in container if item.attribute == value]", "isinstance(s, str)", "if (not seq):\n    pass", "ForkedPdb().set_trace()", "isinstance(s, str)", "if (not seq):\n    pass", "xor(bool(a), bool(b))", "random_choice = random.choice(choices)", "sorted(list_of_tuples, key=lambda tup: tup[1])", "[x[0] for x in G]", "max(a_list, key=operator.itemgetter(1))", "[int(x) for x in bin(8)[2:]]", "print(list(itertools.product([1, 2, 3], [4, 5, 6])))", "print(np.linspace(1, 3, num=4, endpoint=False))", "re.findall('\\\\d|\\\\d,\\\\d\\\\)', '6,7)')", "[[] for i in range(3)]", "dict((v, k) for k, v in map.items())", "result = [sum(b) for b in a]", "subprocess.call(['shutdown', '/a '])", "pd.DataFrame(df.values * df2.values, columns=df.columns, index=df.index)", "subprocess.Popen(['rm', '-r', 'some.file'])", "np.in1d(b, a).nonzero()[0]", "any(item[2] == 0 for item in items)", "sys.exit(0)", "datetime.datetime.now() - datetime.timedelta(days=1)", "\"\"\"Day old bread, 50% sale {0}\"\"\".format('today')", "df = df.drop('column_name', 1)", "sentence.strip()", "df['value'] = df['value'].str[0]", "df['a'].values.tolist()", "re.sub('([a-z])\\\\1+', '\\\\1', 'ffffffbbbbbbbqqq')", "[len(x) for x in s.split()]", "print(' '.join(sorted(set(words), key=words.index)))", "df.isnull().values.any()", "requests.post('http://httpbin.org/post', json={'test': 'cheers'})", "{i: 'updated' for i, j in list(d.items()) if j != 'None'}", "dogtail.rawinput.click(100, 100)", "ex.groupby(level='A').agg(lambda x: x.index.get_level_values(1).nunique())", "numpy.random.random((3, 3))", "np.zeros((6, 9, 20)) + np.array([1, 2, 3, 4, 5, 6, 7, 8, 9]).reshape((1, 9, 1))", "pd.read_csv('D:/Temp/tt.csv', names=list('abcdef'))", "y = [i[0] for i in x]", "x_file = open(os.path.join(direct, '5_1.txt'), 'r')", "sys.path.insert(0, './path/to/your/modules/')", "subprocess.call('command -flags arguments &', shell=True)", "result = [item for word in words for item in word.split(',')]", "[(x + y) for x in '12345' for y in 'ab']", "sorted(list(d.items()), key=lambda k_v: k_v[1], reverse=True)", "sorted(mylist, key=lambda x: order.index(x[1]))", "sorted(list(myDict.items()), key=lambda e: e[1][2])", "plt.gca().invert_xaxis()", "sum(map(lambda x: x * x, l))", "sum(map(lambda x: x * x, l))", "list(chain.from_iterable(a))", "list(chain.from_iterable(a))", "df.groupby((df.a == 'B').shift(1).fillna(0).cumsum())", "instance.__class__.__name__", "ax.xaxis.tick_top()", "list(itertools.chain(*a))", "sorted(list(d.items()), key=lambda k_v: k_v[1], reverse=True)", "np.where(np.in1d(A, B))[0]", "request.GET.get('username', '')", "item = re.sub(' ?\\\\([^)]+\\\\)', '', item)", "a.remove('b')", "print('\\u0420\\u043e\\u0441\\u0441\\u0438\\u044f')", "print(''.join(''.join(i) for i in zip(a2, a1)) + a[-1] if len(a) % 2 else '')", "(datetime.date(2000, 2, 1) - datetime.timedelta(days=1))", "img = Image.open('picture.jpg')\nImg.show", "ast.literal_eval('(1,2,3,4)')", "from functools import reduce\nreduce(lambda x, y: x * y, [1, 2, 3, 4, 5, 6])", "\"\"\", \"\"\".join([(str(k) + ' ' + str(v)) for k, v in list(a.items())])", "sum(item['gold'] for item in example_list)", "cursor.execute('INSERT OR REPLACE INTO master.table1 SELECT * FROM table1')", "os.rename('Joe Blow', 'Blow, Joe')", "os.chmod('my_script.sh', 484)", "os.chmod('my_script.sh', 484)", "{k: (float(d2[k]) / d1[k]) for k in d2}", "df.groupby(df.index).sum()", "[int(s[i:i + 3], 2) for i in range(0, len(s), 3)]", "[int(s[i:i + 3], 2) for i in range(0, len(s), 3)]", "gca().get_lines()[n].get_xydata()", "gzip.open('file.gz', 'rt', encoding='utf-8')", "gzip.open('file.gz', 'rt', encoding='utf-8')", "{i: 'updated' for i, j in list(d.items()) if j != 'None'}", "set(L[0].f.items()).issubset(set(a3.f.items()))", "subprocess.call('mv /home/somedir/subdir/* somedir/', shell=True)", "f = lambda x, y: x + y", "sorted(lst, key=lambda x: (sum(x[1:]), x[0]), reverse=True)", "sorted(lst, key=lambda x: (sum(x[1:]), x[0]), reverse=True)", "df.groupby('id').agg(lambda x: x.tolist())", "sorted(list(data.items()), key=lambda x: x[1])", "[y for x in list(dict.items()) for y in x]", "print([key for key, value in d.items() if value == 1])", "print([key for key, value in list(d.items()) if value == 1])", "with open('file.txt', 'r') as ins:\n    array = []\n    for line in ins:\n        array.append(line)", "re.sub('(.)', '\\\\1\\\\1', text.read(), 0, re.S)", "df['a'].values.tolist()", "os.path.dirname(os.path.abspath(__file__))", "a[:] = [x for x in a if x != [1, 1]]", "[x[0] for x in os.walk(directory)]", "driver.set_window_size(1400, 1000)", "'x' in ['x', 'd', 'a', 's', 'd', 's']", "time.mktime(datetime.datetime.strptime(s, '%d/%m/%Y').timetuple())", "'M\\\\N{AMPERSAND}M\\\\N{APOSTROPHE}s'.encode().decode('unicode-escape')", "subprocess.check_output('echo \"foo\"', shell=True)", "[sorted(item) for item in data]", "sum(df.apply(lambda x: sum(x.isnull().values), axis=1) > 0)", "np.outer(a, b)", "mystring.split(',')", "[v for k, v in list(my_dict.items()) if 'Date' in k]", "list_dict = {t[0]: t for t in tuple_list}", "[m[0] for m in re.compile('((.+?)\\\\2+)').findall('44442(2)2(2)44')]", "x_file = open(os.path.join(direct, '5_1.txt'), 'r')", "df1.merge(df2, how='left', on='word')", "pickle.load(open('afile', 'rb'))", "DataFrame.from_csv('c:/~/trainSetRel3.txt', sep='\\t')", "DataFrame.from_csv('c:/~/trainSetRel3.txt', sep='\\t')", "numpy.loadtxt(open('test.csv', 'rb'), delimiter=',', skiprows=1)", "s = pd.Series(['A', 'B', 'A1R', 'B2', 'AABB4'])", "[tup[0] for tup in A]", "[i.split('\\t', 1)[0] for i in l]", "df['DateStr'] = df['DateObj'].dt.strftime('%d%m%Y')", "print(func.__name__)", "super(ChildClass, self).__init__(*args, **kwargs)", "s.sort(key=operator.itemgetter(1, 2))", "s.split('s')", "raise ValueError('A very specific bad thing happened')", "a[np.argmin(a[:, (1)])]", "np.einsum('ij,kj->jik', X, X)", "my_list.sort(key=lambda x: x[1])", "os.rename(dir, dir + '!')", "print(all(word[0].isupper() for word in words))", "df['a'].values.tolist()", "re.findall('[bcdfghjklmnpqrstvwxyz]+', 'CONCERTATION', re.IGNORECASE)", "re.findall('[bcdfghjklmnpqrstvwxyz]+', 'CONCERTATION', re.IGNORECASE)", "x = map(int, x.split())", "print(''.join(''.join(i) for i in zip(a2, a1)) + a[-1] if len(a) % 2 else '')", "[x[0] for x in l1 if any(x[0] == y[0] for y in l2)]", "sum(sum(x) for x in lists)", "soup.find_all('a', href=re.compile('http://www\\\\.iwashere\\\\.com/'))", "datetime.datetime.now().date()", "np.dot([1, 0, 0, 1, 0, 0], [[0, 1], [1, 1], [1, 0], [1, 0], [1, 1], [0, 1]])", "\"\"\"\"\"\".join(soup.findAll(text=True))", "int(hexString, 16)", "count.setdefault('a', 0)", "re.sub('<[^<]+?>', '', text)", "soup.body.findAll(text='Python')", "len(set(a)) == len(a)", "call(['path/to/python', 'test2.py', 'neededArgumetGoHere'])", "[a[i] for i in (1, 2, 5)]", "ast.literal_eval('(1,2,3,4)')", "np.split(a, [-1])", "fig.subplots_adjust(wspace=0, hspace=0)", "dict(zip(keys, values))", "yourdata.sort(key=lambda e: e['key']['subkey'], reverse=True)", "df['x']['C'] = 10", "print(str(count) + '    ' + str(conv))", "df.loc[df['column_name'] == some_value]", "df.drop(df.columns[[0, 1, 3]], axis=1)", "df.groupby(['stock', 'same1', 'same2'], as_index=False)['positions'].sum()", "df = df.set_index(['TRX_DATE'])", "p = subprocess.Popen('ls', shell=True, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)\nfor line in p.stdout.readlines():\n    print(line, end=' ')\nretval = p.wait()", "df.apply(lambda x: x.tolist(), axis=1)", "df.groupby('ID').head(4)", "print(np.linspace(1, 3, num=5))", "[(a if a else 2) for a in [0, 1, 0, 3]]", "list(d.items())", "datetime.strptime('21/11/06 16:30', '%d/%m/%y %H:%M')", "df2.dropna(subset=['three', 'four', 'five'], how='all')", "df.groupby(level=0, as_index=False).nth(0)", "func(*args)", "print(browser.current_url)", "[(v, k) for k, v in d.items()]", "sum(v for v in list(d.values()) if v > 0)", "[''.join(l) for l in list_of_lists]", "df.to_csv('mydf.tsv', sep='\\t')", "df[['value']].fillna(df.groupby('group').transform('mean'))", "s.split(':', 1)[1]", "[int(s) for s in example_string.split(',')]", "r = requests.get(url, params=payload)", "d = pd.DataFrame(0, index=np.arange(len(data)), columns=feature_list)", "sorted(list(range(len(a))), key=lambda i: a[i])[-2:]", "df.drop(df.columns[[0, 1, 3]], axis=1)", "[d['key'] for d in l]", "print(list(itertools.chain.from_iterable(a)))", "(7 in a)", "any(isinstance(el, list) for el in input_list)", "line = line.translate(string.maketrans('', ''), '!@#$')", "any(e in lestring for e in lelist)", "soup.find_all('a', href=re.compile('http://www\\\\.iwashere\\\\.com/'))", "soup.find_all('a', href=re.compile('http://www\\\\.iwashere\\\\.com/'))", "soup.find_all('a', href=re.compile('http://www\\\\.iwashere\\\\.com/'))", "url.split('&')[-1].replace('=', '') + '.html'", "a[1::2] = -1", "int('a', 16)", "if some_string:\n    pass", "if some_string:\n    pass", "workbook = xlsxwriter.Workbook('app/smth1/smth2/Expenses01.xlsx')", "new_list = my_list[-10:]", "set([i for s in [list(d.keys()) for d in LoD] for i in s])", "str1 = ''.join((str(e) for e in list1))", "root.destroy()", "[''.join(seq) for seq in zip(lst, lst[1:])]", "soup.find_all('a', href=re.compile('^(?!(?:[a-zA-Z][a-zA-Z0-9+.-]*:|//))'))", "print(a_module.__file__)", "print(os.getcwd())", "numpy.dot(numpy.dot(a, m), a)", "re.sub('<[^>]*>', '', mystring)", "[map(int, sublist) for sublist in lst]", "parser.add_argument('--conf', nargs=2, action='append')", "Blog.objects.filter(pk__in=[1, 4, 7])", "globals()['myfunction']()", "map(sum, zip(*l))", "dict((k, v) for k, v in parent_dict.items() if k > 2 and k < 4)", "Counter([1, 2, 2, 2, 3]) - Counter([1, 2])", "[0, 0, 1, 1, 2, 2, 3, 3, 4, 4]", "list(grouper(2, [1, 2, 3, 4, 5, 6, 7]))", "df.groupby('dummy').agg({'returns': [np.mean, np.sum]})", "[item for item in a if 1 in item]", "[x[1] for x in elements]", "sorted(list(data.items()), key=lambda x: x[1])", "list(itertools.product(list(range(-x, y)), repeat=dim))", "datetime.date(2010, 6, 16).isocalendar()[1]", "urllib.request.urlopen('http://www.stackoverflow.com').getcode()", "os.path.expanduser('~user')", "df.sort_values(by='Date')", "sorted(lst, key=lambda x: (sum(x[1:]), x[0]))", "some_list[(-2)]", "re.sub('[^a-zA-Z0-9-_*.]', '', my_string)", "urllib.parse.unquote(url).decode('utf8')", "re.sub('\\\\.(?=[^ .])', '. ', para)", "[(c / t) for c, t in zip(conversions, trials)]", "word = re.sub('([aeiou]):(([aeiou][^aeiou]*){3})$', '\\\\1\\\\2', word)", "word = re.sub('([aeiou]):(([aeiou][^aeiou]*){3})$', '\\\\1\\\\2', word)", "[x for x in L if x is not None]", "re.sub('[\\\\ \\\\n]{2,}', '', yourstring)", "['a', 'b'].index('b')", "re.sub('[\\\\ \\\\n]{2,}', '', yourstring)", "df.groupby('id').agg(lambda x: x.tolist())", "print('[{0}, {1}, {2}]'.format(1, 2, 3))", "cursor.execute('INSERT INTO table VALUES (%s, %s, %s)', (var1, var2, var3))", "re.sub('\\\\s{2,}', '|', line.strip())", "unicodedata.normalize('NFKD', title).encode('ascii', 'ignore')", "[s.strip() for s in input().split(',')]", "y = map(operator.itemgetter(0), x)", "datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')", "re.findall('\\\\w+|[^\\\\w\\\\s]', text, re.UNICODE)", "subprocess.call('start command -flags arguments', shell=True)", "subprocess.call('tar c my_dir | md5sum', shell=True)", "return (x.group(0) for x in re.finditer(\"[A-Za-z']+\", string))", "\"\"\"{:.50f}\"\"\".format(float(a[0] / a[1]))", "int(s, 16)", "cents_int = int(round(float(dollars.strip('$')) * 100))", "list(d.items())", "numpy.array([(key, val) for key, val in result.items()], dtype)", "driver.find_element_by_css_selector(\"a[href^='javascript']\").click()", "df.sort(['Peak', 'Weeks'], ascending=[True, False], inplace=True)", "datetime.datetime.strptime('01-Jan-1995', '%d-%b-%Y')", "fig.set_size_inches(w, h, forward=True)", "re.findall('((?:A|B|C)D)', 'BDE')", "df.set_index(['Name', 'Destination'])", "mylist.sort(key=str.lower)", "sorted(mylist, key=lambda x: order.index(x[1]))", "my_list.sort(key=operator.itemgetter('name'))", "numpy.array([(key, val) for key, val in result.items()], dtype)", "pd.concat([distancesDF, datesDF.dates], axis=1)", "len([1 for i in j if (i > 5)])", "from functools import reduce\nreduce(lambda x, y: 10 * x + y, [1, 2, 3, 4, 5])", "(trace_df['ratio'] > 0).mean()", "df.groupby('User')['X'].filter(lambda x: x.sum() == 0)", "df.drop('column_name', axis=1, inplace=True)", "df.loc[df.groupby('User')['X'].transform(sum) == 0]", "df.replace('-', 'NaN')", "np.zeros((6, 9, 20)) + np.array([1, 2, 3, 4, 5, 6, 7, 8, 9]).reshape((1, 9, 1))", "any(substring in string for substring in substring_list)", "os.remove(filename)", "os.path.realpath(path)", "re.findall('\\\\d+\\\\.\\\\d+', 'Current Level: 13.4 db.')", "os.path.realpath(path)", "[key for key, value in list(my_dict.items()) if set(value).intersection(lst)]", "print(re.search('\\\\bLOG_ADDR\\\\s+(\\\\S+)', line).group(1))", "datetime.datetime.utcnow().isoformat()", "df = pd.read_csv('filename.txt', sep=';', names=['Region Name'])", "i = int(s, 16)", "A = np.array(sorted(A, key=tuple))", "somelist.sort(key=lambda x: x.resultType)", "sorted(list(data.items()), key=lambda x: x[1])", "[d for d in a if d['name'] == 'pluto']", "os.path.split(os.path.abspath(existGDBPath))", "sum(x * y for x, y in zip(a, b))", "sum(x * y for x, y in zip(a, b))", "sum(x * y for x, y in zip(a, b))", "sum(x * y for x, y in zip(a, b))", "url.rsplit('/', 1)[-1]", "[{'key1': a, 'key2': b} for a, b in zip(d['key1'], d['key2'])]", "pandas.read_csv(filename, sep='\\t', lineterminator='\\r')", "s.rfind('&')", "{f[i + 1]: [f[i], f[i + 2]] for i in range(0, len(f), 3)}", "browser.find_elements_by_xpath(\"//*[@type='submit']/@value\").text", "any(d['name'] == 'Test' for d in label)", "struct.unpack('d', struct.pack('Q', int(s2, 0)))[0]", "df['a'] = df['a'].str.replace('in.', ' in. ')", "sorted(list(myDict.items()), key=lambda e: e[1][2])", "soup.body.findAll(text='Python')", "zip(*[[1, 2], [3, 4], [5, 6]])", "list(d.items())", "[d['Name'] for d in thisismylist]", "sum(d.values())", "dict(x[1:] for x in reversed(myListOfTuples))", "url.split('&')", "Blog.objects.filter(pk__in=[1, 4, 7])", "re.sub('\\\\*\\\\*+', '*', text)", "sys.exit('aa! errors!')", "re.findall('[^a]', 'abcd')", "int('01010101111', 2)", "('%.2f' % 13.9499999)", "sorted(a, key=lambda x: (sum(x[1:3]), x[0]), reverse=True)", "pd.to_datetime(df.ID.str[1:-3])", "\"\"\"\"\"\".join(list(OrderedDict.fromkeys('aaabcabccd').keys()))", "\"\"\"\"\"\".join(chr(i) for i in myintegers)", "\"\"\"\"\"\".join(list(OrderedDict.fromkeys('aaabcabccd').keys()))", "urllib.parse.unquote(url).decode('utf8')", "df = df.drop('column_name', 1)", "df['AB'].str.split(' ', 1, expand=True)", "\"\"\"\"\"\".join(list(OrderedDict.fromkeys('aaabcabccd').keys()))", "[x for x in li if 'ar' in x[2]]", "sum(i * i for i in l)", "os.system('GREPDB=\"echo 123\"; /bin/bash -c \"$GREPDB\"')", "sorted(lst, reverse=True)", "strings.sort(key=lambda str: re.sub('.*%(.).*', '\\\\1', str))", "print(sorted(L, key=lambda x: int(x.split('.')[2])))", "sorted(list(myDict.items()), key=lambda e: e[1][2])", "df['a'].tolist()", "sorted(Profile.objects.all(), key=lambda p: p.reputation)", "line = line.translate(string.maketrans('', ''), '!@#$')", "call(['path/to/python', 'test2.py', 'neededArgumetGoHere'])", "os.system('dir c:\\\\')", "os.chmod('my_script.sh', 484)", "driver.set_window_size(1400, 1000)", "\"\"\"\"\"\".join(chr(i) for i in L)", "[item for sublist in l for item in sublist]", "dic.setdefault(key, []).append(value)", "print('\\u25b2'.encode('utf-8'))", "text = re.sub('(\\\\bget\\\\b)', '\\\\1@', text)", "pd.DataFrame(df.values * df2.values, columns=df.columns, index=df.index)", "sys.stdout.flush()", "\"\"\"x = {}\"\"\".format(x.decode('utf8')).encode('utf8')", "df.groupby('dummy').agg({'returns': [np.mean, np.sum]})", "matrix = [([0] * 5) for i in range(5)]", "int('0xa', 16)", "os.kill(process.pid, signal.SIGKILL)", "item = re.sub(' \\\\(\\\\w+\\\\)', '', item)", "a = a[-1:] + a[:-1]", "b.isdigit()", "all(isinstance(x, int) for x in lst)", "os.system('source .bashrc; shopt -s expand_aliases; nuke -x scriptPath')", "scatter(x, y, s=500, color='green', marker='h')", "zip(it, it, it)", "[tup[0] for tup in A]", "df1.sort(['a', 'b'], ascending=[True, False], inplace=True)", "new_string = re.sub('\"(\\\\d+),(\\\\d+)\"', '\\\\1.\\\\2', original_string)", "datetime.datetime.strptime('16Sep2012', '%d%b%Y')", "items.__len__()", "items.__len__()", "self.pushButton.setStyleSheet('background-color: red')", "pyplot.legend(loc=2, fontsize='x-small')", "numpy.array([(x in a) for x in b])", "os.system('start excel.exe <path/to/file>')", "json.load(u)", "[i for i in range(len(a)) if a[i] > 2]", "int('01010101111', 2)", "print(''.join(map(str, data)))", "[int(d) for d in str(bin(x))[2:]]", "quit()", "map(lambda t: (t[1], t[0]), mylist)", "re.findall('\\\\w+|[^\\\\w\\\\s]', text, re.UNICODE)", "print(list(itertools.combinations({1, 2, 3, 4}, 3)))", "re.findall('[-+]?\\\\d*\\\\.\\\\d+|\\\\d+', 'Current Level: -13.2 db or 14.2 or 3')", "all(word in d for word in ['somekey', 'someotherkey', 'somekeyggg'])", "dict((v, k) for k, v in map.items())", "b.update(d)", "my_list.sort(key=lambda x: x[1])", "df['just_date'] = df['dates'].dt.date", "system('/path/to/my/venv/bin/python myscript.py')", "[[2, 3, 4], [2, 3, 4], [2, 3, 4]]", "re.findall('\\\\b[A-Z]', formula)", "return len(s.encode('utf-8'))", "re.split('\\\\W+', 'Words, words, words.')", "f.write(open('xxx.mp4', 'rb').read())", "upload_url = blobstore.create_upload_url('/upload', gs_bucket_name='my_bucket')", "sys.path.append('/path/to/main_folder')", "f = open('words.txt', 'rU')", "system('/path/to/my/venv/bin/python myscript.py')", "any(isinstance(el, list) for el in input_list)", "if (len(li) == 0):\n    pass", "x_file = open(os.path.join(direct, '5_1.txt'), 'r')", "os.system('start \"$file\"')", "print(s.split(','))", "[x[0] for x in rows]", "request.META['HTTP_HOST']", "[(x + tuple(y)) for x, y in zip(zip(a, b), c)]", "\"\"\"{0:,.2f}\"\"\".format(24322.34)", "dict([['two', 2], ['one', 1]])", "d = {key: value for (key, value) in iterable}", "c = [[(i + j) for i, j in zip(e, b)] for e in a]", "[d['value'] for d in l if 'value' in d]", "binascii.a2b_hex(s)", "int(s.split('.')[0])", "GRAVITY = 9.8", "all(word in d for word in ['somekey', 'someotherkey', 'somekeyggg'])", "map(list, permutations([2, 3, 4]))", "datetime.datetime.fromtimestamp(ms / 1000.0)", "np.sqrt(((A - B) ** 2).sum(-1))", "datetime.strptime('2011221', '%Y%W%w')", "copyfile(src, dst)", "pd.DataFrame(df.values * df2.values, columns=df.columns, index=df.index)", "conn = httplib.HTTPConnection('www.python.org')\nconn.request('HEAD', '/')\nr1 = conn.getresponse()\nprint(r1.status, r1.reason)", "len([1, 2, 3])", "dict(zip([1, 2, 3, 4], ['a', 'b', 'c', 'd']))", "unsorted_list.sort(key=lambda x: x[3])", "xs.sort(key=lambda s: len(s))", "[d['key'] for d in l if 'key' in d]", "np.where(a == 1)", "pd.concat([df.drop('b', axis=1), pd.DataFrame(df['b'].tolist())], axis=1)", "df.groupby(['A', 'B'])['C'].unique()", "df[pd.isnull(df).any(axis=1)]", "out = ''.join(c for c in asking if c not in ('!', '.', ':'))", "[l.split('\\\\')[-1] for l in list_dirs]", "re.sub('(?<=[a-z])([A-Z])', '-\\\\1', s).lower()", "print([a for a, b in re.findall('((\\\\w)\\\\2*)', s)])", "all(isinstance(x, int) for x in lst)", "df.fillna(method='ffill', inplace=True)", "a.index(max(a))", "{{car.date_of_manufacture.strftime('%Y-%m-%d')}}", "os.system('screencapture screen.png')", "np.split(a, [-1])", "arr[[0, 1, 1], [1, 0, 2]]", "feature3 = [d.get('Feature3') for d in df.dic]", "winsound.PlaySound('sound.wav', winsound.SND_FILENAME)", "df[df.Col1.isin(['men', 'rocks', 'mountains'])]", "sum(x == chosen_value for x in list(d.values()))", "[i for i, j in enumerate(['foo', 'bar', 'baz']) if j == 'foo']", "sorted(li, key=operator.itemgetter(1), reverse=True)", "df.to_dict('index')", "sorted(list(d.items()), key=lambda k_v: k_v[1], reverse=True)", "sorted(iter(cityPopulation.items()), key=lambda k_v: k_v[1][2], reverse=True)", "r = requests.get(url)", "str.strip()", "'used\\u200b'.replace('\\u200b', '*')", "sum(i * j for i, j in zip(a, b))", "frame.resample('1H').agg({'radiation': np.sum, 'tamb': np.mean})", "new_string = re.sub('\"(\\\\d+),(\\\\d+)\"', '\\\\1.\\\\2', original_string)", "a.update(b)", "print(dict([s.split('=') for s in my_list]))", "sum(d.values())", "res_list = [x[0] for x in rows]", "sorted(a, key=lambda i: list(i.values())[0], reverse=True)", "re.findall('(?::|;|=)(?:-)?(?:\\\\)|\\\\(|D|P)', s)", "datetimevariable.strftime('%Y-%m-%d')", "bin(173)", "os.system('source .bashrc; shopt -s expand_aliases; nuke -x scriptPath')", "app.run(debug=True)", "os.system('source .bashrc; shopt -s expand_aliases; nuke -x scriptPath')", "subprocess.call(['shutdown', '/a '])", "list(d.items())", "[d['key'] for d in l]", "sum(x * y for x, y in list(zip(a, b)))", "np.ma.array(np.tile(arr, 2).reshape(2, 3), mask=~cond).argmax(axis=1)", "[''.join(x) for x in a]", "url('^', include('sms.urls')),", "my_file = Path('/path/to/file')\nif my_file.is_file():\n    pass", "re.split('(d(d)d)', 'aaa bbb ccc ddd eee fff', 1)", "[x[1] for x in L]", "psutil.cpu_percent()\npsutil.virtual_memory()", "x[(-2):]", "((25 < a) & (a < 100)).sum()", "datetime.strptime('2010-11-13 10:33:54.227806', '%Y-%m-%d %H:%M:%S.%f')", "a[1::2] = -1", "a.sort(key=lambda x: b.index(x[0]))", "dict((k, v) for k, v in parent_dict.items() if 2 < k < 4)", "\"\"\"\"\"\".join([1, 2, 3, 4])", "numpy.array([(x in a) for x in b])", "ax.set_xticklabels(ax.xaxis.get_majorticklabels(), rotation=45)", "np.zeros((3, 3)).ravel()", "codecs.open('myfile', 'r', 'iso-8859-1').read()", "codecs.open('myfile', 'r', 'iso-8859-1').read()", "codecs.open('myfile', 'r', 'iso-8859-1').read()", "my_string.split('\\n', 1)[0]", "e = root.xpath('.//a[text()=\"TEXT A\"]')", "print(df.loc[df['B'].isin(['one', 'three'])])", "item = re.sub(' ?\\\\(\\\\w+\\\\)', '', item)", "re.sub('([a-z])\\\\1+', '\\\\1', 'ffffffbbbbbbbqqq')", "dict((k, d.get(k, '') + d1.get(k, '')) for k in keys)", "random.sample(range(1, 50), 6)", "max(alkaline_earth_values, key=lambda x: x[1])", "sorted(mylist, key=lambda x: order.index(x[1]))", "list(set(listA) & set(listB))", "line.strip()", "[x for x in l if x[1] == 1]", "re.findall('\\\\[[^\\\\]]*\\\\]|\"[^\"]*\"|\\\\S+', s)", "df.set_index('id')['value'].to_dict()", "A[np.all(np.any(A - B[:, (None)], axis=2), axis=0)]", "list(d.values())", "dict((key, sum(d[key] for d in dictList)) for key in dictList[0])", "return (bool(str1) ^ bool(str2))", "os.rename('Joe Blow', 'Blow, Joe')", "print(df.loc[df['B'].isin(['one', 'three'])])", "mylist.sort(key=lambda d: (d['weight'], d['factor']))", "\"\"\"Hello {user[name]}\"\"\".format(**{'user': {'name': 'Markus'}})", "df.index", "(3 not in [4, 5, 6])", "some_list[(- n)]", "x = scipy.matrix([1, 2, 3]).transpose()", "sum(l) / float(len(l))", "plt.figure(figsize=(3, 4))", "y = [i[0] for i in x]", "list(df.index)", "df.sort(['a', 'b'], ascending=[True, False])", "df[pd.isnull(df).any(axis=1)]", "if (not myString):\n    pass", "request.POST.getlist('pass_id')", "request.POST.getlist('pass_id')", "request.POST.getlist('pass_id')", "networkx.draw_networkx_labels(G, pos, labels)", "pygame.display.set_mode((0, 0), pygame.FULLSCREEN)", "[m.start() for m in re.finditer('(?=tt)', 'ttt')]", "a.sort(key=lambda x: b.index(x[0]))", "conn = httplib.HTTPConnection('www.python.org')\nconn.request('HEAD', '/')\nr1 = conn.getresponse()\nprint(r1.status, r1.reason)", "\"\"\"{0} {1}\"\"\".format(10, 20)", "print('{:.100f}'.format(2.345e-67))", "int(s.split('.')[0])", "dbb.commit()", "\"\"\",\"\"\".join('Hello')", "hex(65)", "[int(s[i:i + 3], 2) for i in range(0, len(s), 3)]", "list('{0:0b}'.format(8))", "pd.date_range('1/1/2014', periods=12, freq='BM')", "monthly_mean.reset_index().plot(x='index', y='A')", "\"\"\" \"\"\".join(mystring.split())", "df.sub(df.mean(axis=1), axis=0)", "sorted(list(things.keys()), key=lambda x: things[x]['weight'], reverse=True)", "[i for i, v in enumerate(L) if v[0] == 53]", "re.sub('$\\\\d+\\\\W+|\\\\b\\\\d+\\\\b|\\\\W+\\\\d+$', '', s)", "print(any(x in a for x in b))", "(type(x) == int)", "(type(x) == int)", "mylist.sort(key=lambda d: (d['weight'], d['factor']))", "mylist.sort(key=lambda d: (d['weight'], d['factor']))", "sorted(list(d.items()), key=lambda k_v: k_v[1], reverse=True)", "sorted(list(d.items()), key=lambda k_v: k_v[1], reverse=True)", "sorted(trial_list, key=lambda x: trial_dict[x])", "list.sort(key=lambda item: item['date'], reverse=True)", "[(x + y) for x, y in zip(first, second)]", "np.concatenate(input_list).ravel().tolist()", "print(''.join(map(str, data)))", "np.concatenate(input_list).ravel().tolist()", "[x[1] for x in L]", "[k for k, g in itertools.groupby([1, 2, 2, 3, 2, 2, 4])]", "print(arr[1, 1])", "matrix = [([0] * 5) for i in range(5)]", "sum([sum(x) for x in [[1, 2, 3, 4], [2, 4, 5, 6]]])", "np.mean(np.array([old_set, new_set]), axis=0)", "df[pd.isnull(df).any(axis=1)]", "soup.findAll(attrs={'name': 'description'})", "re.sub('[^0-9]', '', 'sdkjh987978asd098as0980a98sd')", "subprocess.call(['/usr/bin/perl', './uireplace.pl', var])", "struct.unpack('f', struct.pack('f', 0.00582811585976))", "struct.unpack('f', struct.pack('f', 0.00582811585976))", "\"\"\"{:.50f}\"\"\".format(float(a[0] / a[1]))", "print('{0:.2f}'.format(your_number))", "h = int(round(h))", "h = int(round(h))", "print(round(1123.456789, -1))", "h = int(round(h))", "print('\\n\\x1b[4m' + '3' + '\\x1b[0m' + '\\n2')", "str_list = [tuple('{0:.8e}'.format(flt) for flt in sublist) for sublist in lst]", "str_list = [tuple('{0:.8e}'.format(flt) for flt in sublist) for sublist in lst]", "str_list = [tuple('{0:.8e}'.format(flt) for flt in sublist) for sublist in lst]", "df.sort_values(['a', 'b'], ascending=[True, False])", "datetime.strptime('21/11/06 16:30', '%d/%m/%y %H:%M')", "raise RuntimeError('specific message')", "dict((k.lower(), v.lower()) for k, v in {'My Key': 'My Value'}.items())", "sum(x * y for x, y in zip(a, b))", "int('010101', 2)", "int('010101', 2)", "driver.get('http://www.google.com.br')", "driver.get('http://www.google.com.br')", "df['a'].str.contains('-')", "df.columns[df.max() > 0]", "my_list.sort(key=lambda x: x[1])", "A[[0, 1], [0, 1]]", "[dict((k, v) for k, v in d.items() if k != 'mykey1') for d in mylist]", "[i for i in y if y[i] == 1]", "print(random.choice(words))", "globals()['myfunction']()", "k = soup.find(text=re.compile('My keywords')).parent.text", "min(dicts, key=lambda x: (abs(1.77672955975 - x['ratio']), -x['pixels']))", "sum(1 for i in it)", "output = ''.join(item[0].upper() for item in input.split())", "m = re.search('\\\\[(\\\\w+)\\\\]', s)", "[next(it) for _ in range(n)]", "numpy.array([(key, val) for key, val in result.items()], dtype)", "sum(x * y for x, y in list(zip(a, b)))", "'test string\\n'.rstrip()", "[item.strip() for item in my_string.split(',')]", "'M\\\\N{AMPERSAND}M\\\\N{APOSTROPHE}s'.encode().decode('unicode-escape')", "'M\\\\N{AMPERSAND}M\\\\N{APOSTROPHE}s'.encode().decode('unicode-escape')", "print(re.sub('(\\\\W)\\\\1+', '\\\\1', a))", "'M\\\\N{AMPERSAND}M\\\\N{APOSTROPHE}s'.encode().decode('unicode-escape')", "str(n) == str(n)[::-1]", "myString.decode('string_escape')", "str.strip()", "'M\\\\N{AMPERSAND}M\\\\N{APOSTROPHE}s'.decode('unicode-escape')", "s.strip()", "l1.sort(key=lambda x: int(x[0]))", "s.decode('utf-8').lower()", "all(value == 0 for value in list(your_dict.values()))", "pd.merge(a, b, on=['A', 'B'], how='outer')", "pd.concat([df_1, df_2.sort_values('y')])", "arr = [line.split(',') for line in open('./urls-eu.csv')]", "[''.join(seq) for seq in zip(lst, lst[1:])]", "print(re.sub('(\\\\W)\\\\1+', '\\\\1', a))", "datetime.strptime('2009/05/13 19:19:30 -0400', '%Y/%m/%d %H:%M:%S %z')", "ftp.retrbinary('RETR %s' % filename, file.write)", "sorted(lst, key=lambda x: x['language'] != 'en')", "re.sub('\\\\.(?=[^ .])', '. ', para)", "[(x, y) for x, y in zip(myList, myList[1:]) if y == 9]", "struct.unpack('d', b8)[0]", "s = re.sub('^\\\\d+\\\\s|\\\\s\\\\d+\\\\s|\\\\s\\\\d+$', ' ', s)", "[x for x in my_list if not any(c.isdigit() for c in x)]", "[x for x in my_list if not any(c.isdigit() for c in x)]", "[elem.tag for elem in a.iter()]", "[elem.tag for elem in a.iter()]", "os.system(my_cmd)", "pd.melt(x, id_vars=['farm', 'fruit'], var_name='year', value_name='value')", "print(list(itertools.product([1, 2, 3], [4, 5, 6])))", "[item[0] for item in queryresult]", "urllib.request.urlopen('http://www.stackoverflow.com').getcode()", "re.match('\\\\$[0-9]+[^\\\\$]*$', '$1 off delicious $5 ham.')", "pd.concat([df.drop('b', axis=1), pd.DataFrame(df['b'].tolist())], axis=1)", "sum([sum(x) for x in [[1, 2, 3, 4], [2, 4, 5, 6]]])", "struct.unpack('BBB', rgbstr.decode('hex'))", "string[0].isdigit()", "('a' in d)", "if (key in d):\n    pass", "re.search('Test(.*)print', testStr, re.DOTALL)", "A[np.arange(A.shape[0])[:, (None)], B]", "len(s.split())", "sum(d.values())", "session.query(Task).filter(Task.time_spent > timedelta(hours=3)).all()", "dict(map(lambda s: s.split(':'), ['A:1', 'B:2', 'C:3', 'D:4']))", "[j for i in x for j in i]", "some_list[(-1)]", "myList = [i.split('\\t')[0] for i in myList]", "df.loc[:, ((df != 0).any(axis=0))]", "my_string.splitlines()[0]", "s.split(' ', 1)[1]", "os.path.dirname(os.path.abspath(__file__))", "full_path = os.path.realpath(__file__)", "all(x in ['b', 'a', 'foo', 'bar'] for x in ['a', 'b'])", "re.sub('\\\\.[^.]+$', '', s)", "[item for item in a if 1 in item]", "subprocess.call(['shutdown', '/s'])", "driver.find_element_by_xpath(\"//div[@id='a']//a[@class='click']\")", "call(['path/to/python', 'test2.py', 'neededArgumetGoHere'])", "df.groupby(['Country', 'Item_Code'])[['Y1961', 'Y1962', 'Y1963']].sum()", "a[:] = [x for x in a if x != [1, 1]]", "\"\"\"didn't\"\"\".replace(\"'\", '')", "'test string\\n'.rstrip()", "print(re.findall(pattern, x))", "df.plot(x='col_name_1', y='col_name_2', style='o')", "df.plot(x='col_name_1', y='col_name_2', style='o')", "df.loc[df['column_name'] == some_value]", "driver.find_element_by_name('<check_box_name>').is_selected()", "dict(zip(my_list, map(my_dictionary.get, my_list)))", "dict(zip(my_list, map(my_dictionary.get, my_list)))", "sum(item['gold'] for item in myLIst)", "sorted(dict1, key=dict1.get)", "re.findall('[-+]?\\\\d*\\\\.\\\\d+|\\\\d+', 'Current Level: -13.2 db or 14.2 or 3')", "(3 not in [4, 5, 6])", "[k for k in lst if 'ab' in k]", "re.findall('(?::|;|=)(?:-)?(?:\\\\)|\\\\(|D|P)', s)", "sorted(list(d.items()), key=lambda name_num: (name_num[0].rsplit(None, 1)[0], name_num[1]))", "dict((k, globals()[k]) for k in ('foo', 'bar'))", "sorted(lst, reverse=True)", "list.sort(key=lambda item: item['date'], reverse=True)", "list(reversed(array))", "list(reversed(array))", "\"\"\"\"\"\".join([s[x:x + 2][::-1] for x in range(0, len(s), 2)])", "[int(x) for x in '0,1,2'.split(',')]", "zip(it, it, it)", "list.sort()", "sorted(l, key=(lambda x: x[2]))", "km.fit(x.reshape(-1, 1))", "os.listdir(path)", "os.listdir(path)", "webbrowser.open_new(url)", "writer.writerows(A)", "dict((k, 'updated') for k, v in d.items() if v != 'None')", "self.request.get('var_name')", "time.ctime(os.path.getctime(file))", "datetime.datetime.today().strftime('%Y-%m-%d')", "os.path.dirname(os.path.abspath(__file__))", "(date(2010, 12, 31) + relativedelta(months=(+ 1)))", "today.strftime('%B')", "os.path.dirname(os.path.abspath(__file__))", "chr(int('fd9b', 16)).encode('utf-8')", "s1 = pd.merge(df1, df2, how='inner', on=['user_id'])", "timestamp = (dt - datetime(1970, 1, 1)).total_seconds()", "sum(i * j for i, j in zip(a, b))", "df['date'] = pd.to_datetime(df['date'], format='%d%b%Y')", "s.resample('3M', how='sum')", "print(('%.2f' % round(a, 2)))", "dict((k.lower(), v.lower()) for k, v in {'My Key': 'My Value'}.items())", "ax.set_title('$%s \\\\times 10^{%s}$' % ('3.5', '+20'))", "your_list.sort(key=operator.attrgetter('anniversary_score'))", "del my_list[2:6]", "del my_list[2:6]", "[[sum([x[1] for x in i])] for i in data]", "re.sub('(?<!\\\\w)([A-Z])\\\\.', '\\\\1', s)", "line = line.translate(string.maketrans('', ''), '!@#$')", "[(i, sum(j) / len(j)) for i, j in list(d.items())]", "sorted(list(myDict.items()), key=lambda e: e[1][2])", "[x['value'] for x in list_of_dicts]", "re.split('(?<=\\\\?|!|\\\\.)\\\\s{0,2}(?=[A-Z]|$)', text)", "subprocess.call(['java', '-jar', 'Blender.jar'])", "DataFrame({'count': df1.groupby(['Name', 'City']).size()}).reset_index()", "re.sub('$\\\\d+\\\\W+|\\\\b\\\\d+\\\\b|\\\\W+\\\\d+$', '', s)", "os.system('screencapture screen.png')", "datetime.datetime.now().isoformat()", "\"\"\"foo bar bar bar\"\"\".replace('bar', 'XXX', 1).find('bar')", "length = sum(len(s) for s in strings)", "[list(t) for t in zip(*list_of_tuples)]", "dataList.sort(key=lambda x: x[1])", "re.sub('[^0-9]', '', 'sdkjh987978asd098as0980a98sd')", "re.sub('[^0-9]', '', 'sdkjh987978asd098as0980a98sd')", "print(np.array(list(mystr), dtype=int))", "output = subprocess.Popen(['mycmd', 'myarg'], stdout=PIPE).communicate()[0]", "request.url", "globals().update(importlib.import_module('some.package').__dict__)", "j = np.array(j)\nsum((j > i))", "df.loc[len(df)] = ['8/19/2014', 'Jun', 'Fly', '98765']", "sum(x * y for x, y in zip(a, b))", "sum(isinstance(x, int) for x in a)", "request.META['HTTP_HOST']", "df['BrandName'].replace(['ABC', 'AB'], 'A')", "myList = [i.split('\\t')[0] for i in myList]", "url('^$', TemplateView.as_view(template_name='your_template.html'))", "((2, 3) not in [(2, 3), (5, 6), (9, 1)])", "df.sort_values(by='Date')", "rows = session.query(Congress).count()", "\"\"\"\u0001ABC\"\"\".encode('hex')", "datetime.strptime('2015/01/01 12:12am', '%Y/%m/%d %I:%M%p')", "glob.glob('hello*.txt')", "sys.path.insert(0, './path/to/your/modules/')", "workbook = xlsxwriter.Workbook('app/smth1/smth2/Expenses01.xlsx')", "sorted(list(d.items()), key=lambda name_num: (name_num[0].rsplit(None, 1)[0], name_num[1]))", "\"\"\"{:.50f}\"\"\".format(float(a[0] / a[1]))", "[(d['Name'], d['Age']) for d in thisismylist]", "print(proc.communicate()[0])", "os.stat('C:\\\\Python27\\\\Lib\\\\genericpath.py').st_size", "os.path.dirname(path)", "[k for k, g in itertools.groupby([1, 2, 2, 3, 2, 2, 4])]", "df.values.tolist()", "[i for i, j in zip(a, b) if i == j]", "list(permutations(list(range(9)), 2))", "s.sort(key=operator.itemgetter(1, 2))", "all(x.count(1) == 3 for x in L)", "[item for item in a if 1 in item]", "pylab.ylim([0, 1000])", "struct.unpack('BBB', rgbstr.decode('hex'))", "[i for i, v in enumerate(L) if v[0] == 53]", "print(arr[1, 1])", "sorted(list_of_tuples, key=lambda tup: tup[1])", "re.compile('{}-\\\\d*'.format(user))", "print('{0:.2f}'.format(your_number))", "print('{0:.2f}'.format(your_number))", "print('{0:.2f}'.format(your_number))", "print('{0:.2f}'.format(your_number))", "float(int('-0b1110', 0))", "struct.unpack('d', b8)[0]", "float(int('-0b1110', 0))", "float(int('-0b1110', 0))", "shutil.copy('file.txt', 'file2.txt')", "(datetime.datetime.utcnow() - datetime.timedelta(hours=11)).year", "\"\"\"{} %s {}\"\"\".format('foo', 'bar')", "print(np.linspace(1, 3, num=5))", "max(list(MyCount.keys()), key=int)", "my_dict.pop('key', None)", "df.groupby(df.index.map(lambda t: t.minute))", "dict(zip(my_list, map(my_dictionary.get, my_list)))", "sorted_list_of_keyvalues = sorted(list(ips_data.items()), key=item[1]['data_two'])", "urllib.request.urlretrieve('http://search.twitter.com/search.json?q=hi', 'hi.json')", "Image.open('pathToFile').show()", "[d['key'] for d in l if 'key' in d]", "[x for x in my_list if not any(c.isdigit() for c in x)]", "subprocess.call(['shutdown', '/a '])", "a.pop(1)", "super(Instructor, self).__init__(name, year)", "itertools.product(list(range(2)), repeat=4)", "'Hello\\n\\n\\n'.rstrip('\\n')", "[item.strip() for item in my_string.split(',')]", "any(isinstance(el, list) for el in input_list)", "with open('file.txt', 'r') as ins:\n    array = []\n    for line in ins:\n        array.append(line)", "subprocess.call('mv /home/somedir/subdir/* somedir/', shell=True)", "ftp.retrbinary('RETR %s' % filename, file.write)", "max(lst, key=lambda x: x['score'])", "dict([x.split('=') for x in s.split()])", "pd.concat([df_1, df_2.sort_values('y')])", "re.sub('<[^>]*>', '', mystring)", "a[tuple(b)]", "a[1::2] = -1", "with open(input_filename, 'r') as f:\n    html_text = markdown(f.read(), output_format='html4')\npdfkit.from_string(html_text, output_filename)", "r = requests.post('http://wikipedia.org', cookies=cookie)", "page = urllib.request.urlopen('http://www.google.com/')\nsoup = BeautifulSoup(page)", "figure(figsize=(11.69, 8.27))", "np.split(a, [-1])", "int(hexString, 16)", "(datetime.now() - timedelta(1)).strftime('%Y-%m-%d')", "hashtags = re.findall('#(\\\\w+)', str1, re.UNICODE)", "re.split('; |, ', str)", "pandas.concat([df['foo'].dropna(), df['bar'].dropna()]).reindex_like(df)", "re.sub('^((.*?cat.*?){1})cat', '\\\\1Bull', s)", "if (not a):\n    pass", "pd.concat([distancesDF, datesDF.dates], axis=1)", "item = re.sub(' ?\\\\([^)]+\\\\)', '', item)", "list(itertools.product(*arrays))", "if some_string:\n    pass", "[row[1] for row in A]", "print(type(tf.Session().run(tf.constant([1, 2, 3]))))", "total = sum(float(item) for item in s.split(','))", "X = numpy.loadtxt('somefile.csv', delimiter=',')", "sorted(a, key=lambda x: (sum(x[1:3]), x[0]), reverse=True)", "line.strip()", "sorted(l, key=lambda x: int(re.search('\\\\d+', x).group(0)))", "' Hello '.strip()", "sorted(list(data.items()), key=lambda x: x[1][0])", "print(glob.glob('/home/adam/*.txt'))", "print(re.match('(\\\\d+(\\\\.\\\\d+)?)', '3434.35353').group(1))", "print(os.path.relpath('/usr/var/log/', '/usr/var'))", "print(re.findall(pattern, x))", "struct.unpack('d', binascii.unhexlify('4081637ef7d0424a'))", "hex(ord('a'))", "hex(ord('a'))", "hex(ord('a'))", "\"\"\"{0:,.2f}\"\"\".format(24322.34)", "hex(ord('a'))", "if (not myString):\n    pass", "[s[:5] for s in buckets]", "line = line.decode('utf-8', 'ignore').encode('utf-8')", "str(n) == str(n)[::-1]", "re.split('\\\\s*,\\\\s*|\\\\s*;\\\\s*', 'a , b; cdf')", "re.findall('\\\\[[^\\\\]]*\\\\]|\"[^\"]*\"|\\\\S+', s)", "re.sub('(?<!\\\\w)([A-Z])\\\\.', '\\\\1', s)", "os.system('msbuild project.sln /p:Configuration=Debug')", "upload_url = blobstore.create_upload_url('/upload', gs_bucket_name='my_bucket')", "os.system(my_cmd)", "lambda x, y: x + y", "plt.plot(list(range(10)), '--bo')", "testfile = urllib.request.URLopener()\ntestfile.retrieve('http://randomsite.com/file.gz', 'file.gz')", "df['name'].str.replace('\\\\(.*\\\\)', '')", "a.to_csv('test.csv', cols=['sum'])", "pandas.read_csv(filename, sep='\\t', lineterminator='\\r')", "[x for x in l if x[1] == 1]", "s.resample('3M', how='sum')", "dparser.parse('monkey 20/01/1980 love banana', fuzzy=True)", "sys.path.insert(0, 'libs')", "\"\"\"\"\"\".join(c for c in text if c not in 'aeiouAEIOU')", "[(x + tuple(y)) for x, y in zip(zip(a, b), c)]", "imp.find_module('os')[1]", "values = np.array([i for i in range(100)], dtype=np.float64)", "requests.get('https://www.reporo.com/', verify=False)", "[key for key, value in list(my_dict.items()) if set(value).intersection(lst)]", "sorted(lst, key=lambda x: (sum(x[1:]), x[0]))", "[sum([x[1] for x in i]) for i in data]", "sum(x[1] for x in structure)", "sys.path.insert(0, '/path/to/application/app/folder')\nimport file", "[re.split('_(?:f?or|and)_', s) for s in l]", "[item for item in a if item[0] == 1]", "sorted(Profile.objects.all(), key=lambda p: p.reputation)", "print(all(word[0].isupper() for word in words))", "a[np.argmin(a[:, (1)])]", "sys.path.append('/path/to/main_folder')", "sys.path.append('/path/to/main_folder')", "datetime.strptime('Tue, 22 Nov 2011 06:00:00 GMT', '%a, %d %b %Y %H:%M:%S %Z')", "[''.join(l) for l in list_of_lists]", "os.system('TASKKILL /F /IM firefox.exe')", "x = scipy.matrix([1, 2, 3]).transpose()", "df = pd.DataFrame.from_dict({k: v for k, v in list(nvalues.items()) if k != 'y3'})", "hex(ord('a'))", "np.flatnonzero(x).mean()", "[item for item in my_sequence if item != 'item']", "[item for item in my_sequence if item != 'item']", "all(word in d for word in ['somekey', 'someotherkey', 'somekeyggg'])", "d = pd.DataFrame(0, index=np.arange(len(data)), columns=feature_list)", "d = pd.DataFrame(0, index=np.arange(len(data)), columns=feature_list)", "df.fillna(method='ffill', inplace=True)", "[sum([x[1] for x in i]) for i in data]", "sorted(list(dic.items()), key=lambda x: x[1]['Fisher'], reverse=True)", "np.einsum('ji,i->j', a, b)", "os.listdir('/home/username/www/')", "archive.write(pdffile, os.path.basename(pdffile))", "plt.setp(legend.get_title(), fontsize='xx-small')", "os.chdir('.\\\\chapter3')", "calendar.monthrange(2008, 2)", "df.set_index(['year', 'month', 'item']).unstack(level=-1)", "zip(list_a, list_b)", "[x[1] for x in L]", "datetime.datetime.fromtimestamp(myNumber).strftime('%Y-%m-%d %H:%M:%S')", "time.strftime('%Y-%m-%d %H:%M')", "numpy.in1d(b, a).all()", "a = a.replace(char, '')", "[element for i, element in enumerate(centroids) if i not in index]", "[element for i, element in enumerate(centroids) if i not in index]", "del d[key]", "del d[key]", "map(list, permutations([2, 3, 4]))", "A[np.arange(A.shape[0])[:, (None)], B]", "del a[index]", "os.path.join(*x.split(os.path.sep)[2:])", "max(test_string.rfind(i) for i in '([{')", "matching = [s for s in some_list if 'abc' in s]", "a.shape[1]", "[i for i in range(len(a)) if a[i] > 2]", "dict(zip([1, 2, 3, 4], ['a', 'b', 'c', 'd']))", "dict([['two', 2], ['one', 1]])", "re.sub('(.)(?=.)', '\\\\1-', s)", "dict([['two', 2], ['one', 1]])", "print(np.linspace(1, 3, num=4, endpoint=False))", "print(np.linspace(1, 3, num=4, endpoint=False))", "webbrowser.open_new(url)", "x.find('Aloha')", "print('.'.join([item[0] for item in data]))", "print(re.findall('\\\\d+', '\\n'.join(re.findall('\\xab([\\\\s\\\\S]*?)\\xbb', text))))", "[index for index, letter in enumerate(word) if letter == 'e']", "[(x + y) for x, y in zip(first, second)]", "sorted(list(tag_weight.items()), key=lambda x: int(x[1]), reverse=True)", "re.sub('\\\\[.*?\\\\]', '', 'abcd[e]yth[ac]ytwec')", "line = re.sub('\\\\(+as .*?\\\\) ', '', line)", "import platform\nplatform.release()", "import platform\nplatform.release()", "raise AssertionError(\"Unexpected value of 'distance'!\", distance)", "u = s.decode('utf-8-sig')", "print(os.path.relpath('/usr/var/log/', '/usr/var'))", "imp.find_module('os')[1]", "\"\"\"hello {name}, how are you {name}, welcome {name}\"\"\".format(name='john')", "df = pd.read_csv('filename.txt', sep=';', names=['Region Name'])", "df.apply(lambda x: x.fillna(x.mean()), axis=0)", "dparser.parse('monkey 10/01/1980 love banana', fuzzy=True)", "list(accumulate(list(range(10))))", "\"\"\"\"\"\".join(set('aaabcabccd'))", "[d['key'] for d in l]", "datetime.strptime('2015/01/01 12:12am', '%Y/%m/%d %I:%M%p')", "pd.read_csv('D:/Temp/tt.csv', names=list('abcdef'))", "urllib.parse.unquote(urllib.parse.unquote('FireShot3%2B%25282%2529.png'))", "return iter(sorted(dict.items()))", "[3, 4, 1, 2]", "mydic.update({i: o['name']})", "re.findall('(?<!\\\\d)\\\\d{5}(?!\\\\d)', s)", "df[['A', 'B']].multiply(df['C'], axis='index')", "list(itertools.chain.from_iterable(list2d))", "quadmesh.set_clim(vmin=0, vmax=15)", "requests.get('https://www.mysite.com/', auth=('username', 'pwd'))", "dir_path = os.path.dirname(os.path.realpath(__file__))", "eval(\"print('Hello')\")", "print(os.name)", "sorted(L, key=operator.itemgetter('resultType'))", "return list(set(itertools.chain(*result_list)))", "response.headers['WWW-Authenticate'] = 'Basic realm=\"test\"'", "[(y - x) for x, y in zip(L, L[1:])]", "((2, 3) not in [(2, 3), (5, 6), (9, 1)])", "rows = soup.findAll('tr')[4::5]", "sum(1 for i, j in zip(a, b) if i != j)", "re.split('\\\\.\\\\s', text)", "matrix = [([0] * 5) for i in range(5)]", "len(myArray)", "sorted(a, key=lambda x: x[1])", "subprocess.Popen(['rm', '-r', 'some.file'])", "df.groupby(['stock', 'same1', 'same2'])['positions'].sum().reset_index()", "print(' '.join(sorted(set(words), key=words.index)))", "x[2:]", "np.einsum('ji,i->j', a, b)", "sorted(words, key=lambda x: 'a' + x if x.startswith('s') else 'b' + x)", "float(int('-0b1110', 0))", "item = re.sub(' ?\\\\([^)]+\\\\)', '', item)", "os.listdir('somedirectory')", "sum(sum(x) for x in lists)", "map(sum, zip(*l))", "list(df.index)", "pandas.concat([df['foo'].dropna(), df['bar'].dropna()]).reindex_like(df)", "json.loads('{\"foo\": 42, \"bar\": \"baz\"}')['bar']", "df['DateStr'] = df['DateObj'].dt.strftime('%d%m%Y')", "list(range(11, 17))", "df.groupby(df.columns, axis=1).sum()", "re.compile('.\\\\A|.\\\\A*|.\\\\A+')", "print(round(1123.456789, -1))", "int('a', 16)", "print('\\n'.join('  '.join(map(str, row)) for row in t))", "globals()['something'] = 'bob'", "call(['path/to/python', 'test2.py', 'neededArgumetGoHere'])", "df.set_index(['year', 'month', 'item']).unstack(level=-1)", "\"\"\" \"\"\".join(my_list)", "pd.concat([df_1, df_2.sort_values('y')])", "subprocess.call(['test.sh', str(domid)])", "apple.decode('iso-8859-1').encode('utf8')", "time.mktime(datetime.datetime.strptime(s, '%d/%m/%Y').timetuple())", "my_data = genfromtxt('my_file.csv', delimiter=',')", "fh1.seek(2)", "with open('file.txt', 'r') as ins:\n    array = []\n    for line in ins:\n        array.append(line)", "int('deadbeef', 16)", "df.ix[df.A == 0, 'B'] = np.nan", "struct.pack('<I', 1633837924)", "f = lambda x, y: x + y", "re.split('\\\\W+', 'Words, words, words.')", "replace('\"', '\\\\\"')", "df.apply(lambda x: x.fillna(x.mean()), axis=0)", "driver.page_source", "c = [b[i] for i in index]", "print(data['places'][0]['post code'])", "requests.get(url, headers={'referer': my_referer})", "print([''.join(a) for a in combinations(['hel', 'lo', 'bye'], 2)])", "sorted(list(things.keys()), key=lambda x: things[x]['weight'], reverse=True)", "df.reset_index(inplace=True)", "map(int, ['1', '2', '3'])", "datetime.datetime.today().strftime('%Y-%m-%d')", "list(range(11, 17))", "df.replace('-', 'NaN')", "list(itertools.product(*a))", "del a[index]", "int('010101', 2)", "df.groupby(['PplNum', 'RoomNum']).cumcount() + 1", "np.corrcoef(x)", "print('here is your checkmark: ' + '\\u2713')", "int('0xff', 16)", "all(x.count(1) == 3 for x in L)", "df = df[['x', 'y', 'a', 'b']]", "[[int(x) for x in sublist] for sublist in lst]", "s.split(' ', 1)[1]", "redirect('Home.views.index')", "a = np.array(a)", "df.pivot_table(values='value', index=['year', 'month'], columns='item')", "re.match('(.*?[.?!](?:\\\\s+.*?[.?!]){0,1})', phrase).group(1)", "re.match('(.*?[.?!](?:\\\\s+.*?[.?!]){0,1})', phrase).group(1)", "re.findall('\\\\w+|[^\\\\w\\\\s]', text, re.UNICODE)", "re.match('[a-zA-Z][\\\\w-]*$', '!A_B')", "re.sub(' +', ' ', s)", "df1.merge(df2, on='name').merge(df3, on='name')", "my_list.sort(key=lambda x: x[1])", "df.sort(['c1', 'c2'], ascending=[True, True])", "df.set_index('month')", "mylist.sort(key=str.lower)", "df.loc[df.groupby('User')['X'].transform(sum) == 0]", "unicodedata.normalize('NFKD', title).encode('ascii', 'ignore')", "y = str(int(x, 16))", "struct.unpack('f', struct.pack('f', 0.00582811585976))", "getattr(your_obj, x)", "getattr(your_obj, x)", "sorted(Profile.objects.all(), key=lambda p: p.reputation)", "zip(*np.where(a == 1))", "{{car.date_of_manufacture.strftime('%Y-%m-%d')}}", "sum(i * i for i in l)", "urllib.parse.quote('http://spam.com/go/')", "webbrowser.open('http://somesite.com/adminpanel/index.php')", "c.execute('SELECT * FROM foo WHERE bar = %s AND baz = %s', (param1, param2))", "first_name = request.args.get('firstname')", "foo.append([8, 7])", "f.write(open('xxx.mp4', 'rb').read())", "l[:3] + l[-3:]", "u = s.decode('utf-8-sig')", "print('\\x1b[1m' + 'Hello')", "re.split('(?<=\\\\?|!|\\\\.)\\\\s{0,2}(?=[A-Z]|$)', text)", "sorted(li, key=operator.itemgetter(1), reverse=True)", "df['stats'].str[1:-1].str.split(',', expand=True).astype(float)", "df['value'] = df['value'].str[0]", "re.findall('(([0-9]+)([A-Z]))', '20M10000N80M')", "sentence = re.sub('\\\\s+', '', sentence, flags=re.UNICODE)", "a[a != 0]", "A[np.all(np.any(A - B[:, (None)], axis=2), axis=0)]", "s = s.replace('\\\\', '\\\\\\\\')", "subprocess.call('test1.py', shell=True)", "pd.DataFrame(df.values - df2.values, columns=df.columns)", "re.sub('[^a-zA-Z0-9-_*.]', '', my_string)", "dateobj = datetime.datetime.strptime(datestr, '%Y-%m-%d').date()", "os.system('some_command < input_file | another_command > output_file')", "request.META['HTTP_HOST']", "base64.urlsafe_b64decode(uenc.encode('ascii'))", "testfile = urllib.request.URLopener()\ntestfile.retrieve('http://randomsite.com/file.gz', 'file.gz')", "urllib.request.urlopen('http://www.stackoverflow.com').getcode()", "file = io.open('data.txt', 'r', encoding='utf-16-le')", "some_list[(- n)]", "np.in1d(b, a).nonzero()[0]", "some_list[(- n)]", "del my_list[2:6]", "del my_list[2:6]", "ax.xaxis.set_ticks_position('top')", "subprocess.call('start command -flags arguments', shell=True)", "dict(pair for d in L for pair in list(d.items()))", "a.pop(1)", "A[:, -2:]", "a.remove(6)", "pd.concat(g for _, g in df.groupby('ID') if len(g) > 1)", "A[(np.random.randint(A.shape[0], size=2)), :]", "window.set_position(Gtk.WindowPosition.CENTER)", "[i.split('\\t', 1)[0] for i in l]", "time.mktime(datetime.datetime.strptime(s, '%d/%m/%Y').timetuple())", "sum(x == chosen_value for x in list(d.values()))", "u = s.decode('utf-8-sig')", "print([a for a, b in re.findall('((\\\\w)\\\\2*)', s)])", "re.split('[ .]', 'a b.c')", "webbrowser.open('http://example.com')", "string[0].isdigit()", "(type(x) == int)", "l1.sort(key=lambda x: int(x[0]))", "driver.find_element_by_css_selector(\"a[href^='javascript']\").click()", "print([a for a, b in re.findall('((\\\\w)\\\\2*)', s)])", "print(s.encode('unicode_escape'))", "\"\"\"<br/>\"\"\".join([('%s:: %s' % (key, value)) for key, value in list(d.items())])", "datetime.datetime.fromtimestamp(myNumber).strftime('%Y-%m-%d %H:%M:%S')", "requests.get('https://www.reporo.com/', verify=False)", "df.loc[(df.loc[:, (df.dtypes != object)] != 0).any(1)]", "df['x']['C'] = 10", "df = df.set_index(['TRX_DATE'])", "driver.find_element_by_name('<check_box_name>').is_selected()", "df.groupby(level=0, as_index=False).nth(0)", "sentence.strip()", "for (root, subFolders, files) in os.walk(rootdir):\n    pass", "\"\"\"\\\\xc3\\\\x85\u3042\"\"\".encode('utf-8').decode('unicode_escape')", "hex(65)", "Counter([1, 2, 2, 2, 3]) - Counter([1, 2])", "random.sample(range(1, 50), 6)", "round(6.005, 2)", "text.config(state=DISABLED)", "[x[1] for x in L]", "[max(len(str(x)) for x in line) for line in zip(*foo)]", "numpy.random.choice(numpy.arange(1, 7), p=[0.1, 0.05, 0.05, 0.2, 0.4, 0.2])", "a[tuple(b)]", "Test.objects.filter(actions__contains=[{'fixed_key_1': 'foo2'}])", "mylist.sort(key=operator.itemgetter('weight', 'factor'))", "urlfetch.fetch(url, deadline=10 * 60)", "print(re.findall(pattern, x))", "subprocess.call('start command -flags arguments', shell=True)", "print(zip(my_list[0::2], my_list[1::2]))", "dict((k.lower(), v.lower()) for k, v in {'My Key': 'My Value'}.items())", "u = s.decode('utf-8-sig')", "print(data.encode('hex'))", "MyModel.objects.order_by('?')[:2]", "sorted(list_of_dct, key=lambda x: order.index(list(x.values())[0]))", "plt.grid(True)", "print(proc.communicate()[0])", "os.path.dirname(sys.executable)", "os.system('clear')", "print(proc.communicate()[0])", "with open('test.txt', 'a') as myfile:\n    myfile.write('appended text')", "print(a_module.__file__)", "pd.concat([df.head(1), df.tail(1)])", "df.groupby(['stock', 'same1', 'same2'])['positions'].sum().reset_index()", "pd.concat([x] * 5)", "numpy.sort(arr, axis=0)", "[{'key1': a, 'key2': b} for a, b in zip(d['key1'], d['key2'])]", "a = [x for x in a if x['link'] not in b]", "[(d['Name'], d['Age']) for d in thisismylist]", "sorted(a, key=lambda i: list(i.values())[0], reverse=True)", "datetime.datetime.now().isoformat()", "unsorted_list.sort(key=lambda x: x[3])", "requests.get('https://kennethreitz.com', verify=False)", "re.split('(?<=[\\\\.\\\\?!]) ', text)", "np.argwhere(np.all(arr == [[0, 3], [3, 0]], axis=(1, 2)))", "print((datetime.date.today() + datetime.timedelta(((6 * 365) / 12))).isoformat())", "today.strftime('%B')", "pd.to_datetime(pd.Series(date_stngs))", "datetime.datetime.strptime('03:55', '%H:%M').time()", "bin(21)", "df[['value']].fillna(df.groupby('group').transform('mean'))", "[k for d in list(foo.values()) for k in d]", "B = np.reshape(A, (-1, 2))", "line.strip()", "re.findall('\\\\w+(?:-\\\\w+)+', text)", "hex(sum(b << i for i, b in enumerate(reversed(walls))))", "dict([(e[0], int(e[1])) for e in lst])", "[list(t) for t in zip(*list_of_tuples)]", "sorted(l, key=(lambda x: x[2]))", "keys, values = zip(*list(d.items()))", "[''.join(seq) for seq in zip(lst, lst[1:])]", "[[[x[0]] for x in listD[i]] for i in range(len(listD))]", "x[2:(-2)]", "some_list[(-2)]", "df.groupby(np.arange(len(df.columns)) // 3, axis=1).mean()", "pd.pivot_table(df, index=df.index.date, columns=df.index.time, values='Close')", "s.resample('3M', how='sum')", "subprocess.call('mv /home/somedir/subdir/* somedir/', shell=True)", "threading.Thread(target=SudsMove).start()", "subprocess.Popen(['rm', '-r', 'some.file'])", "threading.Thread(target=SudsMove).start()", "raise RuntimeError('specific message')", "raise RuntimeError('specific message')", "raise RuntimeError('specific message')", "p.wait()", "subprocess.call('mv /home/somedir/subdir/* somedir/', shell=True)", "print('\\u0420\\u043e\\u0441\\u0441\\u0438\\u044f')", "print(content.decode('utf8'))", "re.sub('\\\\b\\\\d+\\\\b', '', s)", "df1.groupby(['key', 'year']).size().reset_index()", "[x for x in l if x[1] == 1]", "print(re.sub('(\\\\W)\\\\1+', '\\\\1', a))", "x.find('World')", "\"\"\"0,1,2\"\"\".split(',')", "df.groupby(['PplNum', 'RoomNum']).cumcount() + 1", "dogtail.rawinput.click(100, 100)", "sorted(list(things.keys()), key=lambda x: things[x]['weight'], reverse=True)", "s[:4] + '-' + s[4:]", "[list(t) for t in zip(*list_of_tuples)]", "my_list = [[x for x in sublist if x not in to_del] for sublist in my_list]", "len([1, 2, 3])", "[y for x in range(3) for y in [x, x]]", "re.findall('-(?!aa-|bb-)([^-]+)', string)", "os.system('tcsh your_own_script')", "driver.implicitly_wait(60)", "window.set_position(Gtk.WindowPosition.CENTER)", "hasattr(obj, 'attr_name')", "browser.find_elements_by_xpath(\"//*[@type='submit']/@value\").text", "func(*args)", "sys.exit(0)", "return_code = subprocess.call('echo Hello World', shell=True)", "User.objects.filter(userprofile__level__gte=0)", "os.system('cls')", "int('010101', 2)", "pd.concat([x] * 5, ignore_index=True)", "import platform\nplatform.release()", "[k for d in list(foo.values()) for k in d]", "max(alkaline_earth_values, key=lambda x: x[1])", "\"\"\"437c2123\"\"\".decode('hex')", "random.sample(range(1, 50), 6)", "sorted(l, key=lambda x: (-int(x[1]), x[0]))", "[index for index, letter in enumerate(word) if letter == 'e']", "itertools.permutations([1, 2, 3])", "\"\"\"\"\"\".join([c for c in strs if c.isdigit()])", "p.wait()", "r = requests.post('http://wikipedia.org', cookies=cookie)", "{{(item.date | date): 'Y M d'}}"]