[" handles all the common functionality required for api calls  returns ", 
" when pyrax get_http_debug   is true  outputs the equivalent  curl  ", 
" when pyrax get_http_debug   is true  outputs the response received ", 
" takes an object or an id and returns the id  \n", 
" takes an object or a name and returns the name  \n", 
" converts a volumeid passed as the volume to a cloudblockstoragevolume object  \n", 
" converts a snapshot id passed as the snapshot to a cloudblockstoragesnapshot ", 
" unicode values will raise a keyerror  so catch those and encode in utf 8  \n", 
" convenience method for executing operating system commands  ", 
" returns the md5 checksum in hex for the given content  if   content   ", 
" used by the random character functions  \n", 
" generates a random name  useful for testing  ", 
" generates a random name  useful for testing   ", 
" for parameters that can take either a single string or a list of strings  ", 
" returns the total bytes for the specified path  optionally ignoring ", 
" adds an instance method to an object  \n", 
" when changing the state of an object  it will commonly be in a transitional ", 
" loops until either the desired value of the attribute is reached  or the ", 
" designed to handle the most common use case for wait_until  an object whose ", 
" attempts to parse a string representation of a date or datetime value  and ", 
" takes either a date  datetime or a string  and returns the standard iso ", 
" takes either a date  a datetime  or a string  and returns a string that ", 
" takes a value that is either a python date  datetime  or a string ", 
" returns the   id   attribute of   id_or_obj   if present  if not  ", 
" returns the   name   attribute of   name_or_obj   if present  if not  ", 
" updates the   dct   dictionary with the   params   dictionary  filtering out ", 
" takes a dictionary and uses it to create a query string  \n", 
" compares  nm  with the supplied patterns  and returns true if it matches ", 
" adds additional text to an exception  s error message  ", 
" given two dicts  updates the first one with the second  but considers keys ", 
" returns the first environment variable set ", 
" adds   unauthenticated   attribute to decorated function  ", 
" checks to see if the function is marked as not requiring authentication ", 
" like issubclass  but will just return false if not a class  \n", 
" returns a class from a string including module and class  \n", 
" decodes incoming text bytes string using  incoming  if they  re not ", 
" normalize string  ", 
" allow for shorthand names for the most common types  \n", 
" returns the name of the current environment  \n", 
" change your configuration environment  an environmentnotfound exception ", 
" returns a list of all defined environments  \n", 
" returns the config setting for the specified key  if no environment is ", 
" changes the value of the specified key in the current environment  or in ", 
" changes the default_region setting  \n", 
" returns an instance of the specified identity class  or if none is ", 
" creates an instance of the current identity_class and assigns it to the ", 
" ensures that the   identity   attribute is not none  \n", 
" authentication decorator  \n", 
" value to use when no region is specified  \n", 
" if you already have a valid token and either a tenant id or name  you can ", 
" set the credentials directly  and then try to authenticate  ", 
" read in the credentials from the supplied file path  and then try to ", 
" use the password stored within the keyring to authenticate  if a username ", 
" generally you will not need to call this directly  passing in your ", 
" de authenticate by clearing all the names back to none  \n", 
" appends pyrax information to the underlying library  s user agent  \n", 
" establishes authenticated connections to the various cloud apis  \n", 
" parses the services dict to get the proper endpoint for the given service  \n", 
" creates a client for working with cloud servers  \n", 
" creates a client for working with cloudfiles swift  \n", 
" creates a client for working with cloud databases  \n", 
" creates a client for working with cloud loadbalancers  \n", 
" creates a client for working with cloud loadbalancers  \n ", 
" creates a client for working with cloud blockstorage  \n", 
" creates a client for working with cloud dns  \n", 
" creates a client for working with cloud networks  \n", 
" creates a client for working with cloud monitoring  \n", 
" creates a client for working with autoscale  \n", 
" creates a client for working with images  \n", 
" creates a client for working with queues  \n", 
" returns the client class registered for the given service  or none if there ", 
" returns the unicode encoding type  \n", 
" converts a image id passed as the   image   parameter to a image object  \n", 
" converts an checkid passed as the check to a cloudmonitorcheck object  \n", 
" converts an entityid passed as the entity to a cloudmonitorentity object  \n", 
" assures that whether a container or a name of a container is passed  a ", 
" returns a copy of the supplied dictionary  prefixing any keys that do ", 
" returns the size of a file like object  \n", 
" return an instance of a clientexception or subclass ", 
" converts a queue id or name passed as the   queue   parameter to a queue ", 
" given an iterable  enumerate its contents for a user to choose from  ", 
" this function converts the six moves input values to integers  it handles ", 
" this function converts the six moves input values to integers  it handles  ", 
" this function converts the six moves input values to integers  it handles   ", 
" this function converts the six moves input values to integers  it handles    ", 
" this function converts the six moves input values to integers  it handles     ", 
" remove characters that shouldn  t be in ids  etc   that are being parsed ", 
" find the first blank line and drop the headers to keep the body \n", 
" remove the outputs from a notebook \n", 
" takes the value sent from the user encoding menu and returns ", 
" receives the input given by the user from gen_payload py \n", 
" receives the input given by the user from create_payload py ", 
" receives the input given by the user from create_payloads py \n", 
" receives the input given by the user from create_payloads py \n ", 
" receives the input given by the user from create_payload py \n", 
" receives the input given by the user from set py \n", 
" receives the input given by the user from set py \n ", 
" takes the value sent from the user encoding menu and returns  ", 
" determines whether the setting parameter should be quoted  \n", 
" get fully qualified domain name from name  ", 
" connect to  address  and return the socket object  ", 
" validates ipv6 addresses  \n", 
" capture the output of func when called with the given arguments  ", 
" here we cant use the path for metasploit via setcore meta_path  if the full path is specified it breaks ", 
" executes imblearn version py in a globals dictionary and ", 
" test the sklearn estimator compatibility \n", 
" test either if an error is raised with a wrong decimal value for ", 
" test the initialisation of the object \n", 
" test either if an error when there is a single class \n", 
" test either if an error is raised when the balancing ratio to fit is ", 
" test the fitting method \n", 
" test either if an error is raised when sample is called before ", 
" test the fit and sample routine with auto ratio  \n", 
" test the fit and sample routine with 0 5 ratio  \n", 
" test the fit and sample routine with auto ratio with a decision ", 
" test the fit and sample routine with auto ratio with a random ", 
" test the fit and sample routine with auto ratio with a adaboost  \n", 
" test the fit and sample routine with auto ratio with a gradient ", 
" test the fit and sample routine with auto ratio with a linear ", 
" test either if an error is raised the classifier provided is unknown  \n", 
" test the fit and sample routine with auto ratio with 1 subset  \n", 
" test the fit and sample routine with auto ratio with a 2 subsets  \n", 
" test either if an error is raised when x is different at fitting ", 
" test either if an error is raised when the target are not binary ", 
" test the fit and sample routine with classifier a object \n", 
" test either if an error is raised while a wrong object is passed \n", 
" test the fit and sample routine with auto ratio with a random  ", 
" test the sklearn estimator compatibility \n ", 
" test either if an error is raised with a wrong decimal value for  ", 
" test the initialisation of the object \n ", 
" test either if an error when there is a single class \n ", 
" test either if an error is raised when the balancing ratio to fit is  ", 
" test the fitting method \n ", 
" test either if an error is raised when sample is called before  ", 
" test the fit and sample routine with auto ratio  \n ", 
" test the fit and sample routine with 0 5 ratio  \n ", 
" test that the processing is going throw with random state being none  \n", 
" test either if an error is raised when x is different at fitting  ", 
" test either if an error is raised when the target are continuous ", 
" test the sklearn estimator compatibility \n  ", 
" test the initialisation of the object \n  ", 
" test either if an error when there is a single class \n  ", 
" test the fitting method \n  ", 
" test either if an error is raised when sample is called before   ", 
" test the fit sample routine \n", 
" test the fit sample routine with indices support \n", 
" test either if an error is raised when x is different at fitting   ", 
" test either if an error is raised when the target are continuous  ", 
" test the fit sample routine with a knn object \n", 
" test either if an error is raised while a wrong object is given \n", 
" test the sklearn estimator compatibility \n   ", 
" test either if an error is raised with a wrong decimal value for   ", 
" test either if an error is raised when the version is unknown  \n", 
" test the initialisation of the object \n   ", 
" test either if an error when there is a single class \n   ", 
" test either if an error is raised when the balancing ratio to fit is   ", 
" test the fitting method \n   ", 
" test either if an error is raised when sample is called before    ", 
" test fit and sample routines with auto ratio \n", 
" test fit and sample routines with auto ratio and indices support \n", 
" test fit and sample routines with  5 ratio \n", 
" test either if an error is raised when x is different at fitting    ", 
" test either if an error is raised when the target are continuous   ", 
" test fit sample with nn object \n", 
" test either if an error is raised with wrong nn object \n", 
" test the sklearn estimator compatibility \n    ", 
" test either if an error is raised with a wrong decimal value for    ", 
" test the initialisation of the object \n    ", 
" test either if an error when there is a single class \n    ", 
" test either if an error is raised when the balancing ratio to fit is    ", 
" test the fitting method \n    ", 
" test either if an error is raised when x is different at fitting     ", 
" test either if an error is raised when sample is called before     ", 
" test fit and sample routines with auto ratio \n ", 
" test fit and sample routines with ratio of  5 \n", 
" test either if an error is raised when x is different at fitting      ", 
" test either if an error is raised when the target are continuous    ", 
" test fit sample method with multiclass target \n", 
" test fit and sample using a kmeans object \n", 
" test fit and sample using a kmeans object \n ", 
" test the sklearn estimator compatibility \n     ", 
" test the initialisation of the object \n     ", 
" test either if an error is raised when the numbr of iteration ", 
" test either if an error when there is a single class \n     ", 
" test the fitting method \n     ", 
" test either if an error is raised when sample is called before      ", 
" test the fit sample routine \n ", 
" test the fit sample routine with indices support \n ", 
" test the fit sample routine using the mode as selection giving a nn ", 
" test either if an error is raised when x is different at fitting       ", 
" test either if an error is raised when the target are continuous     ", 
" test the fit sample routine using the mode as selection \n", 
" test either if an error is raised while a wrong type of nn is given \n", 
" test the sklearn estimator compatibility \n      ", 
" test either if an error is raised with a wrong decimal value for     ", 
" test either if an error is raised when the version is unknown  \n ", 
" test the initialisation of the object \n      ", 
" test either if an error when there is a single class \n      ", 
" test either if an error is raised when the balancing ratio to fit is     ", 
" test the fitting method \n      ", 
" test either if an error is raised when sample is called before       ", 
" test fit and sample routines with auto ratio \n  ", 
" test fit and sample routines with auto ratio and indices support \n ", 
" test fit and sample routines with  5 ratio \n ", 
" test either if an error is raised when x is different at fitting        ", 
" test either if an error is raised when the target are continuous      ", 
" test fit sample with nn object \n ", 
" test either if an error is raised with wrong nn object \n ", 
" test the sklearn estimator compatibility \n       ", 
" test either if an error is raised with a wrong decimal value for      ", 
" test either if an error is raised when the estimator is unknown \n", 
" test the initialisation of the object \n       ", 
" test either if an error when there is a single class \n       ", 
" test either if an error is raised when the balancing ratio to fit is      ", 
" test the fitting method \n       ", 
" test either if an error is raised when sample is called before        ", 
" test the fit sample routine \n  ", 
" test the fit sample routine with indices support \n  ", 
" test the fit sample routine with a 0 5 ratio \n", 
" test the fit sample routine with knn \n", 
" test the fit sample routine with decision tree \n", 
" test the fit sample routine with random forest \n", 
" test the fit sample routine with adaboost \n", 
" test the fit sample routine with gradient boosting \n", 
" test the fit sample routine with linear svm \n", 
" test either if an error is raised when x is different at fitting         ", 
" test either if an error is raised when the target are not binary  ", 
" test the fit sample routine passing a classifiermixin object \n", 
" test either if an error is raised while passing a wrong classifier ", 
" test the sklearn estimator compatibility \n        ", 
" test the initialisation of the object \n        ", 
" test either if an error when there is a single class \n        ", 
" test the fitting method \n        ", 
" test either if an error is raised when sample is called before         ", 
" test the fit sample routine \n   ", 
" test the fit sample routine with indices support \n   ", 
" test either if an error is raised when x is different at fitting          ", 
" test either if an error is raised when the target are continuous       ", 
" test fit sample with nn object \n  ", 
" test either if an error is raised with wrong nn object \n  ", 
" test the sklearn estimator compatibility \n         ", 
" test either if an error is raised with a wrong decimal value for       ", 
" test the initialisation of the object \n         ", 
" test either if an error when there is a single class \n         ", 
" test either if an error is raised when the balancing ratio to fit is       ", 
" test the fitting method \n         ", 
" test either if an error is raised when sample is called before          ", 
" test the fit sample routine \n    ", 
" test the fit sample routine with indices support \n    ", 
" test the fit sample routine with a 0 5 ratio \n ", 
" test either if an error is raised when x is different at fitting           ", 
" test either if an error is raised when the target are continuous        ", 
" test fit sample method with multiclass target \n ", 
" test the sklearn estimator compatibility \n          ", 
" test the initialisation of the object \n          ", 
" test either if an error when there is a single class \n          ", 
" test the fitting method \n          ", 
" test either if an error is raised when sample is called before           ", 
" test the fit sample routine \n     ", 
" test the fit sample routine with indices support \n     ", 
" test the fit sample routine using the mode as selection \n ", 
" test either if an error is raised when x is different at fitting            ", 
" test either if an error is raised when the target are continuous         ", 
" test the fit sample routine using a nn object \n", 
" test either if an error is raised while a wrong type of nn is given \n ", 
" test the sklearn estimator compatibility \n           ", 
" test the initialisation of the object \n           ", 
" test either if an error when there is a single class \n           ", 
" test the fitting method \n           ", 
" test either if an error is raised when sample is called before            ", 
" test the fit sample routine \n      ", 
" test the fit sample routine with indices support \n      ", 
" test either if an error is raised when x is different at fitting             ", 
" test either if an error is raised when the target are not binary   ", 
" test the sklearn estimator compatibility \n            ", 
" test the initialisation of the object \n            ", 
" test either if an error when there is a single class \n            ", 
" test the fitting method \n            ", 
" test either if an error is raised when sample is called before             ", 
" test the fit sample routine \n       ", 
" test the fit sample routine with indices support \n       ", 
" test the fit sample routine using the mode as selection \n  ", 
" test either if an error is raised when x is different at fitting              ", 
" test either if an error is raised when the target are continuous          ", 
" test the fit sample routine using a nn object \n ", 
" test either if an error is raised while a wrong type of nn is given \n  ", 
" test the sklearn estimator compatibility \n             ", 
" test either if an error is raised with a wrong decimal value for        ", 
" test either if an error is raised when the version is unknown  \n  ", 
" test the initialisation of the object \n             ", 
" test either if an error when there is a single class \n             ", 
" test either if an error is raised when the balancing ratio to fit is        ", 
" test the fitting method \n             ", 
" test either if an error is raised when sample is called before              ", 
" test fit and sample routines with auto ratio \n   ", 
" test fit and sample routines with auto ratio and indices support \n  ", 
" test fit and sample routines with  5 ratio \n  ", 
" test either if an error is raised when x is different at fitting               ", 
" test either if an error is raised when the target are continuous           ", 
" test fit sample with nn object \n   ", 
" test either if an error is raised with wrong nn object \n   ", 
" test the sklearn estimator compatibility \n              ", 
" test the initialisation of the object \n              ", 
" test either if an error when there is a single class \n              ", 
" test the fitting method \n              ", 
" test either if an error is raised when sample is called before               ", 
" test the fit sample routine \n        ", 
" test the fit sample routine with indices support \n        ", 
" test either if an error is raised when x is different at fitting                ", 
" test either if an error is raised when the target are not binary    ", 
" test the fit sample routine with an knn object \n", 
" test if an error is raised while passing a wrong object \n", 
" construct a pipeline from the given estimators  ", 
" test the sklearn estimator compatibility \n               ", 
" test either if an error is raised with a wrong decimal value for         ", 
" test the initialisation of the object \n               ", 
" test either if an error when there is a single class \n               ", 
" test either if an error is raised when the balancing ratio to fit is         ", 
" test the fitting method \n               ", 
" test either if an error is raised when sample is called before                ", 
" test the fit sample routine \n         ", 
" test the fit sample routine with a 0 5 ratio \n  ", 
" test either if an error is raised when x is different at fitting                 ", 
" test either if an error is raised when the target are continuous            ", 
" test fit sample method with multiclass target \n  ", 
" test the sklearn estimator compatibility \n                ", 
" test either if an error is raised with a wrong decimal value for          ", 
" test the initialisation of the object \n                ", 
" test either if an error when there is a single class \n                ", 
" test either if an error is raised when the balancing ratio to fit is          ", 
" test the fitting method \n                ", 
" test either if an error is raised when sample is called before                 ", 
" test the fit sample routine \n          ", 
" test the fit sample routine with a 0 5 ratio \n   ", 
" test either if an error is raised when x is different at fitting                  ", 
" test either if an error is raised when the target are not binary     ", 
" test fit sample with nn object \n    ", 
" test either if an error is raised while passing a wrong nn object \n", 
" test the sklearn estimator compatibility \n                 ", 
" test either if an error is raised with a wrong decimal value for           ", 
" test either if an error is raised when the wrong kind of smote is ", 
" test either if an error when there is a single class \n                 ", 
" test the fitting method \n                 ", 
" test either if an error is raised when sample is called before                  ", 
" test sample function with regular smote  \n", 
" test sample function with regular smote and a ratio of 0 5  \n", 
" test sample function with borderline 1 smote  \n", 
" test sample function with borderline 2 smote  \n", 
" test sample function with svm smote  \n", 
" test either if an error is raised when x is different at fitting                   ", 
" test either if an error is raised when the target are not binary      ", 
" test sample with nn object provided  \n", 
" test sample function with regular smote with a nn object  \n", 
" test either if an error is raised while passing a wrong nn object  \n", 
" test sample function with regular smote with a nn object  \n ", 
" test sample function with regular smote with a nn object  \n  ", 
" check that module is installed with a recent enough version \n", 
" throw an exception if imbalanced learn dependencies are not installed  ", 
" compute sensitivity  specificity  and support for each class ", 
" compute the sensitivity ", 
" compute the specificity ", 
" compute the geometric mean ", 
" balance any scoring function using the index balanced accuracy ", 
" build a classification report based on metrics used with imbalanced ", 
" make some classification predictions on a toy dataset using a svc ", 
" test sensitivity specificity for binary classification task \n", 
" test sensitivity and specificity behave with a single positive or ", 
" test handling of explicit additional  not in input  labels to ss \n", 
" test a subset of labels may be requested for ss \n", 
" test either if an error is raised when the input are multilabels \n", 
" test either if an error is raised depending on parameters \n", 
" check warning that pos_label unused when set to non default value ", 
" test the geometric mean for binary classification task \n", 
" test to test the iba using the geometric mean \n", 
" private function to reformat the report for testing \n", 
" test classification report for multiclass problem \n", 
" test performance report with added digits in floating point values \n", 
" test the report with string label \n", 
" test classification report with unicode label \n", 
" test classification report with long string label \n", 
" test the compatibility of sklearn metrics within iba \n", 
" test if an error is raised when a scoring metric take over parameters ", 
" test if the implemented scorer can be used in scikit learn \n", 
" turns a dataset into an imbalanced dataset at specific ratio  ", 
" test either if an error is raised with bad ratio ", 
" test either if error is raised with higher ratio ", 
" test either if an error when there is a single class \n                  ", 
" test make_imbalance \n", 
" test make_imbalance \n ", 
" test make_imbalance \n  ", 
" test make_imbalance \n   ", 
" test make_imbalance \n    ", 
" test make_imbalance with multiclass data \n", 
" test the sklearn estimator compatibility \n                  ", 
" test either if an error is raised with a wrong decimal value for            ", 
" test either if an error when there is a single class \n                   ", 
" test the fitting method \n                  ", 
" test either if an error is raised when sample is called before                   ", 
" test sample function with regular smote  \n ", 
" test sample function with regular smote and a ratio of 0 5  \n ", 
" test either if an error is raised when x is different at fitting                    ", 
" test either if an error is raised when the target are not binary       ", 
" test right processing while passing objects as initialization \n", 
" test right processing while passing no object as initialization \n", 
" test right processing while passing old parameters \n", 
" test either if an error is raised while wrong objects are provided ", 
" test the sklearn estimator compatibility \n                   ", 
" test either if an error is raised with a wrong decimal value for             ", 
" test either if an error when there is a single class \n                    ", 
" test the fitting method \n                   ", 
" test either if an error is raised when sample is called before                    ", 
" test sample function with regular smote  \n  ", 
" test sample function with regular smote and a ratio of 0 5  \n  ", 
" test either if an error is raised when x is different at fitting                     ", 
" test either if an error is raised when the target are not binary        ", 
" test right processing while passing objects as initialization \n ", 
" test right processing while passing no object as initialization \n ", 
" test right processing while passing old parameters \n ", 
" test either if an error is raised while wrong objects are provided  ", 
" separates out the parameters from the content_type and returns both in a tuple  content_type  parameters  \n", 
" attaches the supplied content_type to a hug formatting function \n", 
" converts text that may be camelcased into an underscored format \n", 
" converts text that may be underscored into a camelcase format \n", 
" returns a different transformer depending on the content type passed in  ", 
" returns a different transformer depending on the suffix at the end of the requested url  ", 
" returns a different transformer depending on the prefix at the end of the requested url  ", 
" returns the results of applying all passed in transformers to data ", 
" validation only succeeds if all passed in validators return no errors \n", 
" if any of the specified validators pass the validation succeeds \n", 
" enables ensuring that one of multiple optional fields is set \n", 
" returns true if the passed in function is identified as a method  not a function  \n", 
" returns true if the passed in function is a coroutine \n", 
" returns the name of all arguments a function takes \n", 
" returns true if the supplied function takes keyword arguments \n", 
" returns true if the supplied functions takes extra non keyword arguments \n", 
" returns the arguments that a function takes from a list of requested arguments \n", 
" returns true if all supplied arguments are found in the function \n", 
" dynamically creates a function that when called with dictionary of arguments will produce a kwarg that  s ", 
" redirects to the specified location using the provided http_code  defaults to http_302 found  \n", 
" redirects to the specified location using http 301 status code \n", 
" redirects to the specified location using http 302 status code \n", 
" redirects to the specified location using http 303 status code \n", 
" redirects to the specified location using http 304 status code \n", 
" redirects request handling to the not found render \n", 
" wraps authentication logic  verify_user through to the authentication function  ", 
" basic http authentication \n", 
" api key header authentication ", 
" token verification ", 
" returns a simple verification callback that simply verifies that the users and password match that provided \n", 
" registers the wrapped method as a json converter for the provided types  ", 
" json  javascript serialized object notation  \n", 
" renders as the specified content type only if no errors are found in the provided data object \n", 
" free form utf 8 text \n", 
" html  hypertext markup language  \n", 
" json  javascript serialized object notation  with all keys camelcased \n", 
" json  javascript serialized object notion  pretty printed and indented \n", 
" dynamically creates an image type handler for the specified image type \n", 
" dynamically creates a video type handler for the specified video type \n", 
" a dynamically retrieved file \n", 
" returns a content in a different format based on the clients provided content type  ", 
" separates out the quality score from the accepted content_type \n", 
" returns a content in a different format based on the clients defined accepted content type  ", 
" returns a content in a different format based on the suffix placed at the end of the url route ", 
" returns a content in a different format based on the prefix placed at the end of the url route ", 
" takes plain text data \n", 
" takes json formatted data  converting it into native python objects \n", 
" converts json formatted date to native python objects  ", 
" converts query strings into native python objects \n", 
" converts multipart form data into native python objects \n", 
" simulates a round trip call against the given api   url \n", 
" simulates testing a hug cli method from the command line \n", 
" marks a callable as a built in directive \n", 
" returns the module that is running this hug api function \n", 
" returns the api instance in which this api function is being ran \n", 
" returns the current api_version as a directive for use in both request and not request handling code \n", 
" returns documentation for the current api \n", 
" returns the session associated with the current request \n", 
" returns the current logged in user \n", 
" a decorator that allows you to override the default output format for an api \n", 
" a decorator that allows you to override the default output format for an api \n ", 
" a decorator that registers a single hug directive \n", 
" runs the provided function on startup  passing in an instance of the api \n", 
" registers a middleware function that will be called on every request \n", 
" registers a middleware function that will be called on every response \n", 
" registers a middleware class \n", 
" extends the current api  with handlers from an imported api  optionally provide a route that prefixes access \n", 
" enables building decorators around functions used for hug routes without chaninging their function signature \n", 
" modifies the provided function to support kwargs by only passing along kwargs for parameters it accepts \n", 
" accepts file uploads \n", 
" serves up a png image  \n", 
" adds initial data to the api on startup \n", 
" adds initial data to the api on startup \n ", 
" returns all stored data \n", 
" this example shows how to read in post data w  hug outside of its automatic param parsing \n", 
" says hello \n", 
" watch an example movie  streamed directly to you from hug \n", 
" for testing \n", 
" for testing \n ", 
" for testing \n  ", 
" for testing \n   ", 
" for testing \n    ", 
" for testing \n     ", 
" for testing \n      ", 
" for testing \n       ", 
" for testing \n        ", 
" for testing \n         ", 
" for testing \n          ", 
" handles the provided exception for testing \n", 
" for testing \n           ", 
" test to ensure it  s possible to rechieve an api singleton from an arbitrary object \n", 
" ensure it  s possible to dynamically insert a new hug api on demand \n", 
" test to ensure the transformer used can change based on the provided content type \n", 
" test to ensure transformer content based on the end suffix of the url works as expected \n", 
" test to ensure transformer content based on the end prefix of the url works as expected \n", 
" test to ensure transform all allows chaining multiple transformations as expected \n", 
" test that the base redirect to function works as expected \n", 
" test to ensure function causes a redirect with http 301 status code \n", 
" test to ensure function causes a redirect with http 302 status code \n", 
" test to ensure function causes a redirect with http 303 status code \n", 
" test to ensure function causes a redirect with http 307 status code \n", 
" ensure that it  s possible to output a hug api method as text \n", 
" ensure that it  s possible to output a hug api method as html \n", 
" ensure that it  s possible to output a hug api method as json \n", 
" ensure that it  s possible to output a hug api method as prettified and indented json \n", 
" ensure that it  s possible to output a hug api method as camelcased json \n", 
" ensure that it  s possible to output images with hug \n", 
" ensure that it  s possible to easily output files \n", 
" ensure that it  s possible to output videos with hug \n", 
" test to ensure formats that use on_valid content types gracefully handle error dictionaries \n", 
" ensure that it  s possible to route the output type format by the requested content type \n", 
" ensure that it  s possible to route the output type format by the requests stated accept header \n", 
" ensure that it  s possible to route the output type format by the suffix of the requested url \n", 
" ensure that it  s possible to route the output type format by the prefix of the requested url \n", 
" test creating class based routers \n", 
" test creating class based routers using method mappings \n", 
" test creating class based routers using method mappings  then overriding url on sub method \n", 
" basic operation test \n", 
" test creating class based routers using method mappings exposing cli endpoints \n", 
" test to ensure its possible to route a class after it is instanciated \n", 
" test to ensure hugs introspection can correctly identify the difference between a function and method \n", 
" test to ensure hug introspection can correctly pull out arguments from a function definition \n", 
" test to ensure hug introspection can correctly identify when a function takes kwargs \n", 
" test to ensure hug introspection can correctly identify when a function takes args \n", 
" test to ensure hug introspection can correctly identify which arguments supplied a function will take \n", 
" test to ensure hug introspection can correctly identify if a function takes all specified arguments \n", 
" test to ensure hug introspection can correctly dynamically filter out kwargs for only those accepted \n", 
" defines a dependency for and then includes a uniquely identified hug api for a single test case \n", 
" the most basic happy path test for hug apis using async \n", 
" the most basic happy path test for hug apis using async \n ", 
" test to ensure the most basic call still works if applied to a method \n", 
" test to ensure the most basic call still works if applied to a method \n ", 
" test to ensure instance method calling via async works as expected \n", 
" test to ensure the abstract type object can  t be used \n", 
" tests that hug  s number type correctly converts and validates input \n", 
" tests that hug  s range type successfully handles ranges of numbers \n", 
" tests that hug  s less than type successfully limits the values passed in \n", 
" tests that hug  s greater than type succefully limis the values passed in \n", 
" tests that hug  s multile type correctly forces values to come back as lists  but not lists of lists \n", 
" test to ensure hug  s custom delimited list type function works as expected \n", 
" tests that hug  s comma separated type correctly converts into a python list \n", 
" tests to ensure the float type correctly allows floating point values \n", 
" tests to ensure the decimal type correctly allows decimal values \n", 
" test to ensure the custom boolean type correctly supports boolean conversion \n", 
" test to ensure the mapping type works as expected \n", 
" test to ensure that the smart boolean type works as expected \n", 
" tests that hug  s text validator correctly handles basic values \n", 
" tests that hug  s text validator correctly handles uuid values ", 
" tests that hug  s length type successfully handles a length range \n", 
" tests that hug  s shorter than type successfully limits the values passed in \n", 
" tests that hug  s greater than type succefully limis the values passed in \n ", 
" test to ensure that hug  s cut_off type works as expected \n", 
" tests that inline dictionary values are correctly handled \n", 
" tests that hug allows limiting a value to one of a list of values \n", 
" tests to ensure the accept type wrapper works as expected \n", 
" tests to ensure it  s easy to custom the exception text using the accept wrapper \n", 
" tests to ensure it  s easy to custom the exception text using the accept wrapper \n ", 
" test to ensure that the json type correctly handles url encoded json  as well as direct json \n", 
" test to ensure that the multi type correctly handles a variety of value types \n", 
" test to ensure that chaining together multiple types works as expected \n", 
" test the concept of a nullable type \n", 
" test hug  s complex schema types \n", 
" test hug  s marshmallow schema support \n", 
" test hug  s new type creation decorator works as expected \n", 
" for science  \n", 
" test to ensure hug provides basic_auth handler works as expected \n", 
" test the included api_key based header to ensure it works as expected to allow x api key based authentication \n", 
" test json web token \n", 
" test to ensure documentation correctly carries over   to address issue  252 \n", 
" ensure that plain text input format works as intended \n", 
" ensure that the json input format works as intended \n", 
" ensure that camelcase keys can be converted into under_score for easier use within python \n", 
" ensure that urlencoded input format works as intended \n", 
" ensure multipart form data works as intended \n", 
" test to ensure hug  s all validation function works as expected to combine validators \n", 
" test to ensure hug  s any validation function works as expected to combine validators \n", 
" test to ensure hug  s contains_one_of validation function works as expected to ensure presence of a field \n", 
" generate a unique key for a scope that can be used as a ", 
" check that setting field to the same value marks mutable fields as dirty  ", 
" returns the number of plugins that have been cached  \n", 
" set up tests for when there  s a save error in the underlying keyvaluestore \n", 
" ensure that accessing a mutable field type does not mark it dirty ", 
" ensure that mutating the default value for a field causes ", 
" compare two blocks for equivalence  \n", 
" helper method to implement  unabc  \n", 
" add dummy methods to a class to satisfy abstract base class constraints  ", 
" tests that get_current_user   works on a dummy user service  \n", 
" tests notimplemented error raised by userservice when not instantiated with kwarg get_current_user \n", 
" returns string suitable to be used as an xmlns parameters in xblock xml representation \n", 
" turn any run of whitespace into one space  \n", 
" test method  ", 
" test ugettext calls in xblock  \n", 
" raise an exception when we have ambiguous entry points  \n", 
" mark a function as public  in the future  this will inform the ", 
" returns a django response to the  webob_response  \n", 
" returns a new  webob multidict  from a  django http querydict   ", 
" returns a webob request to the  django_request  \n", 
" run the python in  pycode   and return a dict of the resulting globals  \n", 
" secret key generator  ", 
" multiprocess safe secret key file generator  ", 
" maps keys for attachment details view  \n", 
" maps keys for attachment summary view  \n", 
" maps keys for conductors details view  \n", 
" maps keys for conductors summary view  \n", 
" remove search options that are not valid for non admin api context  \n", 
" attaches serializers to a method  ", 
" attaches deserializers to a method  ", 
" attaches response code to a method  ", 
" determine action to invoke  \n", 
" determine action to invoke  \n ", 
" mark a function as an action  ", 
" indicate a function extends an operation  ", 
" returns a summary list of hosts  \n", 
" makes sure that the host exists  \n", 
" a paste pipeline replica that keys off of auth_strategy  \n", 
" get items in obj  \n", 
" create a template element as a child of another  ", 
" attach an atom  links  element to the parent  \n", 
" utility for simple xml templates that traditionally used ", 
" registers all standard api extensions  \n", 
" return marker  limit tuple from request  ", 
" extract integer limit from request or fail \n", 
" extract marker id from request or fail \n", 
" return a slice of items according to requested offset and limit  ", 
" return a slice of items according to the requested marker and limit  \n", 
" removes the first api version from the href  ", 
" unquotes a header value  ", 
" parse lists as described by rfc 2068 section 2  ", 
" parse a   content type   like header into a tuple with the content ", 
" returns validation of a value as a uuid  ", 
" save current exception  run some code and then re raise  ", 
" find an arg of type requestcontext and return it  ", 
" setup logging  \n", 
" returns a filter object of class class_name \n", 
" load filters from a list of directories \n", 
" checks user command and arguments through command filters and ", 
" convert a complex object into primitives  ", 
" takes in a string and an email alias mapping and replaces all ", 
" write a changelog based on the git changelog  \n", 
" create authors file using git commits  \n", 
" return dict of commands to run from setup py  \n", 
" return the number of commits since the most recent tag  ", 
" return a version which is equal to the tag that  s on the current ", 
" get the version from pkg info file if we can  \n", 
" get the version of the project  first  try getting it from pkg info  if ", 
" interpret a string as a host port pair  ", 
" set the brain used by enforce    ", 
" clear the brain used by enforce    \n", 
" enforces authorization of some rules against credentials  ", 
" register a function as a policy check  ", 
" recursively checks credentials based on the brains rules  \n", 
" check that there is a matching role in the cred dict  \n", 
" check http  rules by calling to a remote server  ", 
" check an individual match  ", 
" interpret a string as a boolean and return either 1 or 0  ", 
" interpret a string as a boolean  ", 
" decodes incoming str using  incoming  if they  re ", 
" encodes incoming str unicode using  encoding   if ", 
" synchronization decorator  ", 
" deprecated in grizzly  please use rpc_notifier instead  \n", 
" sends a notification via rpc \n", 
" notifies the recipient of the desired event given the model \n", 
" test notifier  stores notifications in memory for unittests  \n", 
" notifies the recipient of the desired event given the model  ", 
" decorator for notify which is used from utils monkey_patch   ", 
" sends a notification using the specified driver ", 
" instantiate  cache  and return drivers based on the conf  \n", 
" add a notification driver at runtime  \n", 
" used by unit tests to reset the drivers  \n", 
" sends a notification via rpc \n ", 
" construct the arguments for declaring a queue  ", 
" create a connection \n", 
" make a call that returns multiple times  \n", 
" sends a message on a topic and wait for a response  \n", 
" sends a message on a topic without waiting for a response  \n", 
" sends a message on a fanout exchange without waiting for a response  \n", 
" sends a message on a topic to a specific server  \n", 
" sends a message on a fanout exchange to a specific server  \n", 
" sends a notification event on a topic  \n", 
" create a connection \n ", 
" make sure a message intended for rpc can be serialized  \n", 
" make a call that returns multiple times  \n ", 
" sends a message on a topic and wait for a response  \n ", 
" cast to all consumers of a topic \n", 
" create a connection \n  ", 
" make a call that returns multiple times  \n  ", 
" sends a message on a topic and wait for a response  \n  ", 
" sends a message on a topic without waiting for a response  \n ", 
" sends a message on a fanout exchange without waiting for a response  \n ", 
" sends a message on a topic to a specific server  \n ", 
" sends a message on a fanout exchange to a specific server  \n ", 
" sends a notification event on a topic  \n ", 
" sends a reply or an error on the channel signified by msg_id  ", 
" unpack context from msg  \n", 
" pack context into msg  ", 
" add unique_id for checking duplicate messages  \n", 
" create a connection \n   ", 
" make a call that returns multiple times  \n   ", 
" sends a message on a topic and wait for a response  \n   ", 
" sends a message on a topic without waiting for a response  \n  ", 
" sends a message on a fanout exchange without waiting for a response  \n  ", 
" sends a message on a topic to a specific server  \n  ", 
" sends a message on a fanout exchange to a specific server  \n  ", 
" sends a notification event on a topic  \n  ", 
" create a connection to the message bus used for rpc  ", 
" invoke a remote method that returns something  ", 
" invoke a remote method that does not return anything  ", 
" broadcast a remote method invocation with no return  ", 
" invoke a remote method and get back an iterator  ", 
" send notification event  ", 
" clean up resoruces in use by implementation  ", 
" invoke a remote method that does not return anything   ", 
" broadcast to a remote method invocation with no return  ", 
" get a queue name for a given topic   host  ", 
" delay import of rpc_backend until configuration is loaded  \n", 
" sanitizes the msg_data field before logging  \n", 
" prepares exception data to be sent over rpc  ", 
" decorator for manager methods that raise expected exceptions  ", 
" determine whether versions are compatible  ", 
" serialization wrapper ", 
" deserialization wrapper \n", 
" unflattens the rpc envelope  ", 
" wraps the sending of messages  ", 
" multiple calls  \n", 
" send a message  expect a response  \n", 
" send a message expecting no reply  \n", 
" send a message to all listening and expect no reply  \n", 
" send notification event   ", 
" clean up resources in use by implementation  \n", 
" create a directory  and any ancestor directories required  ", 
" returns a class from a string including module and class \n", 
" import a class and return an instance of it  \n", 
" import a class and return an instance of it  first by trying ", 
" import a module  \n", 
" try to import a module and if it fails return default  \n", 
" stringify time in iso 8601 format \n", 
" parse time from iso 8601 format \n", 
" returns formatted utcnow  \n", 
" turn a formatted time back into a datetime  \n", 
" normalize time in arbitrary timezone to utc naive object \n", 
" return true if before is older than seconds  \n", 
" return true if after is newer than seconds  \n", 
" timestamp version of our utcnow function  \n", 
" overridable version of utils utcnow  \n", 
" returns a iso8601 formated date from timestamp \n", 
" override utils utcnow to return a constant time or a list thereof  ", 
" advance overridden time using a datetime timedelta  \n", 
" advance overridden time by seconds  \n", 
" remove the overridden time  \n", 
" make an rpc safe datetime with microseconds  ", 
" unmarshall a datetime dict  \n", 
" compute the difference in seconds between two date  time  or ", 
" determines if time is going to happen in the next window seconds  ", 
" find a configuration file using the given hint  ", 
" helper method to execute command with optional retry  ", 
" a wrapper around execute   to more easily handle warnings and errors  ", 
" this method gives you the most recently  completed  audit period  ", 
" generate a random password from the supplied symbol groups  ", 
" parse an xml string using minidom safely  \n", 
" escapes a string so it is valid within xml or xhtml  \n", 
" try to turn a string into utf 8 if possible  ", 
" delete a file  but ignore file not found error \n", 
" returns a list of items matching the specified path  ", 
" recursively flatten a nested dictionary  \n", 
" return two dicts  one with  keys  the other with everything else  \n", 
" return a dict in which the dictionaries keys are mapped to new keys  \n", 
" return a dict that only contains a subset of keys  \n", 
" checks that obj is of type cls  and lets pylint infer types  \n", 
" convert a string representation of a bool into a bool value \n", 
" check if the provided string is a valid bool string or not  \n", 
" valid the address strictly as per format xxx xxx xxx xxx  ", 
" if the flags monkey_patch set as true  ", 
" convert a value or list into a list of dicts \n", 
" decorator that logs how long a particular function took to execute \n", 
" generate the url to glance  \n", 
" catches exception  write message to the log  re raise  ", 
" protect code that wants to operate on path atomically  ", 
" return a path to a particular device  ", 
" local total_seconds implementation for compatibility with python 2 6 \n", 
" return a hostname which conforms to rfc 952 and rfc 1123 specs  \n", 
" read from a file if it has been modified  ", 
" open file ", 
" generate a hash for the contents of a file  \n", 
" temporarily set the attr on a particular object to a given value then ", 
" check whether a service is up based on last heartbeat  \n", 
" generate an ethernet mac address  \n", 
" secure helper to read file as root  \n", 
" temporarily chown a path  ", 
" constant time string comparison  ", 
" walk class hierarchy  yielding most derived classes first \n", 
" create a directory  and any ancestor directories required   ", 
" try to turn a string into a number of bytes  looks at the last ", 
" read from a file if it has been modified   ", 
" verifies that the action is valid on the target in this context  ", 
" whether or not roles contains   admin   role according to policy setting  \n", 
" decorator to indicate that a method is a periodic task  ", 
" decorator to indicate that a method is a periodic task   ", 
" returns a query with sorting   pagination criteria added  ", 
" returns the actual ip of the local machine  ", 
" register models and create metadata  ", 
" return a sqlalchemy session  \n", 
" switch sqlite connections to non synchronous mode \n", 
" ensures that mysql connections checked out of the ", 
" return true if error in connecting to db  \n", 
" return a sqlalchemy engine  \n", 
" return a sqlalchemy sessionmaker using the given engine  \n", 
" get the path for the migrate repository  \n", 
" indicates if the request context is an administrator  \n", 
" indicates if the request context is a normal user  \n", 
" ensures a request has permission to access the given project  \n", 
" ensures a request has permission to access the given user  \n", 
" ensures a request has permission to access the given quota class  \n", 
" decorator to require admin request context  ", 
" decorator to require  any  user or admin context  ", 
" query helper that accounts for context  s  read_deleted  field  ", 
" applies exact match filtering to a query  ", 
" compute the current utilization of a given host  \n", 
" creates a new computenode and populates the capacity fields ", 
" creates a new computenode and populates the capacity fields  ", 
" get all capacity entries for the given host  \n", 
" update a specific computenode entry by a series of deltas  ", 
" like compute_node_utilization_update   modify a specific host ", 
" migrate the database to  version  or the most recent version  \n", 
" display the current database version  \n", 
" destroy the service or raise if it does not exist  \n", 
" get a service or raise if it does not exist  \n", 
" get a service by host it  s on and topic it listens to  \n", 
" get all services  \n", 
" get all services for a given topic  \n", 
" get all services for a given host  \n", 
" get all compute services for a given host  \n", 
" get all servicemanage services sorted by servicemanage count  ", 
" get the state of an service by node name and binary  \n", 
" create a service from the values dictionary  \n", 
" set the given properties on an service and update it  ", 
" get an computenode or raise if it does not exist  \n", 
" get all computenodes  \n", 
" create a computenode from the values dictionary  \n", 
" set the given properties on an computenode and update it  ", 
" check for   todo      ", 
" check for   except     ", 
" check for   assertraises exception    ", 
" check for import format  ", 
" check for import module only  ", 
" check for imports in alphabetical order  ", 
" check for docstring not start with space  ", 
" check one line docstring end  ", 
" check multi line docstring end  ", 
" generator that checks token stream for localization errors  ", 
" check localization in line  ", 
" record the current file being tested  \n", 
" monkey patch in monitor guidelines  ", 
" set up a reasonably sensible default for pybasedir  my_ip and host  \n", 
" attaches serializers to a method   ", 
" attaches deserializers to a method   ", 
" attaches response code to a method   ", 
" determine action to invoke  \n  ", 
" determine action to invoke  \n   ", 
" mark a function as an action   ", 
" indicate a function extends an operation   ", 
" returns a summary list of hosts  \n ", 
" makes sure that the host exists  \n ", 
" a paste pipeline replica that keys off of auth_strategy  \n ", 
" get items in obj  \n ", 
" create a template element as a child of another   ", 
" attach an atom  links  element to the parent  \n ", 
" utility for simple xml templates that traditionally used  ", 
" registers all standard api extensions  \n ", 
" return marker  limit tuple from request   ", 
" extract integer limit from request or fail \n ", 
" extract marker id from request or fail \n ", 
" return a slice of items according to requested offset and limit   ", 
" return a slice of items according to the requested marker and limit  \n ", 
" removes the first api version from the href   ", 
" unquotes a header value   ", 
" parse lists as described by rfc 2068 section 2   ", 
" parse a   content type   like header into a tuple with the content  ", 
" returns validation of a value as a uuid   ", 
" save current exception  run some code and then re raise   ", 
" find an arg of type requestcontext and return it   ", 
" setup logging  \n ", 
" returns a filter object of class class_name \n ", 
" load filters from a list of directories \n ", 
" checks user command and arguments through command filters and  ", 
" convert a complex object into primitives   ", 
" takes in a string and an email alias mapping and replaces all  ", 
" write a changelog based on the git changelog  \n ", 
" create authors file using git commits  \n ", 
" return dict of commands to run from setup py  \n ", 
" return the number of commits since the most recent tag   ", 
" return a version which is equal to the tag that  s on the current  ", 
" get the version from pkg info file if we can  \n ", 
" get the version of the project  first  try getting it from pkg info  if  ", 
" interpret a string as a host port pair   ", 
" set the brain used by enforce     ", 
" clear the brain used by enforce    \n ", 
" enforces authorization of some rules against credentials   ", 
" register a function as a policy check   ", 
" recursively checks credentials based on the brains rules  \n ", 
" check that there is a matching role in the cred dict  \n ", 
" check http  rules by calling to a remote server   ", 
" check an individual match   ", 
" interpret a string as a boolean and return either 1 or 0   ", 
" interpret a string as a boolean   ", 
" decodes incoming str using  incoming  if they  re  ", 
" encodes incoming str unicode using  encoding   if  ", 
" synchronization decorator   ", 
" deprecated in grizzly  please use rpc_notifier instead  \n ", 
" sends a notification via rpc \n  ", 
" notifies the recipient of the desired event given the model \n ", 
" test notifier  stores notifications in memory for unittests  \n ", 
" notifies the recipient of the desired event given the model   ", 
" decorator for notify which is used from utils monkey_patch    ", 
" sends a notification using the specified driver  ", 
" instantiate  cache  and return drivers based on the conf  \n ", 
" add a notification driver at runtime  \n ", 
" used by unit tests to reset the drivers  \n ", 
" sends a notification via rpc \n   ", 
" construct the arguments for declaring a queue   ", 
" create a connection \n    ", 
" make a call that returns multiple times  \n    ", 
" sends a message on a topic and wait for a response  \n    ", 
" sends a message on a topic without waiting for a response  \n   ", 
" sends a message on a fanout exchange without waiting for a response  \n   ", 
" sends a message on a topic to a specific server  \n   ", 
" sends a message on a fanout exchange to a specific server  \n   ", 
" sends a notification event on a topic  \n   ", 
" create a connection \n     ", 
" make sure a message intended for rpc can be serialized  \n ", 
" make a call that returns multiple times  \n     ", 
" sends a message on a topic and wait for a response  \n     ", 
" cast to all consumers of a topic \n ", 
" create a connection \n      ", 
" make a call that returns multiple times  \n      ", 
" sends a message on a topic and wait for a response  \n      ", 
" sends a message on a topic without waiting for a response  \n    ", 
" sends a message on a fanout exchange without waiting for a response  \n    ", 
" sends a message on a topic to a specific server  \n    ", 
" sends a message on a fanout exchange to a specific server  \n    ", 
" sends a notification event on a topic  \n    ", 
" sends a reply or an error on the channel signified by msg_id   ", 
" unpack context from msg  \n ", 
" pack context into msg   ", 
" add unique_id for checking duplicate messages  \n ", 
" create a connection \n       ", 
" make a call that returns multiple times  \n       ", 
" sends a message on a topic and wait for a response  \n       ", 
" sends a message on a topic without waiting for a response  \n     ", 
" sends a message on a fanout exchange without waiting for a response  \n     ", 
" sends a message on a topic to a specific server  \n     ", 
" sends a message on a fanout exchange to a specific server  \n     ", 
" sends a notification event on a topic  \n     ", 
" create a connection to the message bus used for rpc   ", 
" invoke a remote method that returns something   ", 
" invoke a remote method that does not return anything    ", 
" broadcast a remote method invocation with no return   ", 
" invoke a remote method and get back an iterator   ", 
" send notification event    ", 
" clean up resoruces in use by implementation   ", 
" invoke a remote method that does not return anything     ", 
" broadcast to a remote method invocation with no return   ", 
" get a queue name for a given topic   host   ", 
" delay import of rpc_backend until configuration is loaded  \n ", 
" sanitizes the msg_data field before logging  \n ", 
" prepares exception data to be sent over rpc   ", 
" decorator for manager methods that raise expected exceptions   ", 
" determine whether versions are compatible   ", 
" serialization wrapper  ", 
" deserialization wrapper \n ", 
" unflattens the rpc envelope   ", 
" wraps the sending of messages   ", 
" multiple calls  \n ", 
" send a message  expect a response  \n ", 
" send a message expecting no reply  \n ", 
" send a message to all listening and expect no reply  \n ", 
" send notification event     ", 
" clean up resources in use by implementation  \n ", 
" create a directory  and any ancestor directories required    ", 
" returns a class from a string including module and class \n ", 
" import a class and return an instance of it  \n ", 
" import a class and return an instance of it  first by trying  ", 
" import a module  \n ", 
" try to import a module and if it fails return default  \n ", 
" stringify time in iso 8601 format \n ", 
" parse time from iso 8601 format \n ", 
" returns formatted utcnow  \n ", 
" turn a formatted time back into a datetime  \n ", 
" normalize time in arbitrary timezone to utc naive object \n ", 
" return true if before is older than seconds  \n ", 
" return true if after is newer than seconds  \n ", 
" timestamp version of our utcnow function  \n ", 
" overridable version of utils utcnow  \n ", 
" returns a iso8601 formated date from timestamp \n ", 
" override utils utcnow to return a constant time or a list thereof   ", 
" advance overridden time using a datetime timedelta  \n ", 
" advance overridden time by seconds  \n ", 
" remove the overridden time  \n ", 
" make an rpc safe datetime with microseconds   ", 
" unmarshall a datetime dict  \n ", 
" compute the difference in seconds between two date  time  or  ", 
" determines if time is going to happen in the next window seconds   ", 
" find a configuration file using the given hint   ", 
" helper method to execute command with optional retry   ", 
" a wrapper around execute   to more easily handle warnings and errors   ", 
" this method gives you the most recently  completed  audit period   ", 
" generate a random password from the supplied symbol groups   ", 
" parse an xml string using minidom safely  \n ", 
" escapes a string so it is valid within xml or xhtml  \n ", 
" try to turn a string into utf 8 if possible   ", 
" delete a file  but ignore file not found error \n ", 
" returns a list of items matching the specified path   ", 
" recursively flatten a nested dictionary  \n ", 
" return two dicts  one with  keys  the other with everything else  \n ", 
" return a dict in which the dictionaries keys are mapped to new keys  \n ", 
" return a dict that only contains a subset of keys  \n ", 
" checks that obj is of type cls  and lets pylint infer types  \n ", 
" convert a string representation of a bool into a bool value \n ", 
" check if the provided string is a valid bool string or not  \n ", 
" valid the address strictly as per format xxx xxx xxx xxx   ", 
" if the flags monkey_patch set as true   ", 
" convert a value or list into a list of dicts \n ", 
" decorator that logs how long a particular function took to execute \n ", 
" generate the url to glance  \n ", 
" catches exception  write message to the log  re raise   ", 
" protect code that wants to operate on path atomically   ", 
" return a path to a particular device   ", 
" local total_seconds implementation for compatibility with python 2 6 \n ", 
" return a hostname which conforms to rfc 952 and rfc 1123 specs  \n ", 
" read from a file if it has been modified    ", 
" open file  ", 
" generate a hash for the contents of a file  \n ", 
" temporarily set the attr on a particular object to a given value then  ", 
" check whether a service is up based on last heartbeat  \n ", 
" generate an ethernet mac address  \n ", 
" secure helper to read file as root  \n ", 
" temporarily chown a path   ", 
" constant time string comparison   ", 
" walk class hierarchy  yielding most derived classes first \n ", 
" create a directory  and any ancestor directories required     ", 
" try to turn a string into a number of bytes  looks at the last  ", 
" read from a file if it has been modified     ", 
" verifies that the action is valid on the target in this context   ", 
" whether or not roles contains   admin   role according to policy setting  \n ", 
" decorator to indicate that a method is a periodic task    ", 
" decorator to indicate that a method is a periodic task     ", 
" returns a query with sorting   pagination criteria added   ", 
" returns the actual ip of the local machine   ", 
" register models and create metadata   ", 
" return a sqlalchemy session  \n ", 
" switch sqlite connections to non synchronous mode \n ", 
" ensures that mysql connections checked out of the  ", 
" return true if error in connecting to db  \n ", 
" return a sqlalchemy engine  \n ", 
" return a sqlalchemy sessionmaker using the given engine  \n ", 
" get the path for the migrate repository  \n ", 
" indicates if the request context is an administrator  \n ", 
" indicates if the request context is a normal user  \n ", 
" ensures a request has permission to access the given project  \n ", 
" ensures a request has permission to access the given user  \n ", 
" ensures a request has permission to access the given quota class  \n ", 
" decorator to require admin request context   ", 
" decorator to require  any  user or admin context   ", 
" query helper that accounts for context  s  read_deleted  field   ", 
" applies exact match filtering to a query   ", 
" compute the current utilization of a given host  \n ", 
" creates a new computenode and populates the capacity fields   ", 
" creates a new computenode and populates the capacity fields    ", 
" get all capacity entries for the given host  \n ", 
" update a specific computenode entry by a series of deltas   ", 
" like compute_node_utilization_update   modify a specific host  ", 
" migrate the database to  version  or the most recent version  \n ", 
" display the current database version  \n ", 
" destroy the service or raise if it does not exist  \n ", 
" get a service or raise if it does not exist  \n ", 
" get a service by host it  s on and topic it listens to  \n ", 
" get all services  \n ", 
" get all services for a given topic  \n ", 
" get all services for a given host  \n ", 
" get all compute services for a given host  \n ", 
" get all servicemanage services sorted by servicemanage count   ", 
" get the state of an service by node name and binary  \n ", 
" create a service from the values dictionary  \n ", 
" set the given properties on an service and update it   ", 
" get an computenode or raise if it does not exist  \n ", 
" get all computenodes  \n ", 
" create a computenode from the values dictionary  \n ", 
" set the given properties on an computenode and update it   ", 
" runs a command in an out of process shell  returning the ", 
" creates the virtual environment and installs pip only into the ", 
" parse command line arguments \n", 
" block while an action is being performed  periodically printing ", 
" get a monitor by id  \n", 
" get a monitor snapshot by id  \n", 
" get a backup by id  \n", 
" list all the monitors  \n", 
" show details about a monitor  \n", 
" add a new monitor  \n", 
" remove a monitor  \n", 
" attempt forced removal of a monitor  regardless of its state  \n", 
" rename a monitor  \n", 
" set or delete metadata on a monitor  \n", 
" list all the snapshots  \n", 
" show details about a snapshot  \n", 
" add a new snapshot  \n", 
" remove a snapshot  \n", 
" rename a snapshot  \n", 
" print a list of available   monitor types    \n", 
" print a list of current   monitor types and extra specs    admin only   \n", 
" create a new monitor type  \n", 
" delete a specific monitor type \n", 
" set or unset extra_spec for a monitor type  \n", 
" discover endpoints that get returned from the authenticate services \n", 
" show user credentials returned from auth \n", 
" list the quotas for a tenant  \n", 
" list the default quotas for a tenant  \n", 
" update the quotas for a tenant  \n", 
" list the quotas for a quota class  \n", 
" update the quotas for a quota class  \n", 
" print a list of absolute limits for a user \n", 
" print a list of rate limits for a user \n", 
" get a monitor type by name or id  \n", 
" upload monitor to image service as image  \n", 
" creates a backup  \n", 
" show details about a backup  \n", 
" list all the backups  \n", 
" remove a backup  \n", 
" restore a backup  \n", 
" list all the os api extensions that are available  \n", 
" convert a complex object into primitives    ", 
" takes in a string and an email alias mapping and replaces all   ", 
" write a changelog based on the git changelog  \n  ", 
" create authors file using git commits  \n  ", 
" return dict of commands to run from setup py  \n  ", 
" return the number of commits since the most recent tag    ", 
" return a version which is equal to the tag that  s on the current   ", 
" get the version from pkg info file if we can  \n  ", 
" get the version of the project  first  try getting it from pkg info  if   ", 
" interpret a string as a boolean and return either 1 or 0    ", 
" interpret a string as a boolean    ", 
" decodes incoming str using  incoming  if they  re   ", 
" encodes incoming str unicode using  encoding   if   ", 
" stringify time in iso 8601 format \n  ", 
" parse time from iso 8601 format \n  ", 
" returns formatted utcnow  \n  ", 
" turn a formatted time back into a datetime  \n  ", 
" normalize time in arbitrary timezone to utc naive object \n  ", 
" return true if before is older than seconds  \n  ", 
" return true if after is newer than seconds  \n  ", 
" timestamp version of our utcnow function  \n  ", 
" overridable version of utils utcnow  \n  ", 
" returns a iso8601 formated date from timestamp \n  ", 
" override utils utcnow to return a constant time or a list thereof    ", 
" advance overridden time using a datetime timedelta  \n  ", 
" advance overridden time by seconds  \n  ", 
" remove the overridden time  \n  ", 
" make an rpc safe datetime with microseconds    ", 
" unmarshall a datetime dict  \n  ", 
" compute the difference in seconds between two date  time  or   ", 
" determines if time is going to happen in the next window seconds    ", 
" decorator for cli args  \n", 
" returns the first environment variable set  ", 
" bind cli arguments to a shell py  do_foo  function  \n", 
" adds hook to bind cli arguments to resourcemanager calls  ", 
" return extra_kwargs by calling resource manager kwargs hooks  \n", 
" adds   unauthenticated   attribute to decorated function   ", 
" checks to see if the function is marked as not requiring authentication  ", 
" adds   service_type   attribute to decorated function  ", 
" retrieves service type from function \n", 
" helper for the _find_  methods  \n", 
" like issubclass  but will just return false if not a class  \n ", 
" returns a class from a string including module and class  \n ", 
" normalizes string  converts to lowercase  removes non alpha characters  ", 
" determines if expiration is about to occur  ", 
" url encode strings that are not already url encoded  \n", 
" returns a wsgi filter app for use with paste deploy  \n", 
" ensure crypto module is available  \n", 
" generates and returns a 256 bit aes key  based on sha256 hash  \n", 
" computes and returns the base64 encoded mac  \n", 
" return the base64 encoded sha1 hash of the data  \n", 
" mac the data using sha1  \n", 
" verify data integrity by ensuring mac is valid  \n", 
" encryptes the data with the given secret key  \n", 
" decrypt the data with the given secret key  \n", 
" verifies the signature of the contents iaw cms syntax \n", 
" thx to ayoung for sorting this out  ", 
" uses openssl to sign a document ", 
" return  for ans1_token  returns the hash of the passed in token ", 
" abstracts the common pattern of allowing both an object or an object  s id ", 
" return an instance of an clientexception or subclass ", 
" block while an action is being performed  periodically printing  ", 
" get a monitor by id  \n ", 
" get a monitor snapshot by id  \n ", 
" get a backup by id  \n ", 
" list all the monitors  \n ", 
" show details about a monitor  \n ", 
" add a new monitor  \n ", 
" remove a monitor  \n ", 
" attempt forced removal of a monitor  regardless of its state  \n ", 
" rename a monitor  \n ", 
" set or delete metadata on a monitor  \n ", 
" list all the snapshots  \n ", 
" show details about a snapshot  \n ", 
" add a new snapshot  \n ", 
" remove a snapshot  \n ", 
" rename a snapshot  \n ", 
" print a list of available   monitor types    \n ", 
" print a list of current   monitor types and extra specs    admin only   \n ", 
" create a new monitor type  \n ", 
" delete a specific monitor type \n ", 
" set or unset extra_spec for a monitor type  \n ", 
" discover endpoints that get returned from the authenticate services \n ", 
" show user credentials returned from auth \n ", 
" list the quotas for a tenant  \n ", 
" list the default quotas for a tenant  \n ", 
" update the quotas for a tenant  \n ", 
" list the quotas for a quota class  \n ", 
" update the quotas for a quota class  \n ", 
" print a list of absolute limits for a user \n ", 
" print a list of rate limits for a user \n ", 
" get a monitor type by name or id  \n ", 
" upload monitor to image service as image  \n ", 
" creates a backup  \n ", 
" show details about a backup  \n ", 
" list all the backups  \n ", 
" remove a backup  \n ", 
" restore a backup  \n ", 
" list all the os api extensions that are available  \n ", 
" convert a complex object into primitives     ", 
" takes in a string and an email alias mapping and replaces all    ", 
" write a changelog based on the git changelog  \n   ", 
" create authors file using git commits  \n   ", 
" return dict of commands to run from setup py  \n   ", 
" return the number of commits since the most recent tag     ", 
" return a version which is equal to the tag that  s on the current    ", 
" get the version from pkg info file if we can  \n   ", 
" get the version of the project  first  try getting it from pkg info  if    ", 
" interpret a string as a boolean and return either 1 or 0     ", 
" interpret a string as a boolean     ", 
" decodes incoming str using  incoming  if they  re    ", 
" encodes incoming str unicode using  encoding   if    ", 
" stringify time in iso 8601 format \n   ", 
" parse time from iso 8601 format \n   ", 
" returns formatted utcnow  \n   ", 
" turn a formatted time back into a datetime  \n   ", 
" normalize time in arbitrary timezone to utc naive object \n   ", 
" return true if before is older than seconds  \n   ", 
" return true if after is newer than seconds  \n   ", 
" timestamp version of our utcnow function  \n   ", 
" overridable version of utils utcnow  \n   ", 
" returns a iso8601 formated date from timestamp \n   ", 
" override utils utcnow to return a constant time or a list thereof     ", 
" advance overridden time using a datetime timedelta  \n   ", 
" advance overridden time by seconds  \n   ", 
" remove the overridden time  \n   ", 
" make an rpc safe datetime with microseconds     ", 
" unmarshall a datetime dict  \n   ", 
" compute the difference in seconds between two date  time  or    ", 
" determines if time is going to happen in the next window seconds     ", 
" decorator for cli args  \n ", 
" returns the first environment variable set   ", 
" bind cli arguments to a shell py  do_foo  function  \n ", 
" adds hook to bind cli arguments to resourcemanager calls   ", 
" return extra_kwargs by calling resource manager kwargs hooks  \n ", 
" adds   unauthenticated   attribute to decorated function    ", 
" checks to see if the function is marked as not requiring authentication   ", 
" adds   service_type   attribute to decorated function   ", 
" retrieves service type from function \n ", 
" helper for the _find_  methods  \n ", 
" like issubclass  but will just return false if not a class  \n  ", 
" returns a class from a string including module and class  \n  ", 
" normalizes string  converts to lowercase  removes non alpha characters   ", 
" determines if expiration is about to occur   ", 
" url encode strings that are not already url encoded  \n ", 
" returns a wsgi filter app for use with paste deploy  \n ", 
" ensure crypto module is available  \n ", 
" generates and returns a 256 bit aes key  based on sha256 hash  \n ", 
" computes and returns the base64 encoded mac  \n ", 
" return the base64 encoded sha1 hash of the data  \n ", 
" mac the data using sha1  \n ", 
" verify data integrity by ensuring mac is valid  \n ", 
" encryptes the data with the given secret key  \n ", 
" decrypt the data with the given secret key  \n ", 
" verifies the signature of the contents iaw cms syntax \n ", 
" thx to ayoung for sorting this out   ", 
" uses openssl to sign a document  ", 
" return  for ans1_token  returns the hash of the passed in token  ", 
" abstracts the common pattern of allowing both an object or an object  s id  ", 
" return an instance of an clientexception or subclass  ", 
" convert a complex object into primitives      ", 
" takes in a string and an email alias mapping and replaces all     ", 
" write a changelog based on the git changelog  \n    ", 
" create authors file using git commits  \n    ", 
" return dict of commands to run from setup py  \n    ", 
" return the number of commits since the most recent tag      ", 
" return a version which is equal to the tag that  s on the current     ", 
" get the version from pkg info file if we can  \n    ", 
" get the version of the project  first  try getting it from pkg info  if     ", 
" set the rules in use for policy checks  \n", 
" clear the rules used for policy checks  \n", 
" checks authorization of a rule against the target and credentials  ", 
" parse a single base check rule into an appropriate check object  \n", 
" provided for backwards compatibility   translates the old ", 
" tokenizer for the policy language  ", 
" decorator for reduction methods   arguments are a sequence of ", 
" translates a policy written in the policy language into a tree of ", 
" parses a policy rule into a tree of check objects  \n", 
" register a function or check class as a policy check  ", 
" returns a class from a string including module and class \n  ", 
" import a class and return an instance of it  \n  ", 
" import a class and return an instance of it  first by trying   ", 
" import a module  \n  ", 
" stringify time in iso 8601 format \n    ", 
" parse time from iso 8601 format \n    ", 
" returns formatted utcnow  \n    ", 
" turn a formatted time back into a datetime  \n    ", 
" normalize time in arbitrary timezone to utc naive object \n    ", 
" return true if before is older than seconds  \n    ", 
" return true if after is newer than seconds  \n    ", 
" timestamp version of our utcnow function  \n    ", 
" overridable version of utils utcnow  \n    ", 
" returns a iso8601 formated date from timestamp \n    ", 
" override utils utcnow to return a constant time or a list thereof      ", 
" advance overridden time using a datetime timedelta  \n    ", 
" advance overridden time by seconds  \n    ", 
" remove the overridden time  \n    ", 
" make an rpc safe datetime with microseconds      ", 
" unmarshall a datetime dict  \n    ", 
" compute the difference in seconds between two date  time  or     ", 
" determines if time is going to happen in the next window seconds      ", 
" return a unique id for a token  ", 
" determine when a fresh token should expire  ", 
" validate user and tenant auth info  ", 
" recreate token from an existing token  ", 
" render token data http response  ", 
" returns a wsgi filter app for use with paste deploy  \n  ", 
" forms a wsgi response  \n", 
" forms a wsgi response based on the current error  \n", 
" register the wrapped dependency provider under the specified name  \n", 
" inject specified dependencies from the registry into the instance  \n", 
" logs exceptions and aborts  \n", 
" ensure that the length of string field do not exceed the limit  ", 
" converts integrityerror into http 409 conflict  \n", 
" replace api version specific endpoint tables with one based on v3  \n", 
" create api version specific endpoint tables  \n", 
" create api version specific endpoint tables  \n ", 
" replace api version specific endpoint tables with one based on v2  \n", 
" creates the default domain  \n", 
" delete the default domain  \n", 
" split each legacy endpoint into separate records for each interface  \n", 
" re create the v2 endpoints table based on v3 endpoints  \n", 
" get the path for the migrate repository  \n  ", 
" match an ldap query to an attribute dictionary  ", 
" split a string into parenthesized groups  \n", 
" match a given key and value against an attribute list  \n", 
" returns a list of subclass strings  ", 
" read from a file if it has been modified      ", 
" truncate passwords to the max_password_length  \n", 
" hash a user dict  s password without modifying the passed in dict \n", 
" hash a user dict  s password without modifying the passed in dict \n ", 
" hash a password  hard  \n", 
" hash a password  hard  \n ", 
" check that a plaintext password matches hashed  ", 
" run command with arguments and return its output as a byte string  ", 
" format datetime object as unix timestamp ", 
" constant time string comparison    ", 
" verifies the signature of the contents iaw cms syntax \n  ", 
" thx to ayoung for sorting this out    ", 
" uses openssl to sign a document   ", 
" return  for ans1_token  returns the hash of the passed in token   ", 
" deserialize xml to a dictionary  \n", 
" serialize a dictionary to xml  \n", 
" flatten a nested dictionary ", 
" wraps api calls with role based access controls  rbac   \n", 
" wraps filtered api calls with role based access controls  rbac   \n", 
" helper function to create an httpconnection object  if ssl is set true  ", 
" helper function to create an httpconnection object  if ssl is set true   ", 
" sets up the logging options for a log with supplied name ", 
" helper method for all backend catalog  s to deal with urls \n", 
" filter out private items in a user dict  ", 
" verifies that the action is valid on the target in this context    ", 
" build auth dictionary  ", 
" you can use the kwargs to override the   retries    default  5  and ", 
" attempt to get a test config dictionary  ", 
" return the given string of header names sorted  ", 
" clean up my monkey patching \n", 
" read everything out of file from the top and clear it out \n", 
" copied from swift common db containerbroker before the metadata column was ", 
" copied from swift common db containerbroker before the ", 
" copied from swift common db accountbroker before the metadata column was ", 
" paste deploy app factory for creating wsgi container server apps \n", 
" paste deploy app factory for creating wsgi proxy apps  \n", 
" helper function to update headers in the response  ", 
" provide the timestamp of the swift http response as a floating ", 
" decorator to declare which methods should have any swift authorize call ", 
" construct a cacheable dict of account info based on response headers  \n", 
" construct a cacheable dict of container info based on response headers  \n", 
" decorator to check if the request is a cors request and if so  if it  s ", 
" get the info structure for a container  based on env and app  ", 
" get the info structure for an account  based on env and app  ", 
" will copy desired headers from from_r to to_r ", 
" check if http status code is informational  ", 
" check if http status code is successful  ", 
" check if http status code is redirection  ", 
" check if http status code is client error  ", 
" check if http status code is server error  ", 
" check metadata sent in the request headers  ", 
" check to ensure that everything is alright about an object to be created  ", 
" verify that the path to the device is a mount point and mounted   this ", 
" helper function for checking if a string can be converted to a float  ", 
" validate if a string is valid utf 8 str or unicode and that it ", 
" mimetools message defaults content type to  text plain  ", 
" bind socket to bind ip port in conf ", 
" runs the server using the specified number of workers  ", 
" loads common settings from conf ", 
" makes a new swob request based on the current env but with the ", 
" returns a new fresh wsgi environment with escalated privileges to ", 
" run a function on each container with concurrency  \n", 
" utility function to delete benchmark containers  \n", 
" utility function to create benchmark containers  \n", 
" get listings directly from the account server  ", 
" request container information directly from the container server  ", 
" get container listings directly from the container server  ", 
" request object information directly from the object server  ", 
" get object directly from the object server  ", 
" put object directly from the object server  ", 
" direct update to object metadata on object server  ", 
" delete object directly from the object server  ", 
" helper function to retry a given function a number of times  ", 
" a generator returning lines from a file starting with the last line  ", 
" returns true if the value is either true or a string in true_values  ", 
" attempt to find the function in libc  otherwise return a no op func  ", 
" get parameters from an http request ensuring proper handling utf 8 ", 
" pre allocate disk space for a file  ", 
" sync modified file data and metadata to disk  ", 
" sync modified file data to disk  ", 
" drop   buffer   cache for the given range of the given file  ", 
" format a timestamp  string or numeric  into a standardized ", 
" ensures the path is a directory or makes it if not  errors if the path ", 
" attempt to fix   hide race conditions like empty object directories ", 
" validate and split the given http request path  ", 
" validate that a device and a partition are valid and won  t lead to ", 
" returns a decorator that logs timing events or errors for public methods in ", 
" get the current system logger using config settings  ", 
" checks whether poll is available and falls back ", 
" sets the userid groupid of the current process  get session leader  etc  ", 
" log unhandled exceptions  close stdio  capture stdout and stderr  ", 
" parse standard swift server daemon options with optparse optionparser  ", 
" get the machine  s ip addresses ", 
" get the storage directory ", 
" get the connonical hash for an account container object ", 
" context manager that acquires a lock on a directory   this will block until ", 
" context manager that acquires a lock on a file   this will block until ", 
" context manager that acquires a lock on the parent directory of the given ", 
" get a nomralized length of time in the largest unit of time  hours  ", 
" compute an eta   now only if we could also have a progress bar    ", 
" iterate over partitions across all devices  ", 
" remove any file in a given path that that was last modified before mtime  ", 
" get a value from the wsgi environment ", 
" get memcache connection pool from the environment  which had been ", 
" read config file and return config items as a dict ", 
" ensure that a pickle file gets written to disk   the file ", 
" look in root  for any files dirs matching glob  recurively traversing ", 
" write contents to file at path ", 
" quiet wrapper for os unlink  oserrors are suppressed ", 
" given a devices path and a data directory  yield  path  device  ", 
" will eventlet sleep   for the appropriate time so that the max_rate ", 
" urlparse augmentation  ", 
" returns the number in a human readable format  for example 1048576    1mi   \n", 
" update recon cache values ", 
" constant time string comparison     ", 
" decorator to declare which methods are publicly accessible as http ", 
" transform ip string to an rsync compatible form ", 
" get valid parts of utf 8 str from str  unicode and even invalid utf 8 str ", 
" splits the str given and returns a properly stripped list of the comma ", 
" appends an item to a comma separated string  ", 
" consume the first item from an iterator  then re chain it to the rest of ", 
" given a domain  returns its dns cname mapping and dns ttl  ", 
" returns a wsgi filter app for use with paste deploy  \n   ", 
" returns a wsgi filter app for use with paste deploy  \n    ", 
" returns a wsgi filter app for use with paste deploy  \n     ", 
" returns the wsgi filter for use with paste deploy  \n", 
" paste deploy app factory for creating wsgi proxy apps  \n ", 
" patched version of urllib quote that encodes utf 8 strings before quoting \n", 
" returns a static web wsgi filter for use with paste deploy  \n", 
" given a request will parse the body and return a list of dictionaries ", 
" given the value of a header like  ", 
" given a multi part mime encoded input file object and boundary  ", 
" returns the wsgi filter for use with paste deploy  \n ", 
" returns a cleaned acl header value  validating that it meets the formatting ", 
" parses a standard swift acl string into a referrers list and groups list  ", 
" returns true if the referrer should be allowed based on the referrer_acl ", 
" returns a properly formatted response body according to format  ", 
" try to increase resource limits of the os  move python_egg_cache to  tmp \n", 
" decorator to declare which methods are accessible as commands  commands ", 
" monitor a collection of server pids yielding back those pids that ", 
" set and retrieve the datetime value of self headers header  ", 
" set and retrieve the value of self headers header  ", 
" set and retrieve the value of self headers header   ", 
" set and retrieve the value of response status ", 
" set and retrieve the value of response body ", 
" set and retrieve response etag ", 
" set and retrieve response content_type ", 
" set and retrieve response charset ", 
" set and retrieve response app_iter ", 
" set and retrieve  fancy  properties  ", 
" set and retrieve value of the environ_field entry in self environ  ", 
" set and retrieve the request body parameter   it consumes wsgi input and ", 
" retrieves the best guess that can be made for an absolute location up to ", 
" a decorator for translating functions which take a swob request object and ", 
" returns a tuple of tiers for a given device in ascending order by ", 
" construct the tier tree from the zone layout  ", 
" sanitize a timeout value to use an absolute expiration time if the delta ", 
" in the case that a corrupt file is found  move it to a quarantined area to ", 
" generator to walk the data dirs in a round robin manner  evenly ", 
" helper function to create an httpconnection object  if ssl is set true    ", 
" helper function to create an httpconnection object  if ssl is set true     ", 
" loads settings from conf  then instantiates daemon  klass  and runs the ", 
" this should only be used when you need a real dict  ", 
" each entry in the account and container databases is xored by the 128 bit ", 
" returns a properly configured sqlite database connection  ", 
" helper function to read the pickled metadata from an object file  ", 
" helper function to write pickled metadata for an object file  ", 
" paste deploy app factory for creating wsgi object server apps \n", 
" in the case that a file is corrupted  move it to a quarantined ", 
" performs reclamation and returns an md5 of all  remaining  files  ", 
" invalidates the hash for a suffix_dir in the partition  s hashes file  ", 
" get a list of hashes for the suffix dir   do_listdir causes it to mistrust ", 
" hack to work around eventlet  s tpool not catching and reraising timeouts  \n", 
" paste deploy app factory for creating wsgi account server apps \n", 
" check message wrapped by _   \n", 
" log xxx   hello  s     xyz  and log   hello    \n", 
" log xxx  hello  s    xyz  should be log xxx  hello  s   xyz  \n", 
" check _   hello  s     xyz  \n", 
" represents an api entity resource and the associated serialization and ", 
" allows to verify keys in a dictionary  ", 
" validate that start and end ip addresses are present ", 
" convert a value of the form   key value   to    key      value     ", 
" convert a list of   key value   strings to a dict  ", 
" extracts the filters from the request string ", 
" return marker  limit tuple from request    ", 
" extract integer limit from request or fail  \n", 
" extracts the list of arg from request \n", 
" extract sort_key and sort_dir from request  return as  ", 
" paste factory  \n", 
" helper method to shell out and execute a command through subprocess with ", 
" returns validation of a value as a uuid    ", 
" save current exception  run some code and then re raise    ", 
" find an arg of type requestcontext and return it    ", 
" setup logging  \n  ", 
" convert a complex object into primitives       ", 
" takes in a string and an email alias mapping and replaces all      ", 
" write a changelog based on the git changelog  \n     ", 
" create authors file using git commits  \n     ", 
" return dict of commands to run from setup py  \n     ", 
" return the number of commits since the most recent tag       ", 
" return a version which is equal to the tag that  s on the current      ", 
" get the version from pkg info file if we can  \n     ", 
" get the version of the project  first  try getting it from pkg info  if      ", 
" interpret a string as a host port pair    ", 
" set the rules in use for policy checks  \n ", 
" clear the rules used for policy checks  \n ", 
" checks authorization of a rule against the target and credentials   ", 
" parse a single base check rule into an appropriate check object  \n ", 
" provided for backwards compatibility   translates the old  ", 
" tokenizer for the policy language   ", 
" decorator for reduction methods   arguments are a sequence of  ", 
" translates a policy written in the policy language into a tree of  ", 
" parses a policy rule into a tree of check objects  \n ", 
" register a function or check class as a policy check   ", 
" callback function to be passed to greenthread link   when we spawn   ", 
" synchronization decorator    ", 
" deprecated in grizzly  please use rpc_notifier instead  \n  ", 
" sends a notification via rpc \n    ", 
" notifies the recipient of the desired event given the model \n  ", 
" test notifier  stores notifications in memory for unittests  \n  ", 
" notifies the recipient of the desired event given the model    ", 
" decorator for notify which is used from utils monkey_patch     ", 
" sends a notification using the specified driver   ", 
" instantiate  cache  and return drivers based on the conf  \n  ", 
" add a notification driver at runtime  \n  ", 
" used by unit tests to reset the drivers  \n  ", 
" sends a notification via rpc \n     ", 
" construct the arguments for declaring a queue    ", 
" create a connection \n        ", 
" make a call that returns multiple times  \n        ", 
" sends a message on a topic and wait for a response  \n        ", 
" sends a message on a topic without waiting for a response  \n      ", 
" sends a message on a fanout exchange without waiting for a response  \n      ", 
" sends a message on a topic to a specific server  \n      ", 
" sends a message on a fanout exchange to a specific server  \n      ", 
" sends a notification event on a topic  \n      ", 
" create a connection \n         ", 
" make sure a message intended for rpc can be serialized  \n  ", 
" make a call that returns multiple times  \n         ", 
" sends a message on a topic and wait for a response  \n         ", 
" cast to all consumers of a topic \n  ", 
" create a connection \n          ", 
" make a call that returns multiple times  \n          ", 
" sends a message on a topic and wait for a response  \n          ", 
" sends a message on a topic without waiting for a response  \n       ", 
" sends a message on a fanout exchange without waiting for a response  \n       ", 
" sends a message on a topic to a specific server  \n       ", 
" sends a message on a fanout exchange to a specific server  \n       ", 
" sends a notification event on a topic  \n       ", 
" sends a reply or an error on the channel signified by msg_id    ", 
" unpack context from msg  \n  ", 
" pack context into msg    ", 
" add unique_id for checking duplicate messages  \n  ", 
" create a connection \n           ", 
" make a call that returns multiple times  \n           ", 
" sends a message on a topic and wait for a response  \n           ", 
" sends a message on a topic without waiting for a response  \n        ", 
" sends a message on a fanout exchange without waiting for a response  \n        ", 
" sends a message on a topic to a specific server  \n        ", 
" sends a message on a fanout exchange to a specific server  \n        ", 
" sends a notification event on a topic  \n        ", 
" create a connection to the message bus used for rpc    ", 
" invoke a remote method that returns something    ", 
" invoke a remote method that does not return anything      ", 
" broadcast a remote method invocation with no return    ", 
" invoke a remote method and get back an iterator    ", 
" send notification event      ", 
" clean up resoruces in use by implementation    ", 
" invoke a remote method that does not return anything       ", 
" broadcast to a remote method invocation with no return    ", 
" get a queue name for a given topic   host    ", 
" delay import of rpc_backend until configuration is loaded  \n  ", 
" sanitizes the msg_data field before logging  \n  ", 
" prepares exception data to be sent over rpc    ", 
" decorator for manager methods that raise expected exceptions    ", 
" determine whether versions are compatible    ", 
" serialization wrapper   ", 
" deserialization wrapper \n  ", 
" unflattens the rpc envelope    ", 
" wraps the sending of messages    ", 
" multiple calls  \n  ", 
" send a message  expect a response  \n  ", 
" send a message expecting no reply  \n  ", 
" send a message to all listening and expect no reply  \n  ", 
" send notification event       ", 
" clean up resources in use by implementation  \n  ", 
" decorator to indicate that a method is a periodic task      ", 
" create a directory  and any ancestor directories required      ", 
" returns a class from a string including module and class \n   ", 
" import a class and return an instance of it  \n   ", 
" import a class and return an instance of it  first by trying    ", 
" import a module  \n   ", 
" try to import a module and if it fails return default  \n  ", 
" stringify time in iso 8601 format \n     ", 
" parse time from iso 8601 format \n     ", 
" returns formatted utcnow  \n     ", 
" turn a formatted time back into a datetime  \n     ", 
" normalize time in arbitrary timezone to utc naive object \n     ", 
" return true if before is older than seconds  \n     ", 
" return true if after is newer than seconds  \n     ", 
" timestamp version of our utcnow function  \n     ", 
" overridable version of utils utcnow  \n     ", 
" returns a iso8601 formated date from timestamp \n     ", 
" override utils utcnow to return a constant time or a list thereof       ", 
" advance overridden time using a datetime timedelta  \n     ", 
" advance overridden time by seconds  \n     ", 
" remove the overridden time  \n     ", 
" make an rpc safe datetime with microseconds       ", 
" unmarshall a datetime dict  \n     ", 
" compute the difference in seconds between two date  time  or      ", 
" determines if time is going to happen in the next window seconds       ", 
" run a wsgi server with the given application  \n", 
" create agent rpc consumers  ", 
" replaces the contents of file_name with data in a safe manner  ", 
" setup the cfg for the clean up utility  ", 
" collect ports created by quantum from ovs \n", 
" delete non internal ports created by quantum ", 
" main method for cleaning up ovs bridges  ", 
" setup the cfg for the clean up utility   ", 
" disable dhcp for a network if dhcp is still active  \n", 
" determine whether a namespace is eligible for deletion  ", 
" destroy a given namespace  ", 
" main method for cleaning up network namespaces  ", 
" returns a filter object of class class_name \n  ", 
" load filters from a list of directories \n  ", 
" checks user command and arguments through command filters and   ", 
" extract resource and action  write  read  from api operation \n", 
" verify that an attribute is present and has a non default value \n", 
" augment dictionary of target attributes for policy engine  ", 
" create the rule to match for a given action  ", 
" verifies that the action is valid on the target in this context     ", 
" verifies that the action is valid on the target in this context      ", 
" read from a file if it has been modified       ", 
" return the first config file found  ", 
" parse a list of of mapping strings into a dictionary  ", 
" compare elements if a and b have same elements ", 
" create a topic name  ", 
" sets up the logging options for a log with supplied name  ", 
" builds and returns a wsgi app from a paste config file  ", 
" create a map of agent config parameters  ", 
" synchronize vlan_allocations table with configured vlan ranges \n", 
" synchronize tunnel_allocations table with configured tunnel ranges \n", 
" get port from database \n", 
" return a 16 byte has of the uuid  used when smaller unique ", 
" helper funciton \n", 
" helper funciton \n ", 
" lists all the nexusport bindings \n", 
" lists a nexusport binding \n", 
" lists a vlan and switch binding \n", 
" adds a nexusport binding \n", 
" removes a nexusport binding \n", 
" updates nexusport binding \n", 
" lists nexusvm bindings \n", 
" lists nexusvm bindings \n ", 
" prepopulates the vlan_bindings table \n", 
" gets all the vlanids \n", 
" checks if a vlanid is in use \n", 
" sets the vlanid state to be unused \n", 
" deletes a vlanid entry from db \n", 
" reserves the first unused vlanid \n", 
" gets all the vlanids used \n", 
" lists all the vlan to network associations \n", 
" lists the vlan given a network_id \n", 
" adds a vlan to network association \n", 
" removes a vlan to network association \n", 
" updates a vlan to network association \n", 
" lists all the qos to tenant associations \n", 
" lists the qos given a tenant_id and qos_id \n", 
" adds a qos to tenant association \n", 
" removes a qos to tenant association \n", 
" updates a qos to tenant association \n", 
" lists all the creds for a tenant \n", 
" lists the creds for given a cred_id and tenant_id \n", 
" lists the creds for given a cred_name and tenant_id \n", 
" adds a qos to tenant association \n ", 
" removes a credential from a  tenant \n", 
" updates a credential for a tenant \n", 
" establish database connection and load models \n", 
" prepopulates the vlan_bindings table \n ", 
" gets all the vlanids \n ", 
" checks if a vlanid is in use \n ", 
" sets the vlanid state to be unused \n ", 
" deletes a vlanid entry from db \n ", 
" reserves the first unused vlanid \n ", 
" gets all the vlanids used \n ", 
" lists all the vlan to network associations \n ", 
" lists the vlan given a network_id \n ", 
" adds a vlan to network association \n ", 
" removes a vlan to network association \n ", 
" updates a vlan to network association \n ", 
" lists all the qos to tenant associations \n ", 
" lists the qos given a tenant_id and qos_id \n ", 
" adds a qos to tenant association \n  ", 
" removes a qos to tenant association \n ", 
" updates a qos to tenant association \n ", 
" lists all the creds for a tenant \n ", 
" lists the creds for given a cred_id and tenant_id \n ", 
" lists the creds for given a cred_name and tenant_id \n ", 
" adds a qos to tenant association \n   ", 
" removes a credential from a  tenant \n ", 
" updates a credential for a tenant \n ", 
" establish the database  create an engine if needed  and ", 
" helper method to grab session \n", 
" register models and create properties \n", 
" unregister models  useful clearing out data before testing \n", 
" get view builder \n", 
" get view builder \n ", 
" an unknown host callback  ", 
" create a brocade specific network port profiles  \n", 
" delete a brocade specific network port profiles  \n", 
" get brocade specific network  with vlan extension  \n", 
" get all brocade specific networks  \n", 
" create a brocade specific port  has policy like vlan  \n", 
" get a brocade specific port  \n", 
" get a brocade specific port  \n ", 
" delete brocade specific port  \n", 
" get port from the tap device  \n", 
" update port attributes  \n", 
" convert a logical configuration to the haproxy version \n", 
" return the first active health option \n", 
" expand the expected code string in set of codes  ", 
" construct the security group id used as chain identifier in midonet  \n", 
" get inbound and outbound chain names  \n", 
" parse the supplied plugin configuration  ", 
" retrieve configuration groups not listed above  \n", 
" retrieve configuration groups for nvp clusters  \n", 
" return major minor version   \n", 
" issue a request to a specified cluster if specified via kwargs ", 
" issue a request to all clusters \n", 
" return  url  cluster_id  of port or  none  none  if port does not exist  \n", 
" create a nvp layer 2 network gateway service  ", 
" create a nvp logical router on the specified cluster  ", 
" append the quantum network uuids we can find in the given cluster to ", 
" return  url  cluster_id  of port or raises resourcenotfound \n", 
" return the nvp uuid of the logical port with tag q_port_id ", 
" creates a logical port on the assigned logical switch \n", 
" creates a logical port on the assigned logical router \n", 
" updates a logical port on the assigned logical router \n", 
" creates a logical port on the assigned logical router \n ", 
" retrieves the external gateway port for a nvp logical router \n", 
" attach a router port to the given attachment  ", 
" retrieve the operational status of the port \n", 
" plug a layer 2 gateway attachment object in a logical port \n", 
" plug a vif attachment object in a logical port \n", 
" consistent formatting for exceptions  ", 
" convenience function wraps do_single_request  ", 
" convenience function creates and dumps dictionary to string  ", 
" convenience function to add tenant_id tag to taglist  ", 
" make sure that we can issue a request to each of the cluster nodes \n", 
" validate the list of service definitions  \n", 
" returns the actual ip of the local machine    ", 
" get port from database \n ", 
" synchronize network_states table with current configured vlan ranges  \n", 
" get state of specified network \n", 
" get port from database \n  ", 
" set the port status \n", 
" make sure the resource type fit the resource_type column  \n", 
" parse service definition opts and returns result \n", 
" returns a query with sorting   pagination criteria added    ", 
" run migrations in   offline   mode  ", 
" run migrations in   online   mode  ", 
" a no op migration for marking the grizzly release  \n", 
" a no op migration for marking the grizzly release  \n ", 
" establish the database  create an engine if needed  and  ", 
" helper method to grab session \n ", 
" register models and create properties \n ", 
" unregister models  useful clearing out data before testing \n ", 
" ensure other greenthreads get a chance to execute by forcing a context ", 
" create a paste pipeline based on the   auth_strategy   config option  \n", 
" verify the service type id exists \n", 
" validate the list of service definitions  \n ", 
" ofc id converter \n", 
" listen to notification info messages and pickle them to output  \n", 
" listen to notification info messages and print them  \n", 
" read messages from the input and send them to the amqp queue  \n", 
" return a list of meters  ", 
" return a list of meters by resource  ", 
" return a list of meters by user  ", 
" return a list of meters by project  ", 
" return a list of meters by source  ", 
" return a list of resource identifiers  \n", 
" return a list of resources owned by the project  ", 
" return a list of all known resources  ", 
" return a source details  ", 
" return a list of resources for which a source is reporting ", 
" return a list of resources owned by the user  ", 
" return a list of user names  \n", 
" return a list of all known user names  \n", 
" return a list of the users for which the source is reporting ", 
" return a list of project names  \n", 
" return a list of all known project names  \n", 
" return a list project names for which the source is reporting ", 
" return a list of raw samples  ", 
" return a list of raw samples for the project  ", 
" return a list of raw samples for the resource  ", 
" return a list of raw samples for the source  ", 
" return a list of raw samples for the user  ", 
" return the earliest timestamp  last timestamp  ", 
" return the max volume for a meter  ", 
" return the sum of samples for a meter  ", 
" return the max volume for a meter   ", 
" return the total volume for a meter  ", 
" check the query to see if  ", 
" return any optional timestamp information in the request  ", 
" return flattened resource metadata without nested structures ", 
" register keystoneclient middleware options \n", 
" install acl check on application  \n", 
" return the tenant the request should be limited to  \n", 
" helper method to shell out and execute a command through subprocess with  ", 
" a wrapper around execute   to more easily handle warnings and errors    ", 
" returns validation of a value as a uuid     ", 
" check if opt is in group  \n", 
" set up a reasonably sensible default for pybasedir  my_ip and host  \n ", 
" save current exception  run some code and then re raise     ", 
" install a _   function using the given translation domain  ", 
" assemble and return a lazy gettext function for a given domain  ", 
" find an arg of type requestcontext and return it     ", 
" setup logging  \n   ", 
" returns lazy logger  ", 
" convert a complex object into primitives        ", 
" interpret a string as a host port pair     ", 
" parse a single base check rule into an appropriate check object  \n  ", 
" translates the old list of lists syntax into a tree of check objects  ", 
" tokenizer for the policy language    ", 
" decorator for reduction methods  ", 
" parses policy to the tree  ", 
" parses a policy rule into a tree of check objects  \n  ", 
" register a function or check class as a policy check    ", 
" callback function to be passed to greenthread link   when we spawn    ", 
" synchronization decorator     ", 
" partial object generator for the synchronization decorator  ", 
" set defaults for configuration variables  \n", 
" return a sqlalchemy session  \n  ", 
" raise exception if two entries are duplicated  ", 
" raise exception on deadlock condition  ", 
" return a sqlalchemy engine  \n  ", 
" switch sqlite connections to non synchronous mode  \n", 
" add regexp function to sqlite connections  \n", 
" ensure other greenthreads get a chance to be executed  ", 
" ensures that mysql connections checked out of the pool are alive  ", 
" return true if error in connecting to db  \n  ", 
" return a new sqlalchemy engine  \n", 
" return a sqlalchemy sessionmaker using the given engine  \n  ", 
" adds current stack trace as a comment in queries  ", 
" make sure slave handle and normal handle have the same driver  \n", 
" returns a query with sorting   pagination criteria added     ", 
" instantiates and returns drivers based on the flag values  \n", 
" add a notification driver at runtime  \n   ", 
" remove a notification driver at runtime  \n", 
" passes notification to multiple notifiers in a list  \n", 
" used by unit tests to reset the drivers  \n   ", 
" deprecated in grizzly  please use rpc_notifier instead  \n   ", 
" sends a notification via rpc  \n", 
" notifies the recipient of the desired event given the model  \n", 
" test notifier  stores notifications in memory for unittests  \n   ", 
" notifies the recipient of the desired event given the model     ", 
" decorator for notify which is used from utils monkey_patch      ", 
" sends a notification using the specified driver    ", 
" instantiate  cache  and return drivers based on the conf  \n   ", 
" add a notification driver at runtime  \n    ", 
" used by unit tests to reset the drivers  \n    ", 
" sends a notification via rpc  \n ", 
" construct the arguments for declaring a queue     ", 
" create a connection  \n", 
" make a call that returns multiple times  \n            ", 
" sends a message on a topic and wait for a response  \n            ", 
" sends a message on a topic without waiting for a response  \n         ", 
" sends a message on a fanout exchange without waiting for a response  \n         ", 
" sends a message on a topic to a specific server  \n         ", 
" sends a message on a fanout exchange to a specific server  \n         ", 
" sends a notification event on a topic  \n         ", 
" create a connection  \n ", 
" make sure a message intended for rpc can be serialized  \n   ", 
" make a call that returns multiple times  \n             ", 
" sends a message on a topic and wait for a response  \n             ", 
" cast to all consumers of a topic  \n", 
" create a connection  \n  ", 
" make a call that returns multiple times  \n              ", 
" sends a message on a topic and wait for a response  \n              ", 
" sends a message on a topic without waiting for a response  \n          ", 
" sends a message on a fanout exchange without waiting for a response  \n          ", 
" sends a message on a topic to a specific server  \n          ", 
" sends a message on a fanout exchange to a specific server  \n          ", 
" sends a notification event on a topic  \n          ", 
" sends a reply or an error on the channel signified by msg_id     ", 
" unpack context from msg  \n   ", 
" pack context into msg     ", 
" add unique_id for checking duplicate messages  \n   ", 
" create a connection  \n   ", 
" make a call that returns multiple times  \n               ", 
" sends a message on a topic and wait for a response  \n               ", 
" sends a message on a topic without waiting for a response  \n           ", 
" sends a message on a fanout exchange without waiting for a response  \n           ", 
" sends a message on a topic to a specific server  \n           ", 
" sends a message on a fanout exchange to a specific server  \n           ", 
" sends a notification event on a topic  \n           ", 
" create a connection to the message bus used for rpc     ", 
" invoke a remote method that returns something     ", 
" invoke a remote method that does not return anything        ", 
" broadcast a remote method invocation with no return     ", 
" invoke a remote method and get back an iterator     ", 
" send notification event        ", 
" clean up resoruces in use by implementation     ", 
" invoke a remote method that does not return anything         ", 
" broadcast to a remote method invocation with no return     ", 
" get a queue name for a given topic   host     ", 
" delay import of rpc_backend until configuration is loaded  \n   ", 
" sanitizes the msg_data field before logging  \n   ", 
" prepares exception data to be sent over rpc     ", 
" decorator for manager methods that raise expected exceptions     ", 
" determine whether versions are compatible     ", 
" serialization wrapper    ", 
" deserialization wrapper  \n", 
" unflattens the rpc envelope     ", 
" wraps the sending of messages     ", 
" multiple calls  \n   ", 
" send a message  expect a response  \n   ", 
" send a message expecting no reply  \n   ", 
" send a message to all listening and expect no reply  \n   ", 
" send notification event         ", 
" clean up resources in use by implementation  \n   ", 
" create a directory  and any ancestor directories required       ", 
" read from a file if it has been modified        ", 
" delete a file  but ignore file not found error  ", 
" protect code that wants to operate on path atomically    ", 
" open file   ", 
" returns a class from a string including module and class  \n   ", 
" import a class and return an instance of it  \n    ", 
" tries to import object from default namespace  ", 
" import a module  \n    ", 
" try to import a module and if it fails return default  \n   ", 
" stringify time in iso 8601 format  \n", 
" parse time from iso 8601 format  \n", 
" returns formatted utcnow  \n      ", 
" turn a formatted time back into a datetime  \n      ", 
" normalize time in arbitrary timezone to utc naive object  \n", 
" return true if before is older than seconds  \n      ", 
" return true if after is newer than seconds  \n      ", 
" timestamp version of our utcnow function  \n      ", 
" overridable version of utils utcnow  \n      ", 
" returns a iso8601 formated date from timestamp  \n", 
" overrides utils utcnow  ", 
" advance overridden time using a datetime timedelta  \n      ", 
" advance overridden time by seconds  \n      ", 
" remove the overridden time  \n      ", 
" make an rpc safe datetime with microseconds        ", 
" unmarshall a datetime dict  \n      ", 
" return the difference between two timing objects  ", 
" determines if time is going to happen in the next window seconds        ", 
" sends a notification as a meter using ceilometer pipelines  \n", 
" setup pipeline manager according to yaml config file  \n", 
" generator that produces sequence of keypairs for nested dictionaries  \n", 
" datetime to decimal  ", 
" return a datetime from decimal unixtime format  \n", 
" return a naive utc datetime object  \n", 
" return a metadata dictionary for the instance  \n", 
" set the callable used to gather stats for the instance  ", 
" shortcut to get instance name  \n", 
" get the path for the migrate repository  \n   ", 
" reverse timestamp so that newer timestamps are represented by smaller ", 
" return a filter query string based on the selected parameters  ", 
" return a query dictionary based on the settings in the filter  ", 
" if it  s meter filter without start and end  ", 
" deserialise dict stored as hbase column family \n", 
" return a query dictionary based on the settings in the filter   ", 
" register any options for the storage system  \n", 
" load the configured engine and return an instance  \n", 
" return an open connection to the database  \n", 
" split a time from start to end in periods of a number of seconds  this ", 
" given two possible datetimes  create the query ", 
" return a query dictionary based on the settings in the filter    ", 
" raises skiptest if the connection is using mim  \n", 
" register the options for publishing metering messages  \n", 
" return the signature for a message dictionary  \n", 
" check the signature in the message against the value computed ", 
" make a metering message ready to be published or stored  ", 
" get publisher driver and load it  ", 
" returns a new client glance client object based on common kwargs  ", 
" create a fully qualified xattr key by including the intended namespace  ", 
" return the value for a particular xattr ", 
" set the value of a specified xattr  ", 
" increment the value of an xattr  assuming it is an integer   ", 
" image members resource factory method \n", 
" create a shallow copy of image meta with   location   removed ", 
" images resource factory method \n", 
" find the schema properties files and load them into a dict  \n", 
" images resource factory method \n ", 
" image members resource factory method \n ", 
" image data resource factory method \n", 
" images resource factory method \n  ", 
" cached images resource factory method \n", 
" send an image send message to the notifier  \n", 
" return true if the image is mutable in this context  \n", 
" return true if the image is mutable in this context  \n ", 
" returns validation of a value as a uuid      ", 
" setup logging  \n    ", 
" convert a complex object into primitives         ", 
" takes in a string and an email alias mapping and replaces all       ", 
" write a changelog based on the git changelog  \n      ", 
" create authors file using git commits  \n      ", 
" return dict of commands to run from setup py  \n      ", 
" return the number of commits since the most recent tag        ", 
" return a version which is equal to the tag that  s on the current       ", 
" get the version from pkg info file if we can  \n      ", 
" get the version of the project  first  try getting it from pkg info  if       ", 
" set the rules in use for policy checks  \n  ", 
" clear the rules used for policy checks  \n  ", 
" checks authorization of a rule against the target and credentials    ", 
" parse a single base check rule into an appropriate check object  \n   ", 
" provided for backwards compatibility   translates the old   ", 
" tokenizer for the policy language     ", 
" decorator for reduction methods   arguments are a sequence of   ", 
" translates a policy written in the policy language into a tree of   ", 
" parses a policy rule into a tree of check objects  \n   ", 
" register a function or check class as a policy check     ", 
" deprecated in grizzly  please use rpc_notifier instead  \n    ", 
" sends a notification via rpc \n      ", 
" notifies the recipient of the desired event given the model \n   ", 
" test notifier  stores notifications in memory for unittests  \n    ", 
" notifies the recipient of the desired event given the model      ", 
" decorator for notify which is used from utils monkey_patch       ", 
" sends a notification using the specified driver     ", 
" instantiate  cache  and return drivers based on the conf  \n    ", 
" add a notification driver at runtime  \n     ", 
" used by unit tests to reset the drivers  \n     ", 
" sends a notification via rpc \n       ", 
" returns a class from a string including module and class \n    ", 
" import a class and return an instance of it  \n     ", 
" import a class and return an instance of it  first by trying     ", 
" import a module  \n     ", 
" try to import a module and if it fails return default  \n    ", 
" stringify time in iso 8601 format \n      ", 
" parse time from iso 8601 format \n      ", 
" returns formatted utcnow  \n       ", 
" turn a formatted time back into a datetime  \n       ", 
" normalize time in arbitrary timezone to utc naive object \n      ", 
" return true if before is older than seconds  \n       ", 
" return true if after is newer than seconds  \n       ", 
" timestamp version of our utcnow function  \n       ", 
" overridable version of utils utcnow  \n       ", 
" returns a iso8601 formated date from timestamp \n      ", 
" override utils utcnow to return a constant time or a list thereof        ", 
" advance overridden time using a datetime timedelta  \n       ", 
" advance overridden time by seconds  \n       ", 
" remove the overridden time  \n       ", 
" make an rpc safe datetime with microseconds         ", 
" unmarshall a datetime dict  \n       ", 
" compute the difference in seconds between two date  time  or       ", 
" determines if time is going to happen in the next window seconds         ", 
" wrap a function to re authenticate and retry  \n", 
" wrap the _do_request function to handle http redirects  \n", 
" return the host and port to bind to  \n", 
" bind socket to bind ip port in conf  ", 
" wrap a readable iterator with a reader yielding chunks of ", 
" return an iterator to a file like obj which yields fixed size chunks ", 
" return an iterator which schedules after each ", 
" wrap a file descriptor  s read with a partial function which schedules ", 
" returns a set of image metadata into a dict ", 
" adds additional headers representing glance features to be enabled  ", 
" processes http headers from a supplied response that ", 
" interpret a string as a boolean like value  \n", 
" decorator to enforce read only logic \n", 
" encrypts plaintext  resulting ciphertext will contain url safe characters ", 
" decrypts url safe base64 encoded ciphertext ", 
" select an endpoint from the service catalog ", 
" sets up the logging options for a log with supplied name \n", 
" retrieve the paste_deploy flavor config item  formatted appropriately ", 
" retrieve the deployment_config_file config item  formatted as an ", 
" builds and returns a wsgi app from a paste config file   ", 
" create a dict representation of a list of members which we can use ", 
" image members resource factory method  \n", 
" create a dict representation of an image which we can use to ", 
" images resource factory method  \n", 
" sets up a registry client for use in registry lookups \n", 
" creates database tables for all models with the given engine \n", 
" drops database tables for all models with the given engine \n", 
" import a migration file and return the module ", 
" no changes to the images table from 008    \n", 
" no changes to the image properties table from 008    \n", 
" no changes to the image members table from 008    \n", 
" returns the table object for the images table that corresponds to ", 
" no changes to the image properties table from 006    \n", 
" avoid possible integrity error by removing deleted rows ", 
" migrate location credentials for encrypted swift uri  s between the ", 
" fix the given uri  s embedded credentials by round tripping with ", 
" parse urls  this method fixes an issue where credentials specified ", 
" returns the table object for the images table that ", 
" no changes to the image properties table from 002    \n", 
" no changes to the image properties table from 002    \n ", 
" returns the table object for the image_properties table that ", 
" returns the table object for the images table that  ", 
" no changes to the image properties table from 008    \n ", 
" no changes to the images table from 007    \n", 
" no changes to the image properties table from 007    \n", 
" returns the table object for the images table that   ", 
" no changes to the image properties table from 002    \n  ", 
" returns the table object for the images table that    ", 
" no changes to the image properties table from 002    \n   ", 
" call the correct dialect specific upgrade  \n", 
" call the correct dialect specific downgrade  \n", 
" upgrade 011    012 with special sqlite compatible logic  \n", 
" downgrade 012    011 with special sqlite compatible logic  \n", 
" upgrade 011    012 with logic for non sqlite databases  \n", 
" downgrade 012    011 with logic for non sqlite databases  \n", 
" return a sqlalchemy table definition with associated metadata  \n", 
" retrieve and return foreign keys for members properties tables  \n", 
" transition from integer id to varchar 36  id  \n", 
" transition from varchar 36  id to integer id  \n", 
" migrate location credentials for swift uri  s between the quoted ", 
" fix the given uri  s embedded credentials by round tripping with  ", 
" parse urls  this method fixes an issue where credentials specified  ", 
" return the database  s current migration number ", 
" upgrade the database  s current migration level ", 
" downgrade the database  s current migration level ", 
" place a database under migration control \n", 
" place a database under migration control ", 
" place a database under migration control and perform an upgrade ", 
" get the path for the migrate repository  \n    ", 
" ensures that mysql connections checked out of the   ", 
" setup configuration for database \n", 
" establish the database  create an engine if needed  and   ", 
" helper method to grab session \n  ", 
" return a sqlalchemy engine  \n   ", 
" return a sqlalchemy sessionmaker  \n", 
" return true if error in connecting to db  \n   ", 
" retry db connection  copied from nova and modified  \n", 
" create an image from the values dictionary  \n", 
" set the given properties on an image and update it  ", 
" destroy the image or raise if it does not exist  \n", 
" get an image or raise if it does not exist  \n", 
" return true if the image is mutable in this context  \n  ", 
" return true if the image can be shared to others in this context  \n", 
" return true if the image is visible in this context  \n", 
" returns a query with sorting   pagination criteria added      ", 
" get all images that match zero or more filters  ", 
" removed protected attributes from values dictionary using the models ", 
" validates the incoming data and raises a invalid exception ", 
" used internally by image_create and image_update ", 
" create or update a set of image_properties for a given image ", 
" create an imageproperty object \n", 
" used internally by image_property_create and image_property_update \n", 
" used internally by image_property_create and image_property_update \n ", 
" create an imagemember object \n", 
" format a member ref for consumption outside of this module \n", 
" update an imagemember object \n", 
" apply supplied dictionary of values to a member object  \n", 
" delete an imagemember object \n", 
" fetch an imagemember entity by id \n", 
" find all members that meet the given criteria ", 
" calculates whether to include deleted objects based on context  ", 
" create an image tag  \n", 
" delete an image tag  \n", 
" get a list of tags for a specific image  \n", 
" return true if the image is mutable in this context  \n   ", 
" return true if the image can be shared to others in this context  \n ", 
" return true if the image is visible in this context  \n ", 
" migrate the database to  version  or the most recent version  \n  ", 
" display the current database version  \n  ", 
" adds any configuration options that the db layer might have  ", 
" return an iterator for a file like object  ", 
" get a bucket from an s3 connection ", 
" creates a missing bucket in s3 if the ", 
" get a key from a bucket ", 
" given a uri  return a location object that has had an appropriate ", 
" given a mapping of   scheme   to store_name  adds the mapping to the ", 
" registers all store modules and all schemes ", 
" given a scheme  return the appropriate store object ", 
" given a uri  return the store object that would handle ", 
" yields chunks of data from backend specified by uri \n", 
" retrieves image size from backend specified by uri \n", 
" removes chunks of data from backend specified by uri \n", 
" given a location  assumed to be a url   attempt to determine ", 
" given a uri  delete an image from the store  \n", 
" given a uri  schedule the deletion of an image  \n", 
" given a glance domain image object  return a dictionary of relevant ", 
" mocks calls to 127 0 0 1 on 9191 and 9292 for testing so ", 
" mocks calls to 127 0 0 1 on 9191 for testing so ", 
" note jkoelker  the build servers sometimes take longer than 15 seconds to ", 
" decorator that skips a test if test case is disabled  \n", 
" executes a command in a subprocess  returns a tuple ", 
" searches the path for a given cmdname   returns an absolute ", 
" returns an unused port on localhost  \n", 
" returns true if the we can write a file to the supplied ", 
" stubs out the httplib httprequest getresponse to return ", 
" stubs an image update on the registry  ", 
" helper method that returns a s3 store uri given ", 
" try to get a connection with a very specific set of values  if we get ", 
" returns an sqlalchemy table dynamically from db  ", 
" given an http response code  create a properly formatted xml error response ", 
" attempts to construct an s3 acl based on what is found in the swift headers \n", 
" canonicalize a request to a token that can be signed  \n", 
" takes an s3 style acl and returns a list of header value pairs that ", 
" validates the name of the bucket against s3 criteria  ", 
" standard filter factory to use the middleware with paste deploy \n", 
" runs a command in an out of process shell  returning the  ", 
" make sure virtualenv is in the path  \n", 
" creates the virtual environment and installs pip only into the  ", 
" split a path into components in a platform neutral way  \n", 
" quick utility to make comparing template output easier  \n", 
" reversible named view to direct a user to the appropriate homepage  \n", 
" secret key generator   ", 
" multiprocess safe secret key file generator   ", 
" the main horizon context processor  required for horizon to function  ", 
" attempts to add a message to the request using the   messages   app  \n", 
" adds a message with the   debug   level  \n", 
" adds a message with the   info   level  \n", 
" adds a message with the   success   level  \n", 
" adds a message with the   warning   level  \n", 
" adds a message with the   error   level  \n", 
" sets the currently active dashboard and or panel on the request  \n", 
" performs user authentication check  ", 
" enforces permission based access controls  ", 
" checks an exception for given keywords and raises a new   actionerror   ", 
" centralized error handling for horizon  ", 
" checks if the given user meets the permissions requirements for ", 
" generates top level dashboard navigation entries  \n", 
" generates sub navigation entries for the current dashboard  \n", 
" renders a progress bar based on parameters passed to the tag  the first ", 
" replaces         and         with         and          ", 
" create a vip for a specified pool  ", 
" create a pool for specified protocol ", 
" create a health monitor and associate with pool ", 
" create a load balance member ", 
" get the list of available instance sizes  flavors   \n", 
" get flavor extra specs  \n", 
" unset the flavor extra spec keys  \n", 
" set the flavor extra spec keys  \n", 
" gets console output of an instance  \n", 
" gets security groups of an instance  \n", 
" to see all volumes in the cloud as an admin you can pass in a special ", 
" returns an image object populated with metadata for image ", 
" convert an ip version number to a human friendly string \n", 
" return a network list available for the tenant  ", 
" create a subnet on a specified network  ", 
" create a subnet on a specified network   ", 
" create a port on a specified network  ", 
" returns a client connected to the keystone backend  ", 
" creates a scoped token using the tenant id and unscoped token  retrieves ", 
" returns a global list of available roles  \n", 
" adds a role for a user on a tenant  \n", 
" removes a given single role for a user from a tenant  \n", 
" removes all roles from a user on a tenant  removing them from it  \n", 
" gets the default role object from keystone and saves it as a global ", 
" splits a listing of objects into their appropriate wrapper classes  \n", 
" takes in a string and an email alias mapping and replaces all        ", 
" write a changelog based on the git changelog  \n       ", 
" create authors file using git commits  \n       ", 
" return dict of commands to run from setup py  \n       ", 
" return the number of commits since the most recent tag         ", 
" return a version which is equal to the tag that  s on the current        ", 
" get the version from pkg info file if we can  \n       ", 
" get the version of the project  first  try getting it from pkg info  if        ", 
" check if a value is valid as uuid or an integer  ", 
" context processor necessary for openstack dashboard functionality  ", 
" check for   todo       ", 
" check for   except      ", 
" check for   assertraises exception     ", 
" check for import format   ", 
" check for import module only   ", 
" check for imports in alphabetical order   ", 
" check for docstring not start with space   ", 
" check one line docstring end   ", 
" check multi line docstring end   ", 
" generator that checks token stream for localization errors   ", 
" check localization in line   ", 
" record the current file being tested  \n ", 
" monkey patch in cinder guidelines  ", 
" set up a reasonably sensible default for pybasedir  my_ip and host  \n  ", 
" maps keys for snapshots details view  \n", 
" maps keys for snapshots summary view  \n", 
" maps keys for attachment details view  \n ", 
" maps keys for attachment summary view  \n ", 
" maps keys for volumes details view  \n", 
" maps keys for volumes summary view  \n", 
" remove search options that are not valid for non admin api context  \n ", 
" attaches serializers to a method    ", 
" attaches deserializers to a method    ", 
" attaches response code to a method    ", 
" determine action to invoke  \n    ", 
" determine action to invoke  \n     ", 
" mark a function as an action    ", 
" indicate a function extends an operation    ", 
" maps keys for snapshots details view  \n ", 
" maps keys for snapshots summary view  \n ", 
" remove search options that are not valid for non admin api context  \n  ", 
" returns a summary list of hosts  \n  ", 
" makes sure that the host exists  \n  ", 
" a paste pipeline replica that keys off of auth_strategy  \n  ", 
" get items in obj  \n  ", 
" create a template element as a child of another    ", 
" attach an atom  links  element to the parent  \n  ", 
" utility for simple xml templates that traditionally used   ", 
" registers all standard api extensions  \n  ", 
" return marker  limit tuple from request     ", 
" extract integer limit from request or fail \n  ", 
" extract marker id from request or fail \n  ", 
" return a slice of items according to requested offset and limit    ", 
" return a slice of items according to the requested marker and limit  \n  ", 
" removes the first api version from the href    ", 
" unquotes a header value    ", 
" parse lists as described by rfc 2068 section 2    ", 
" parse a   content type   like header into a tuple with the content   ", 
" returns validation of a value as a uuid       ", 
" save current exception  run some code and then re raise      ", 
" find an arg of type requestcontext and return it      ", 
" setup logging  \n     ", 
" returns a filter object of class class_name \n   ", 
" load filters from a list of directories \n   ", 
" checks user command and arguments through command filters and    ", 
" convert a complex object into primitives          ", 
" takes in a string and an email alias mapping and replaces all         ", 
" write a changelog based on the git changelog  \n        ", 
" create authors file using git commits  \n        ", 
" return dict of commands to run from setup py  \n        ", 
" return the number of commits since the most recent tag          ", 
" return a version which is equal to the tag that  s on the current         ", 
" get the version from pkg info file if we can  \n        ", 
" get the version of the project  first  try getting it from pkg info  if         ", 
" interpret a string as a host port pair      ", 
" set the brain used by enforce      ", 
" clear the brain used by enforce    \n  ", 
" enforces authorization of some rules against credentials    ", 
" register a function as a policy check    ", 
" recursively checks credentials based on the brains rules  \n  ", 
" check that there is a matching role in the cred dict  \n  ", 
" check http  rules by calling to a remote server    ", 
" check an individual match    ", 
" interpret a string as a boolean and return either 1 or 0      ", 
" interpret a string as a boolean      ", 
" decodes incoming str using  incoming  if they  re     ", 
" encodes incoming str unicode using  encoding   if     ", 
" synchronization decorator      ", 
" deprecated in grizzly  please use rpc_notifier instead  \n     ", 
" sends a notification via rpc \n        ", 
" notifies the recipient of the desired event given the model \n    ", 
" test notifier  stores notifications in memory for unittests  \n     ", 
" notifies the recipient of the desired event given the model       ", 
" decorator for notify which is used from utils monkey_patch        ", 
" sends a notification using the specified driver      ", 
" instantiate  cache  and return drivers based on the conf  \n     ", 
" add a notification driver at runtime  \n      ", 
" used by unit tests to reset the drivers  \n      ", 
" sends a notification via rpc \n         ", 
" construct the arguments for declaring a queue      ", 
" create a connection \n            ", 
" make a call that returns multiple times  \n                ", 
" sends a message on a topic and wait for a response  \n                ", 
" sends a message on a topic without waiting for a response  \n            ", 
" sends a message on a fanout exchange without waiting for a response  \n            ", 
" sends a message on a topic to a specific server  \n            ", 
" sends a message on a fanout exchange to a specific server  \n            ", 
" sends a notification event on a topic  \n            ", 
" create a connection \n             ", 
" make sure a message intended for rpc can be serialized  \n    ", 
" make a call that returns multiple times  \n                 ", 
" sends a message on a topic and wait for a response  \n                 ", 
" cast to all consumers of a topic \n   ", 
" create a connection \n              ", 
" make a call that returns multiple times  \n                  ", 
" sends a message on a topic and wait for a response  \n                  ", 
" sends a message on a topic without waiting for a response  \n             ", 
" sends a message on a fanout exchange without waiting for a response  \n             ", 
" sends a message on a topic to a specific server  \n             ", 
" sends a message on a fanout exchange to a specific server  \n             ", 
" sends a notification event on a topic  \n             ", 
" sends a reply or an error on the channel signified by msg_id      ", 
" unpack context from msg  \n    ", 
" pack context into msg      ", 
" add unique_id for checking duplicate messages  \n    ", 
" create a connection \n               ", 
" make a call that returns multiple times  \n                   ", 
" sends a message on a topic and wait for a response  \n                   ", 
" sends a message on a topic without waiting for a response  \n              ", 
" sends a message on a fanout exchange without waiting for a response  \n              ", 
" sends a message on a topic to a specific server  \n              ", 
" sends a message on a fanout exchange to a specific server  \n              ", 
" sends a notification event on a topic  \n              ", 
" create a connection to the message bus used for rpc      ", 
" invoke a remote method that returns something      ", 
" invoke a remote method that does not return anything          ", 
" broadcast a remote method invocation with no return      ", 
" invoke a remote method and get back an iterator      ", 
" send notification event          ", 
" clean up resoruces in use by implementation      ", 
" invoke a remote method that does not return anything           ", 
" broadcast to a remote method invocation with no return      ", 
" get a queue name for a given topic   host      ", 
" delay import of rpc_backend until configuration is loaded  \n    ", 
" sanitizes the msg_data field before logging  \n    ", 
" prepares exception data to be sent over rpc      ", 
" decorator for manager methods that raise expected exceptions      ", 
" determine whether versions are compatible      ", 
" serialization wrapper     ", 
" deserialization wrapper \n   ", 
" unflattens the rpc envelope      ", 
" wraps the sending of messages      ", 
" multiple calls  \n    ", 
" send a message  expect a response  \n    ", 
" send a message expecting no reply  \n    ", 
" send a message to all listening and expect no reply  \n    ", 
" send notification event           ", 
" clean up resources in use by implementation  \n    ", 
" create a directory  and any ancestor directories required        ", 
" returns a class from a string including module and class \n     ", 
" import a class and return an instance of it  \n      ", 
" import a class and return an instance of it  first by trying      ", 
" import a module  \n      ", 
" try to import a module and if it fails return default  \n     ", 
" stringify time in iso 8601 format \n       ", 
" parse time from iso 8601 format \n       ", 
" returns formatted utcnow  \n        ", 
" turn a formatted time back into a datetime  \n        ", 
" normalize time in arbitrary timezone to utc naive object \n       ", 
" return true if before is older than seconds  \n        ", 
" return true if after is newer than seconds  \n        ", 
" timestamp version of our utcnow function  \n        ", 
" overridable version of utils utcnow  \n        ", 
" returns a iso8601 formated date from timestamp \n       ", 
" override utils utcnow to return a constant time or a list thereof         ", 
" advance overridden time using a datetime timedelta  \n        ", 
" advance overridden time by seconds  \n        ", 
" remove the overridden time  \n        ", 
" make an rpc safe datetime with microseconds          ", 
" unmarshall a datetime dict  \n        ", 
" compute the difference in seconds between two date  time  or        ", 
" determines if time is going to happen in the next window seconds          ", 
" return a object containing the parsed output from qemu img info  \n", 
" convert image to other format \n", 
" parse an image href into composite parts  ", 
" instantiate a new glanceclient client object \n", 
" shuffle a list of flags glance_api_servers and return an iterator ", 
" returns image with timestamp fields converted to datetime objects  \n", 
" transform the exception for the image but keep its traceback intact  \n", 
" transform the exception but keep its traceback intact  \n", 
" create an image_service and parse the id from the given image_href  ", 
" find a configuration file using the given hint    ", 
" helper method to execute command with optional retry    ", 
" a wrapper around execute   to more easily handle warnings and errors     ", 
" this method gives you the most recently  completed  audit period    ", 
" generate a random password from the supplied symbol groups    ", 
" parse an xml string using minidom safely  \n  ", 
" escapes a string so it is valid within xml or xhtml  \n  ", 
" try to turn a string into utf 8 if possible    ", 
" delete a file  but ignore file not found error \n  ", 
" returns a list of items matching the specified path    ", 
" recursively flatten a nested dictionary  \n  ", 
" return two dicts  one with  keys  the other with everything else  \n  ", 
" return a dict in which the dictionaries keys are mapped to new keys  \n  ", 
" return a dict that only contains a subset of keys  \n  ", 
" checks that obj is of type cls  and lets pylint infer types  \n  ", 
" convert a string representation of a bool into a bool value \n  ", 
" check if the provided string is a valid bool string or not  \n  ", 
" valid the address strictly as per format xxx xxx xxx xxx    ", 
" if the flags monkey_patch set as true    ", 
" convert a value or list into a list of dicts \n  ", 
" decorator that logs how long a particular function took to execute \n  ", 
" generate the url to glance  \n  ", 
" catches exception  write message to the log  re raise    ", 
" protect code that wants to operate on path atomically     ", 
" return a path to a particular device    ", 
" local total_seconds implementation for compatibility with python 2 6 \n  ", 
" return a hostname which conforms to rfc 952 and rfc 1123 specs  \n  ", 
" read from a file if it has been modified         ", 
" open file    ", 
" generate a hash for the contents of a file  \n  ", 
" temporarily set the attr on a particular object to a given value then   ", 
" check whether a service is up based on last heartbeat  \n  ", 
" generate an ethernet mac address  \n  ", 
" secure helper to read file as root  \n  ", 
" temporarily chown a path    ", 
" constant time string comparison      ", 
" walk class hierarchy  yielding most derived classes first \n  ", 
" create a directory  and any ancestor directories required         ", 
" try to turn a string into a number of bytes  looks at the last   ", 
" verifies that the action is valid on the target in this context       ", 
" whether or not roles contains   admin   role according to policy setting  \n  ", 
" decorator to indicate that a method is a periodic task       ", 
" returns a query with sorting   pagination criteria added       ", 
" returns the actual ip of the local machine     ", 
" register models and create metadata    ", 
" add source volume id column to volumes  \n", 
" remove source volume id column to volumes  \n", 
" convert volume_type_id to uuid  \n", 
" convert volume_type from uuid back to int  \n", 
" return a sqlalchemy session  \n   ", 
" switch sqlite connections to non synchronous mode \n  ", 
" ensures that mysql connections checked out of the    ", 
" return true if error in connecting to db  \n    ", 
" return a sqlalchemy engine  \n    ", 
" return a sqlalchemy sessionmaker using the given engine  \n   ", 
" get the path for the migrate repository  \n     ", 
" indicates if the request context is an administrator  \n  ", 
" indicates if the request context is a normal user  \n  ", 
" ensures a request has permission to access the given project  \n  ", 
" ensures a request has permission to access the given user  \n  ", 
" ensures a request has permission to access the given quota class  \n  ", 
" decorator to require admin request context    ", 
" decorator to require  any  user or admin context    ", 
" decorator to require the specified volume to exist  ", 
" decorator to require the specified snapshot to exist  ", 
" query helper that accounts for context  s  read_deleted  field    ", 
" applies exact match filtering to a query    ", 
" takes an instance  volume  or instance type query returned ", 
" return the relevant reservations  \n", 
" create a new instance type  in order to pass in extra specs  ", 
" returns a dict describing all volume_types with name as key  \n", 
" returns a dict describing specific volume_type \n", 
" returns a dict describing specific volume_type \n ", 
" return volumes that were active during window  \n", 
" return the glance metadata for the specified volume  \n", 
" return the glance metadata for the specified snapshot  \n", 
" update the glance metadata for a volume by adding a new key value pair  ", 
" update the glance metadata for a snapshot by copying all of the key value ", 
" update the glance metadata for a volume by copying all of the key value ", 
" update the glance metadata from a volume  created from a snapshot  by ", 
" migrate the database to  version  or the most recent version  \n   ", 
" display the current database version  \n   ", 
" destroy the service or raise if it does not exist  \n  ", 
" get a service or raise if it does not exist  \n  ", 
" get a service by host it  s on and topic it listens to  \n  ", 
" get all services  \n  ", 
" get all services for a given topic  \n  ", 
" get all services for a given host  \n  ", 
" get all volume services sorted by volume count  ", 
" get the state of an service by node name and binary  \n  ", 
" create a service from the values dictionary  \n  ", 
" set the given properties on an service and update it    ", 
" update a migration instance  \n", 
" create a migration record  \n", 
" finds a migration by the id  \n", 
" finds a migration by the instance uuid its migrating  \n", 
" finds all unconfirmed migrations within the confirmation window  \n", 
" return count of export devices  \n", 
" create an iscsi_target from the values dictionary  ", 
" atomically allocate a free iscsi_target from the pool  \n", 
" ensure that a volume is set as attached  \n", 
" create a volume from the values dictionary  \n", 
" get  volume_count  gigabytes  for project  \n", 
" get  volume_count  gigabytes  for project  \n ", 
" destroy the volume or raise if it does not exist  \n", 
" ensure that a volume is set as detached  \n", 
" get a volume or raise if it does not exist  \n", 
" get all volumes  \n", 
" get all volumes belonging to a host  \n", 
" get all volumes belonging to a instance  \n", 
" get all volumes belonging to a project  \n", 
" get the target num  tid  allocated to the volume  \n", 
" set the given properties on an volume and update it  ", 
" create a snapshot from the values dictionary  \n", 
" destroy the snapshot or raise if it does not exist  \n", 
" get a snapshot or raise if it does not exist  \n", 
" get all snapshots  \n", 
" get all snapshots belonging to a project  \n", 
" get all snapshots for a volume  \n", 
" set the given properties on an snapshot and update it  ", 
" get count and gigabytes used for snapshots for specified project  \n", 
" get all metadata for a snapshot  \n", 
" delete the given metadata item  \n", 
" update metadata if it exists  otherwise create it  \n", 
" get all metadata for a volume  \n", 
" delete the given metadata item  \n ", 
" update metadata if it exists  otherwise create it  \n ", 
" create a new volume type  \n", 
" get all volume types  \n", 
" get volume type by id  \n", 
" get volume type by name  \n", 
" delete a volume type  \n", 
" get all the volumes inside the window  ", 
" get all extra specs for a volume type  \n", 
" delete the given extra specs item  \n", 
" create or update volume type extra specs  this adds or modifies the ", 
" update the glance metadata for the specified volume  \n", 
" return the glance metadata for a volume  \n", 
" return the glance metadata for the specified snapshot  \n ", 
" update the glance metadata for a snapshot by copying all of the key value  ", 
" update the glance metadata from a volume  created from a snapshot  by  ", 
" delete the glance metadata for a volume  \n", 
" delete the glance metadata for a snapshot  \n", 
" update the glance metadata for a volume by copying all of the key value  ", 
" create a new sm backend config entry  \n", 
" update a sm backend config entry  \n", 
" delete a sm backend config  \n", 
" get a specific sm backend config  \n", 
" get a specific sm backend config  \n ", 
" get all sm backend configs  \n", 
" create a new sm flavor entry  \n", 
" update a sm flavor entry  \n", 
" delete a sm flavor  \n", 
" get a specific sm flavor  \n", 
" get all sm flavors  \n", 
" create a new child zone entry  \n", 
" update a child zone entry  \n", 
" delete a child zone  \n", 
" get a specific child zone  \n", 
" get all child zones  \n", 
" create a quota for the given project and resource  \n", 
" retrieve a quota or raise if it does not exist  \n", 
" retrieve all quotas associated with a given project  \n", 
" update a quota or raise if it does not exist  \n", 
" destroy the quota or raise if it does not exist  \n", 
" create a quota class for the given name and resource  \n", 
" retrieve a quota class or raise if it does not exist  \n", 
" retrieve all quotas associated with a given quota class  \n", 
" update a quota class or raise if it does not exist  \n", 
" destroy the quota class or raise if it does not exist  \n", 
" destroy all quotas associated with a given quota class  \n", 
" create a quota usage for the given project and resource  \n", 
" retrieve a quota usage or raise if it does not exist  \n", 
" retrieve all usage associated with a given resource  \n", 
" create a reservation for the given project and resource  \n", 
" retrieve a reservation or raise if it does not exist  \n", 
" retrieve all reservations associated with a given project  \n", 
" destroy the reservation or raise if it does not exist  \n", 
" check quotas and create appropriate reservations  \n", 
" commit quota reservations  \n", 
" roll back quota reservations  \n", 
" destroy all quotas associated with a given project  \n", 
" roll back any expired reservations  \n", 
" get a backup or raise if it does not exist  \n", 
" get all backups  \n", 
" get all backups belonging to a host  \n", 
" create a backup from the values dictionary  \n", 
" get all backups belonging to a project  \n", 
" set the given properties on a backup and update it  ", 
" destroy the backup or raise if it does not exist  \n", 
" set the host and set the scheduled_at field of a volume  ", 
" decorator that skips a test if running in fake mode  \n", 
" monkeypatches httpconnection so that if you try to connect to host  you ", 
" monkeypatches httpconnection so that if you try to connect to host  you  ", 
" compare xml atom links  \n", 
" compare xml media types  \n", 
" compare parts of lxml etree objects to dicts  \n", 
" decorator for notify which is used from utils monkey_patch         ", 
" workaround for float string conversion issues in python 2 6  \n", 
" allows the client to configure replies to commands  \n", 
" a reply handler for commands that haven  t been added to the reply list  ", 
" this function stubs out execute  ", 
" set the stubs in mapping in the db api  \n", 
" stubs out the httplib httprequest getresponse to return  ", 
" creates a random alphanumeric string of specified length  \n", 
" creates a random numeric string of specified length  \n", 
" creates a random string with prefix  that is not in   items   list  \n", 
" try to get a connection with a very specific set of values  if we get  ", 
" returns an sqlalchemy table dynamically from db   ", 
" creates volume types  \n", 
" marks volume types as deleted  \n", 
" get all non deleted volume_types  ", 
" retrieves single volume type by id  \n", 
" retrieves single volume type by name  \n", 
" get the default volume type  \n", 
" generates   exists   notification for a volume for usage auditing ", 
" check policy corresponding to the wrapped methods prior to execution ", 
"  type aws_access_key_id  string ", 
" check if options exclude contains a pattern that matches filename  \n", 
" check all files in this directory and all subdirectories  \n", 
" check for   todo        ", 
" check for   except       ", 
" check for   assertraises exception      ", 
" check for imports  ", 
" check for imports in alphabetical order    ", 
" check for db calls from nova virt ", 
" return true if found docstring ", 
" check for docstring not start with space    ", 
" check one line docstring end    ", 
" check multi line docstring end    ", 
" check multi line docstring start with summary  ", 
" check that we only use newlines not carriage returns  ", 
" generator that checks token stream for localization errors    ", 
" check localization in line    ", 
" check localization in line     ", 
" check localization in line      ", 
" record the current file being tested  \n  ", 
" monkey patch in nova guidelines  ", 
" check git commit messages  ", 
" convert bytes to int  \n", 
" parse the machine_id to get mac  ip  netmask and gateway fields per nic  ", 
" get the list of windows network adapters  \n", 
" get the list of linux network adapters  \n", 
" get the adapter name based on the mac address  \n", 
" get windows network adapter name  \n", 
" get linux network adapter name  \n", 
" executes the command with the list of arguments specified  \n", 
" set ip address for the windows vm  \n", 
" set ipv4 network settings for rhel distros  \n", 
" set ipv4 network settings for ubuntu  \n", 
" set ip address for the linux vm  \n", 
" make a call to xapi  \n", 
" find and return a list of orphaned instances  \n", 
" delete orphaned instances  \n", 
" an   applicable   vm is one that is not a template and not the control ", 
" pretty print a xen object  ", 
" find vdis which are connected to vbds which are connected to vms  \n", 
" collects all vdis and adds system vdis to the connected set  \n", 
" walk vm    vbd    vdi change and accumulate connected vdis  \n", 
" list orphaned vdis  \n", 
" clean orphaned vdis  \n", 
" list orphaned instances  \n", 
" clean orphaned instances  \n", 
" main loop  \n", 
" set up a reasonably sensible default for pybasedir  my_ip and host  \n   ", 
" execute and return stdout  \n", 
" execute without returning stdout  \n", 
" validates that a string argument to a rpc method call is given  and ", 
" validates that a string argument to a rpc method call is a boolean ", 
" validates that a freeform string argument to a rpc method call is given  ", 
" if the given key is in args  return the corresponding value  otherwise ", 
" call vbd unplug on the given vbd  with a retry if we get ", 
" returns whether or not the given record exists  the record path ", 
" returns the value stored at the given path for the given dom_id  ", 
" writes to xenstore at the specified path  if there is information ", 
" returns all the stored data at or below the given path for the ", 
" just like it sounds  it removes the record for the specified ", 
" the xenstore ls command returns a listing that isn  t terribly ", 
" abstracts out the basics of issuing system commands  if the command ", 
" make a subprocess according to the given command line string \n", 
" ensure that the process returned a zero exit code indicating success \n", 
" the staging area is a place where we can temporarily store and ", 
" remove staging area directory ", 
" rename files to conform to new image format  if needed  ", 
" sanity check to ensure that only appropriate vhds are marked as hidden  ", 
" this check ensures that the timestamps listed in the vhd footer aren  t in ", 
" this check ensures that the parent pointers on the vhds are valid ", 
" this check ensures that the vhds in the staging area are sequenced ", 
" move vhds from staging area into the sr  ", 
" hard link vhds into staging area  \n", 
" create a tarball from a given path  ", 
" extract a tarball to a given path  ", 
" wrapper around xenapiplugin dispatch which handles pickle ", 
" attaches serializers to a method     ", 
" attaches deserializers to a method     ", 
" attaches response code to a method     ", 
" determine action to invoke  \n      ", 
" determine action to invoke  \n       ", 
" mark a function as an action     ", 
" indicate a function extends an operation     ", 
" get items in obj  \n   ", 
" create a template element as a child of another     ", 
" attach an atom  links  element to the parent  \n   ", 
" utility for simple xml templates that traditionally used    ", 
" parse an xml string using minidom safely  \n   ", 
" ensure errors are not passed along  \n", 
" registers all standard api extensions  \n   ", 
" given vm_state and task_state  return a status string  \n", 
" map the server status string to a vm state  \n", 
" return marker  limit tuple from request      ", 
" extract integer limit from request or fail  \n ", 
" extract marker id from request or fail  \n", 
" return a slice of items according to requested offset and limit     ", 
" get limited parameter from request  \n", 
" return a slice of items according to the requested marker and limit  \n   ", 
" return the id or uuid portion of a url  ", 
" removes the first api version from the href     ", 
" returns a prepared nw_info list for passing into the view builders ", 
" return a webob exc httpconflict instance containing a message ", 
" coerces a console instance into proper dictionary format  \n", 
" coerces a console instance into proper dictionary format with ", 
" remove search options that are not valid for non admin api context  \n   ", 
" unquoting function for receiving a domain name in a url  ", 
" maps keys for volumes details view  \n ", 
" maps keys for volumes summary view  \n ", 
" maps keys for attachment details view  \n  ", 
" maps keys for attachment summary view  \n  ", 
" maps keys for snapshots details view  \n  ", 
" maps keys for snapshots summary view  \n  ", 
" makes sure that the host exists  \n   ", 
" filters all model attributes except for keys ", 
" maps keys for interface attachment details view  \n", 
" maps keys for vif summary view  \n", 
" unquotes a header value     ", 
" parse lists as described by rfc 2068 section 2     ", 
" parse a   content type   like header into a tuple with the content    ", 
" helper to send an ec2_compatible error  \n", 
" converts to a three letter image type  ", 
" convert an internal  db  id to a glance id  \n", 
" convert a glance id to an internal  db  id  \n", 
" convert an ec2 id  i  base 16 number   to an instance id  int   \n", 
" returns image ec2_id using id and three letter type  \n", 
" return a dictionary of ip information for an instance  \n", 
" convert an instance id  int  to an ec2 id  i  base 16 number    \n", 
" get or create an ec2 instance id  i  base 16 number   from uuid  \n", 
"  convert an instance id to uuid  \n", 
" get or create an ec2 volume id  vol  base 16 number   from uuid  \n", 
" get or create an ec2 volume id  vol  base 16 number   from uuid  \n ", 
" get the corresponding uuid for the given ec2 id  \n", 
" checks the timestamp or expiry time included in an ec2 request ", 
" get the corresponding uuid for the given ec2 id  \n ", 
" return a non string from a string or unicode  if possible  ", 
" parse multi dot separated argument into dict  ", 
" map the vm state to the server status string  \n", 
" parse blockdevicemappingitemtype into flat hash ", 
" construct blockdevicemappingitemtype ", 
" format multiple blockdevicemappingitemtype  \n", 
" return a xs datetime parsable string from datatime  \n", 
" stores password as system_metadata items  ", 
" a paste pipeline replica that keys off of auth_strategy  \n   ", 
" true if val is matched by the path component grammar in rfc3986  \n", 
" check if the user_data is encoded properly  \n", 
" validate values of args against validators in validator  ", 
" helper method to shell out and execute a command through subprocess with   ", 
" returns validation of a value as a uuid        ", 
" save current exception  run some code and then re raise       ", 
" find an arg of type requestcontext and return it       ", 
" setup logging  \n      ", 
" returns a filter object of class class_name \n    ", 
" load filters from a list of directories \n    ", 
" checks user command and arguments through command filters and     ", 
" convert a complex object into primitives           ", 
" takes in a string and an email alias mapping and replaces all          ", 
" write a changelog based on the git changelog  \n         ", 
" create authors file using git commits  \n         ", 
" return dict of commands to run from setup py  \n         ", 
" return the number of commits since the most recent tag           ", 
" return a version which is equal to the tag that  s on the current          ", 
" get the version from pkg info file if we can  \n         ", 
" get the version of the project  first  try getting it from pkg info  if          ", 
" interpret a string as a host port pair       ", 
" set the rules in use for policy checks  \n   ", 
" clear the rules used for policy checks  \n   ", 
" checks authorization of a rule against the target and credentials     ", 
" parse a single base check rule into an appropriate check object  \n    ", 
" provided for backwards compatibility   translates the old    ", 
" tokenizer for the policy language      ", 
" decorator for reduction methods   arguments are a sequence of    ", 
" translates a policy written in the policy language into a tree of    ", 
" parses a policy rule into a tree of check objects  \n    ", 
" register a function or check class as a policy check      ", 
" check that the supplied args are sufficient for calling a function  ", 
" synchronization decorator       ", 
" set defaults for configuration variables  \n ", 
" return a sqlalchemy session  \n    ", 
" in this function will be raised dbduplicateentry exception if integrity ", 
" raise dbdeadlock exception if operationalerror contains a deadlock ", 
" return a sqlalchemy engine  \n     ", 
" switch sqlite connections to non synchronous mode  \n ", 
" add regexp function to sqlite connections  \n ", 
" ensure other greenthreads get a chance to execute by forcing a context  ", 
" ensures that mysql connections checked out of the     ", 
" return true if error in connecting to db  \n     ", 
" return a new sqlalchemy engine  \n ", 
" return a sqlalchemy sessionmaker using the given engine  \n    ", 
" adds current stack trace as a comment in queries by patching ", 
" returns a query with sorting   pagination criteria added        ", 
" deprecated in grizzly  please use rpc_notifier instead  \n      ", 
" sends a notification via rpc \n          ", 
" notifies the recipient of the desired event given the model \n     ", 
" test notifier  stores notifications in memory for unittests  \n      ", 
" notifies the recipient of the desired event given the model        ", 
" decorator for notify which is used from utils monkey_patch          ", 
" sends a notification using the specified driver       ", 
" instantiate  cache  and return drivers based on the conf  \n      ", 
" add a notification driver at runtime  \n       ", 
" used by unit tests to reset the drivers  \n       ", 
" sends a notification via rpc \n           ", 
" construct the arguments for declaring a queue       ", 
" create a connection \n                ", 
" make a call that returns multiple times  \n                    ", 
" sends a message on a topic and wait for a response  \n                    ", 
" sends a message on a topic without waiting for a response  \n               ", 
" sends a message on a fanout exchange without waiting for a response  \n               ", 
" sends a message on a topic to a specific server  \n               ", 
" sends a message on a fanout exchange to a specific server  \n               ", 
" sends a notification event on a topic  \n               ", 
" create a connection \n                 ", 
" make sure a message intended for rpc can be serialized  \n     ", 
" make a call that returns multiple times  \n                     ", 
" sends a message on a topic and wait for a response  \n                     ", 
" cast to all consumers of a topic \n    ", 
" create a connection \n                  ", 
" make a call that returns multiple times  \n                      ", 
" sends a message on a topic and wait for a response  \n                      ", 
" sends a message on a topic without waiting for a response  \n                ", 
" sends a message on a fanout exchange without waiting for a response  \n                ", 
" sends a message on a topic to a specific server  \n                ", 
" sends a message on a fanout exchange to a specific server  \n                ", 
" sends a notification event on a topic  \n                ", 
" sends a reply or an error on the channel signified by msg_id       ", 
" unpack context from msg  \n     ", 
" pack context into msg       ", 
" add unique_id for checking duplicate messages  \n     ", 
" create a connection \n                   ", 
" make a call that returns multiple times  \n                       ", 
" sends a message on a topic and wait for a response  \n                       ", 
" sends a message on a topic without waiting for a response  \n                 ", 
" sends a message on a fanout exchange without waiting for a response  \n                 ", 
" sends a message on a topic to a specific server  \n                 ", 
" sends a message on a fanout exchange to a specific server  \n                 ", 
" sends a notification event on a topic  \n                 ", 
" create a connection to the message bus used for rpc       ", 
" invoke a remote method that returns something       ", 
" invoke a remote method that does not return anything            ", 
" broadcast a remote method invocation with no return       ", 
" invoke a remote method and get back an iterator       ", 
" send notification event            ", 
" clean up resoruces in use by implementation       ", 
" invoke a remote method that does not return anything             ", 
" broadcast to a remote method invocation with no return       ", 
" get a queue name for a given topic   host       ", 
" delay import of rpc_backend until configuration is loaded  \n     ", 
" sanitizes the msg_data field before logging  \n     ", 
" prepares exception data to be sent over rpc       ", 
" decorator for manager methods that raise expected exceptions       ", 
" determine whether versions are compatible       ", 
" serialization wrapper      ", 
" deserialization wrapper \n    ", 
" unflattens the rpc envelope       ", 
" wraps the sending of messages       ", 
" multiple calls  \n     ", 
" send a message  expect a response  \n     ", 
" send a message expecting no reply  \n     ", 
" send a message to all listening and expect no reply  \n     ", 
" send notification event             ", 
" clean up resources in use by implementation  \n     ", 
" create a directory  and any ancestor directories required          ", 
" returns a class from a string including module and class \n      ", 
" import a class and return an instance of it  \n       ", 
" import a class and return an instance of it  first by trying       ", 
" import a module  \n       ", 
" try to import a module and if it fails return default  \n      ", 
" stringify time in iso 8601 format \n        ", 
" parse time from iso 8601 format \n        ", 
" returns formatted utcnow  \n         ", 
" turn a formatted time back into a datetime  \n         ", 
" normalize time in arbitrary timezone to utc naive object \n        ", 
" return true if before is older than seconds  \n         ", 
" return true if after is newer than seconds  \n         ", 
" timestamp version of our utcnow function  \n         ", 
" overridable version of utils utcnow  \n         ", 
" returns a iso8601 formated date from timestamp \n        ", 
" override utils utcnow to return a constant time or a list thereof          ", 
" advance overridden time using a datetime timedelta  \n         ", 
" advance overridden time by seconds  \n         ", 
" remove the overridden time  \n         ", 
" make an rpc safe datetime with microseconds           ", 
" unmarshall a datetime dict  \n         ", 
" compute the difference in seconds between two date  time  or         ", 
" determines if time is going to happen in the next window seconds           ", 
" return an uninterpolated path relative to  pybasedir  \n", 
" return an uninterpolated path relative to  bindir  \n", 
" return an uninterpolated path relative to  state_path  \n", 
" return a path relative to  pybasedir  \n", 
" return a path relative to  bindir  \n", 
" return a path relative to  state_path  \n", 
" send an api fault notification  \n", 
" send compute instance update notification to report any changes occurred ", 
" send compute instance update notification to report changes if there ", 
" send   compute instance update   notification to inform observers ", 
" get the start and end of the relevant audit usage period ", 
" get bandwidth usage information for the instance for the ", 
" format image metadata for use in notifications from the instance ", 
" get detailed instance information for an instance which is common to all ", 
" generate the url to glance  \n   ", 
" generate an image url from an image_ref  \n", 
" parse an image href into composite parts   ", 
" instantiate a new glanceclient client object  \n", 
" shuffle a list of conf glance_api_servers and return an iterator ", 
" returns image with timestamp fields converted to datetime objects  \n ", 
" transform the exception for the image but keep its traceback intact  \n ", 
" transform the exception but keep its traceback intact  \n ", 
" create an image_service and parse the id from the given image_href   ", 
" strip all admin_password  new_pass  rescue_pass keys from a dict  \n", 
" this decorator wraps a method to catch any exceptions that may ", 
" indicates if the request context is a normal user  \n   ", 
" raise exception adminrequired   if context is an admin context  \n", 
" raise exception notauthorized   if context is not a user or an ", 
" ensures a request has permission to access the given project  \n   ", 
" ensures a request has permission to access the given user  \n   ", 
" ensures a request has permission to access the given quota class  \n   ", 
" execute optional pre and post methods around the decorated ", 
" clear loaded hooks  \n", 
" returns the actual ip of the local machine      ", 
" return an object containing the parsed output from qemu img info  \n", 
" convert image to other format  \n", 
" return a rendered network template for the given network_info ", 
" build the pxe config file for a node ", 
" generate the dir for an instances disk  \n", 
" generate the full path for an instances disk  \n", 
" generate the path for an instances pxe config file  \n", 
" convert a mac address into a pxe config file name  \n", 
" generate the paths for tftp files for this instance ", 
" return a sqlalchemy session  \n     ", 
" return a sqlalchemy engine  \n      ", 
" get the path for the migrate repository  \n      ", 
" query helper that accounts for context  s  read_deleted  field     ", 
" associate an instance to a node safely ", 
" migrate the database to  version  or the most recent version  \n    ", 
" display the current database version  \n    ", 
" update the node state in baremetal db ", 
" return the host iscsi iqn  \n", 
" return the iscsi target given a volume info  \n", 
" rescan the iscsi hba to discover iscsi targets  \n", 
" translate a mountpoint like  dev sdc into a numeric  \n", 
" start the data transfer from the reader to the writer  ", 
" download image from the glance image server  \n", 
" upload the snapshotted vm disk file to glance image server  \n", 
" get size of the vmdk file that is to be downloaded for attach in spawn  ", 
" log db contents  \n", 
" resets the db contents  \n", 
" clear the db contents  \n", 
" create an object in the db  \n", 
" get objects of the type  \n", 
" adds a file reference to the  db  \n", 
" removes a file reference from the db  \n", 
" fakes plugging vifs  \n", 
" fake get network  \n", 
" fakes fetch image call  just adds a reference to the db for the file  \n", 
" fakes the upload of an image  \n", 
" fakes the file size and properties fetch for the image file  \n", 
" gets the virtual machine with the ref from the db  \n", 
" builds the selection spec  \n", 
" builds the traversal spec object  \n", 
" builds the recursive traversal spec to traverse the object managed ", 
" builds the property spec  \n", 
" builds the object spec  \n", 
" builds the property filter spec  \n", 
" gets the properties of the managed object specified  \n", 
" gets a particular property of the managed object  \n", 
" gets the list of objects of the type specified  \n", 
" builds the property spec object  \n", 
" builds the object spec object  \n", 
" builds the property filter spec object  \n", 
" gets the list of properties for the collection of ", 
" create a vlan and bridge unless they already exist  \n", 
" build the datastore compliant path  \n", 
" split the vmware style datastore path to get the datastore ", 
" builds the vm create spec  \n", 
" builds a config spec for the lsi or bus logic controller  s addition ", 
" builds a config spec for the addition of a new network ", 
" builds the vmdk attach config spec  \n", 
" builds the vmdk detach config spec  \n", 
" gets the vmdk file path and the storage adapter type  \n", 
" gets the rdm disk key  \n", 
" builds the virtual disk copy spec  \n", 
" builds the virtual disk create spec  \n", 
" builds the rdm virtual disk create spec  \n", 
" builds spec for the creation of a new  attaching of an already existing ", 
" builds spec for the deletion of an already existing virtual disk from vm  \n", 
" builds the vm clone spec  \n", 
" builds the vm relocation spec  \n", 
" builds the dummy vm create spec  \n", 
" builds the machine id change config spec  \n", 
" builds the virtual switch port group add spec  \n", 
" builds the vnc config spec  \n", 
" builds the datastore search spec  \n", 
" get reference to the vm with the name specified  \n", 
" get reference to the cluster with the name specified  \n", 
" get reference to a host within the cluster specified  \n", 
" get the datastore list and choose the first local storage  \n", 
" gets reference to the network whose name is passed as the ", 
" gets the vswitch associated with the physical network adapter ", 
" checks if the vlan_interface exists on the esx host  \n", 
" get the vlan id and vswicth associated with the port group  \n", 
" creates a port group on the host system with the vlan tags ", 
" sets fakedriver  s node list  ", 
" resets fakedriver  s node list modified by set_nodes    ", 
" idenfity the id of this instance storage  \n", 
" get a list of all the users of this storage path  \n", 
" create a vm record   returns new vm reference  ", 
" destroys a vm record  \n", 
" get the vbd reference from the device number  \n", 
" unplug vbd from vm  \n", 
" destroy vbd from host database  \n", 
" create a vbd record and returns its reference  \n", 
" destroys the requested vdis  logging any storageerror exceptions  \n", 
" create a vdi record and returns its reference  \n", 
" this creates a temporary vm so that we can snapshot a vdi  ", 
" copy a vdi and return the new vdis reference  ", 
" clones a vdi and return the new vdis reference  \n", 
" retrieves the primary vdi for a vm  \n", 
" return the path to our storage repository ", 
" destroy used or unused cached images  ", 
" return a dict uuid vdi_ref  representing all cached images  \n", 
" returns the vdi ref of the cached image  \n", 
" partition and resize fs to match the size specified by ", 
" steps to programmatically generate a disk  ", 
" creates kernel ramdisk file from the image stored in the cache  ", 
" creates vdi from the image stored in the local cache  if the image ", 
" fetch image from glance based on image type  ", 
" tell glance to download an image and put the vhds into the sr ", 
" compute the total size of a vdi chain  starting with the specified ", 
" fetch the image from glance ", 
" disk image types are used to determine where the kernel will reside ", 
" determine whether the vm will use a paravirtualized kernel or if it ", 
" look for the vdis that are attached to the vm  \n", 
" look the instance up and return it if available  \n", 
" makes alterations to the image before launching as part of spawn  \n", 
" fill record with vm status information  \n", 
" compile vm diagnostics data  \n", 
" compile bandwidth usage  cpu  and disk metrics for all vms on ", 
" scans the sr specified by sr_ref  \n", 
" looks for the system default sr and triggers a re scan  \n", 
" same as _find_sr except raises a notfound exception if sr cannot be ", 
" return the storage repository to hold vm images  \n", 
" same as _find_iso_sr except raises a notfound exception if sr ", 
" return the storage repository to hold iso images  \n", 
" return server  s scheme and address to use for retrieving rrd xmls  \n", 
" return the vm rrd xml as a string  \n", 
" return the rrd updates xml as a string  \n", 
" return opaqueref for all the vdis which live on sr  \n", 
" yield vdi_recs for each element in a vdi chain  \n", 
" return the immediate children of a given vhd  ", 
" spin until the parent vhd is coalesced into its parent vhd ", 
" return the appropriate location for a plugged in vbd device ", 
" wait for device node to appear  \n", 
" unplug any instance vdis left after an unclean restart  \n", 
" return partition information  num  size  type  for a device  \n", 
" resize partition and fileystem  ", 
" copy data  skipping long runs of zeros to create a sparse file  \n", 
" mounts the device specified by dev_path in dir  \n", 
" callback which runs with the image vdi attached  \n", 
" prepares the ssh key and the network configuration file to be ", 
" ensure we  re connected to the host we  re running on  this is the ", 
" move and possibly link vhds via the xapi plugin  \n", 
" compare two version strings  eg 0 0 1 10   0 0 1 9   \n", 
" factory to create a decorator that records instance progress as a series ", 
" replace the xenserver address present in   url   with   host_addr    \n", 
" create read only fields and backref from vm and vdi to vbd when vbd ", 
" create read only fields in the vm record  \n", 
" adds a pif for each to the local database with vlan  1  ", 
" create an sr that looks like the one created on the local disk by ", 
" helper function for simulating xenapi plugin responses   it ", 
" helper function for simulating xenapi plugin responses for those ", 
" abstracts out the interaction with the agent xenapi plugin  \n", 
" tries to locate a guest agent at the path ", 
" return the network on which the bridge is attached  if found  ", 
" forgets the storage repository without destroying the vdis within \n", 
" return the storage repository given a uuid  \n", 
" find the sr reference from the vbd reference  \n", 
" introduce vdi in the host  \n", 
" parse device_path and mountpoint as they can be used by xenapi  ", 
" translate a mountpoint like  dev sdc into a numeric  \n ", 
" retrieve the volume id from device_path  \n", 
" retrieve target host  \n", 
" retrieve target port  \n", 
" there will be several methods that will need this general ", 
" return instance uuid by name_label  \n", 
" return the host from the xenapi host reference  ", 
" checks if aggregate is a hypervisor_pool  \n", 
" get the  virtual  size of a disk image ", 
" increase image to size  \n", 
" check whether we can resize contained file system  \n", 
" inject the specified items into a disk image  ", 
" setup the lxc container  ", 
" teardown the container rootfs mounting once it is spawned  ", 
" clean up the container namespace rootfs mounting one spawned  ", 
" injects data into a filesystem already mounted by the caller  ", 
" get selinux guests to ensure correct context on injected keys  \n", 
" add the given public ssh key to root  s authorized_keys  ", 
" inject  etc network interfaces into the filesystem rooted at fs  ", 
" set the root password to admin_passwd ", 
" set the password for username to admin_passwd ", 
" return a filename based on the sha1 hash of a given image id  ", 
" construct a filename for storing additional information about a base ", 
" test if a given path matches the pattern for info files  \n", 
" read information about an image  ", 
" write information about an image  \n", 
" read the checksum  ", 
" write a checksum to disk for a file in _base  \n", 
" determine if a disk device name has already been used  ", 
" determine the dev prefix for a disk bus  ", 
" determine the number disks supported  ", 
" identify a free disk dev name for a bus  ", 
" determine the best disk bus to use for a device type  ", 
" determine the disk bus for a disk dev  ", 
" determine the disk info for the next device on disk_bus  ", 
" determine how to map default disks to the virtual machine  ", 
" determine guest disk mapping info  ", 
" populate a libvirtconfigguestinterface instance ", 
" populate a libvirtconfigguestinterface instance  ", 
" populate a libvirtconfigguestinterface instance   ", 
" populate a libvirtconfigguestinterface instance    ", 
" populate a libvirtconfigguestinterface instance     ", 
" populate a libvirtconfigguestinterface instance      ", 
" config vif inbound outbound bandwidth limit  parameters are ", 
" get iscsi initiator name for this machine  \n", 
" get the fibre channel hba information  \n", 
" get fibre channel wwns and device paths from the system  if any  \n", 
" get fibre channel wwpns from the system  if any  \n", 
" get fibre channel wwnns from the system  if any  \n", 
" create a disk image ", 
" create cow image ", 
" create lvm image  ", 
" return free used total space info for a volume group in bytes ", 
" list logical volumes paths for given volume group  ", 
" get logical volume info  ", 
" get logical volume size in bytes  ", 
" obfuscate the logical volume  ", 
" remove one or more logical volume  \n", 
" pick the libvirt primary backend driver name ", 
" get the  virtual  size of a disk image  ", 
" get the backing file of a disk image ", 
" copy a disk image to an existing directory ", 
" write the given contents to a file ", 
" change ownership of file or directory ", 
" create a snapshot in a disk image ", 
" create a snapshot in a disk image  ", 
" extract a named snapshot from a disk image ", 
" read contents of file ", 
" open file     ", 
" delete  unlink  file ", 
" find root device path for instance ", 
" retrieve disk type  raw  qcow2  lvm  for given file  \n", 
" get free used total space info for a filesystem ", 
" grab image  \n", 
" determine the correct path for instance storage  ", 
" eventlet tpool proxy doesn  t work with old style class in __str__   ", 
" load a compute driver module  ", 
" method to connect to remote system using ssh protocol  ", 
" method to execute remote command as root  ", 
" method to transfer a file via ftp  ", 
" retrieve a file via ftp ", 
" ensures file path is built correctly for remote unix system ", 
" context allowing for ssh between vios partitions ", 
" lpar configuration data parser  ", 
" this is a simplified inspect getcallargs  2 7    ", 
" sends a vpn negotiation packet and returns the server session  ", 
" helper method to execute command with optional retry     ", 
" a wrapper around execute   to more easily handle warnings and errors      ", 
" this method gives you the most recently  completed  audit period     ", 
" generate a random password from the supplied symbol groups     ", 
" escapes a string so it is valid within xml or xhtml  \n   ", 
" try to turn a string into utf 8 if possible     ", 
" try to turn a string into a number of bytes  looks at the last    ", 
" delete a file  but ignore file not found error  \n", 
" returns a list of items matching the specified path     ", 
" recursively flatten a nested dictionary  \n   ", 
" return two dicts  one with  keys  the other with everything else  \n   ", 
" return a dict in which the dictionaries keys are mapped to new keys  \n   ", 
" return a dict that only contains a subset of keys  \n   ", 
" return a dict describing how to change orig to new   the keys ", 
" checks that obj is of type cls  and lets pylint infer types  \n   ", 
" parses the given server_string and returns a list of host and port  ", 
" convert a string representation of a bool into a bool value  \n", 
" check if a value looks like an int  \n", 
" check if the provided string is a valid bool string or not  \n   ", 
" verify that address represents a valid ipv4 address  \n", 
" check if the provided ipv4 or ipv6 address is a valid ", 
" returns the ip version of a network  ipv4 or ipv6   raises ", 
" if the flags monkey_patch set as true     ", 
" convert a value or list into a list of dicts  \n", 
" decorator that logs how long a particular function took to execute  \n", 
" protect code that wants to operate on path atomically      ", 
" return a path to a particular device     ", 
" local total_seconds implementation for compatibility with python 2 6  \n", 
" return a hostname which conforms to rfc 952 and rfc 1123 specs  \n   ", 
" read from a file if it has been modified          ", 
" open file      ", 
" generate a hash for the contents of a file  \n   ", 
" temporarily set the attr on a particular object to a given value then    ", 
" generate an ethernet mac address  \n   ", 
" secure helper to read file as root  \n   ", 
" temporarily chown a path     ", 
" walk class hierarchy  yielding most derived classes first  \n", 
" format a file or block device ", 
" return num bytes from the end of the file  and remaining byte count  ", 
" get the method at the bottom of a stack of decorators  \n", 
" check the length of specified string ", 
" verifies that the action is valid on the target in this context        ", 
" whether or not roles contains   admin   role according to policy setting  \n   ", 
" ensure the ca filesystem exists  \n", 
" get crl file for project  \n", 
" convert a ssh public key to openssl format ", 
" encrypt text with an ssh public key  \n", 
" revoke a cert by file name  \n", 
" revoke all user certs  \n", 
" revoke all project certs  \n", 
" revoke certs for user in project  \n", 
" helper to generate user cert subject  \n", 
" helper to generate user cert subject  \n ", 
" generate and sign a cert for user in project  \n", 
" compute an md5 hash  ", 
" decorator to indicate that a method is a periodic task        ", 
" get root device name from image meta data  ", 
" prepend    dev    to   device   entry of swap ephemeral virtual type  \n", 
" remove leading    dev     \n", 
" remove both leading  dev  and xvd or sd or vd  \n", 
" matches device name and returns prefix  suffix  \n", 
" convert columns back to the larger string 43  defined in version 149  \n", 
" convert string columns holding ip addresses to inet for postgresql  \n", 
" convert columns back to the larger string 255   \n", 
" convert period_beginning and period_ending to datetime  \n", 
" convert columns back to string 255   \n", 
" drop index from db and remove index from sqlalchemy table metadata  ", 
" map host to compute node s  for the purpose of determining which hosts ", 
" for each migration and matching instance record  update the node columns ", 
" convert string columns holding ip addresses to inet for postgresql  \n ", 
" convert columns back to the larger string 255   \n ", 
" get the path for the migrate repository  \n       ", 
" this method drops uc from table and works for mysql  postgresql and sqlite  ", 
" this method is used to drop all old rows that have the same values for ", 
" the backend is this module itself  \n", 
" decorator to require admin request context     ", 
" decorator to require  any  user or admin context     ", 
" decorator to require the specified instance to exist  ", 
" decorator to require the specified aggregate to exist  ", 
" decorator to retry a db api call if deadlock was received  \n", 
" query helper that accounts for context  s  read_deleted  field      ", 
" applies exact match filtering to a query     ", 
" make list of computenodestats  \n", 
" creates a new computenode and populates the capacity fields     ", 
" updates the computenode record with the most recent data  \n", 
" delete a computenode record  \n", 
" compute statistics over all compute nodes  \n", 
" yields blocks of ips no more than block_size elements long  \n", 
" keyword arguments  ", 
"  returns  a tuple of  models fixedip  models network  models instance  \n", 
" create a new virtual interface record in the database  ", 
" gets a virtual interface from the table  ", 
" gets a virtual interface from the table   ", 
" gets a virtual interface from the table    ", 
" gets all virtual interfaces for instance  ", 
" gets virtual interface for instance that  s associated with network  \n", 
" delete virtual interface records that are associated ", 
" get all vifs  \n", 
" create a new instance record in the database  ", 
" selectively fill instances with manually joined metadata  note that ", 
" return instances that match all filters   deleted instances ", 
" applies regular expression filtering to a query  ", 
" return instances and joins that were active during window  \n", 
" return a list of the instance uuids on a given host  ", 
" set the given properties on an instance and update it  return ", 
" associate the given security group with the given instance  \n", 
" disassociate the given security group from the given instance  \n", 
" gets an instance info cache from the table  ", 
" update an instance info cache record in the table  ", 
" deletes an existing instance_info_cache record ", 
" associate a project with a network  ", 
" return the relevant reservations  \n ", 
" create ec2 compatible volume by provided uuid  \n", 
" create ec2 compatible snapshot by provided uuid  \n", 
" get security group models for a project by a list of names  ", 
" ensure default security group exists for a project_id  ", 
" create a new instance type  in order to pass in extra specs   ", 
" takes an instance or instance type query returned ", 
" returns all instance types  \n", 
" returns a dict describing specific instance_type  \n", 
" returns a dict describing specific instance_type  \n ", 
" returns a dict describing specific flavor_id  \n", 
" marks specific instance_type as deleted  \n", 
" get flavor access list by flavor id  \n", 
" add given tenant to the flavor access list  \n", 
" remove given tenant from the flavor access list  \n", 
" return volumes usage that have been updated after a specified time  \n", 
" find local s3 image represented by the provided id  \n", 
" find local s3 image represented by the provided uuid  \n", 
" create local s3 image represented by provided uuid  \n", 
" create a new instancefault  \n", 
" get all instance faults for the provided instance_uuids  \n", 
" get all instance actions for the provided uuid  \n", 
" get the action by request_id and given instance  \n", 
" start an event on an instance action  \n", 
" finish an event on an instance action  \n", 
" create ec2 compatible instance by provided uuid  \n", 
" move up to max_rows rows from one tables to the corresponding ", 
" move up to max_rows rows from production tables to the corresponding ", 
" migrate the database to  version  or the most recent version  \n     ", 
" display the current database version  \n     ", 
" return a constraint object suitable for use with some updates  \n", 
" return an equality condition object suitable for use in a constraint  ", 
" return an inequality condition object suitable for use in a constraint  ", 
" destroy the service or raise if it does not exist  \n   ", 
" get a service or raise if it does not exist  \n   ", 
" get a service by host it  s on and topic it listens to  \n   ", 
" get all services  \n   ", 
" get all services for a given topic  \n   ", 
" get all services for a given host  \n   ", 
" get the service entry for a given compute host  ", 
" get the state of a service by node name and binary  \n", 
" create a service from the values dictionary  \n   ", 
" set the given properties on a service and update it  ", 
" get a computenode  \n", 
" get all computenodes  \n  ", 
" get computenodes given a hypervisor hostname match string  \n", 
" create a computenode from the values dictionary  \n  ", 
" set the given properties on a computenode and update it  ", 
" delete a computenode from the database  ", 
" create a certificate from the values dictionary  \n", 
" get all certificates for a project  \n", 
" get all certificates for a user  \n", 
" get all certificates for a user and project  \n", 
" returns a list of floating ip pools  \n", 
" allocate free floating ip from specified pool and return the address  ", 
" create a lot of floating ips from the values dictionary  \n", 
" destroy a lot of floating ips from the values dictionary  \n", 
" create a floating ip from the values dictionary  \n", 
" count floating ips used by project  \n", 
" deallocate a floating ip by address  \n", 
" destroy the floating_ip or raise if it does not exist  \n", 
" disassociate a floating ip from a fixed ip by address  ", 
" associate a floating ip to a fixed_ip by address  ", 
" get all floating ips  \n", 
" get all floating ips by host  \n", 
" get all floating ips by project  \n", 
" get a floating ip by address or raise if it doesn  t exist  \n", 
" get a floating ips by fixed address  \n", 
" get a floating ips by fixed address  \n ", 
" update a floating ip by address or raise if it doesn  t exist  \n", 
" set auto_assigned flag to floating ip  \n", 
" get a list of all zones in our database  public and private  \n", 
" associated a dns domain with an availability zone  \n", 
" associated a dns domain with a project id  \n", 
" purge associations for the specified dns zone  \n", 
" get the db record for the specified domain  \n", 
" update a migration instance  \n ", 
" create a migration record  \n ", 
" finds a migration by the id  \n ", 
" finds a migration by the instance uuid its migrating  \n ", 
" finds all unconfirmed migrations within the confirmation window for ", 
" finds all migrations for the given host   node  that are not yet ", 
" associate fixed ip to instance  ", 
" find free ip in network and associate it to instance or host  ", 
" create a fixed ip from the values dictionary  \n", 
" create a lot of fixed ips from the values dictionary  \n", 
" disassociate a fixed ip from an instance by address  \n", 
" disassociate old fixed ips from host  \n", 
" get fixed ip by id or raise if it does not exist  ", 
" get all defined fixed ips  \n", 
" get a fixed ip by address or raise if it does not exist  \n", 
" get detailed fixed ip info by address or raise if it does not exist  \n", 
" get a fixed ip by a floating address  \n", 
" get fixed ips by instance or raise if none exist  \n", 
" get fixed ips by compute host  \n", 
" get fixed ip for a host in a network  \n", 
" get fixed ips by virtual interface or raise if none exist  \n", 
" create a fixed ip from the values dictionary  \n ", 
" count fixed ips used by project  \n", 
" create a virtual interface record in the database  \n", 
" gets a virtual interface from the table  \n", 
" gets a virtual interface from the table filtering on address  \n", 
" gets a virtual interface from the table filtering on vif uuid  \n", 
" gets all virtual_interfaces for instance  \n", 
" gets all virtual interfaces for instance  \n", 
" delete virtual interface records associated with instance  \n", 
" gets all virtual interfaces from the table  \n", 
" create an instance from the values dictionary  \n", 
" get  instance_count  total_cores  total_ram  for project  \n", 
" destroy the instance or raise if it does not exist  \n", 
" get an instance or raise if it does not exist  \n", 
" get an instance or raise if it does not exist  \n ", 
" get all instances  \n", 
" get all instances that match all filters  \n", 
" get instances and joins active during a certain time window  ", 
" get all instances belonging to a host  \n", 
" get all instances belonging to a node  \n", 
" get all instances belonging to a host with a different type_id  \n", 
" get the first floating ip address of an instance  \n", 
" get all floating ip addresses of an instance  \n", 
" get all instances stuck in a rebooting state  \n", 
" atomically check if an instance is in a valid state  and if it is  set ", 
" set the given properties on an instance and update it  ", 
" set the given properties on an instance and update it  return  ", 
" associate the given security group with the given instance  \n ", 
" disassociate the given security group from the given instance  \n ", 
" gets an instance info cache from the table   ", 
" update an instance info cache record in the table   ", 
" deletes an existing instance_info_cache record  ", 
" create a key_pair from the values dictionary  \n", 
" destroy the key_pair or raise if it does not exist  \n", 
" get a key_pair or raise if it does not exist  \n", 
" get all key_pairs by user  \n", 
" count number of key pairs for the given user id  \n", 
" associate a free network to a project  \n", 
" return the number of reserved ips in the network  \n", 
" create a network from the values dict  ", 
" delete network with key network_id  ", 
" disassociate the network from project or host and raise if it does ", 
" get a network or raise if it does not exist  \n", 
" return all defined networks  \n", 
" return networks by ids  \n", 
" indicates if a network is currently in use on host  \n", 
" get all network  s ips that have been associated  \n", 
" get a network by uuid or raise if it does not exist  \n", 
" get a network by cidr or raise if it does not exist  \n", 
" get all networks by instance id or raise if none exist  \n", 
" all networks for which the given host is the network host  \n", 
" safely set the host for network  \n", 
" set the given properties on a network and update it  ", 
" create a quota for the given project and resource  \n ", 
" retrieve a quota or raise if it does not exist  \n ", 
" retrieve all quotas associated with a given project  \n ", 
" update a quota or raise if it does not exist  \n ", 
" create a quota class for the given name and resource  \n ", 
" retrieve a quota class or raise if it does not exist  \n ", 
" retrieve all quotas associated with a given quota class  \n ", 
" update a quota class or raise if it does not exist  \n ", 
" retrieve a quota usage or raise if it does not exist  \n ", 
" retrieve all usage associated with a given resource  \n ", 
" update a quota usage or raise if it does not exist  \n", 
" create a reservation for the given project and resource  \n ", 
" retrieve a reservation or raise if it does not exist  \n ", 
" check quotas and create appropriate reservations  \n ", 
" commit quota reservations  \n ", 
" roll back quota reservations  \n ", 
" destroy all quotas associated with a given project  \n ", 
" roll back any expired reservations  \n ", 
" create an entry of block device mapping  \n", 
" update an entry of block device mapping  \n", 
" update an entry of block device mapping  ", 
" get all block device mapping belonging to an instance  \n", 
" destroy the block device mapping  \n", 
" destroy the block device mapping  \n ", 
" destroy the block device mapping  \n  ", 
" get all security groups  \n", 
" get security group by its id  \n", 
" returns a security group with the specified name from a project  \n", 
" get all security groups belonging to a project  \n", 
" get security groups to which the instance is assigned  \n", 
" indicates if a group name exists in a project  \n", 
" indicates if a security group is currently in use  \n", 
" create a new security group  \n", 
" ensure default security group exists for a project_id   ", 
" deletes a security group  \n", 
" count number of security groups in a project  \n", 
" create a new security group  \n ", 
" get all rules for a given security group  \n", 
" get all rules that grant access to the given security group  \n", 
" deletes a security group rule  \n", 
" gets a security group rule  \n", 
" count rules in a given security group  \n", 
" add a firewall rule at the provider level  all hosts   instances   \n", 
" get all provider level firewall rules  \n", 
" delete a provider firewall rule from the database  \n", 
" return the network associated with the project  ", 
" create console pool  \n", 
" fetch a console pool for a given proxy host  compute host  and type  \n", 
" fetch all pools for given proxy host and type  \n", 
" create a console  \n", 
" delete a console  \n", 
" get console entry for a given instance and pool  \n", 
" get consoles for a given instance  \n", 
" get a specific console  possibly on a given instance   \n", 
" create a new instance type  \n", 
" get all instance types  \n", 
" get instance type by id  \n", 
" get instance type by name  \n", 
" get instance type by flavor id  \n", 
" delete an instance type  \n", 
" get flavor access by flavor id  \n", 
" add flavor access for project  \n", 
" remove flavor access for project  \n", 
" create a new child cell entry  \n", 
" update a child cell entry  \n", 
" delete a child cell  \n", 
" get a specific child cell  \n", 
" get all child cells  \n", 
" get all metadata for an instance  \n", 
" delete the given metadata item  \n  ", 
" update metadata if it exists  otherwise create it  \n  ", 
" get all system metadata for an instance  \n", 
" update metadata if it exists  otherwise create it  \n   ", 
" create a new agent build entry  \n", 
" get agent build by hypervisor os architecture triple  \n", 
" get all agent builds  \n", 
" destroy agent build entry  \n", 
" update agent build entry  \n", 
" return bw usage for instance and mac in a given audit period  \n", 
" return bw usages for instance s  in a given audit period  \n", 
" update cached bandwidth usage for an instance  s network based on mac ", 
" get all extra specs for an instance type  \n", 
" delete the given extra specs item  \n ", 
" create or update instance type extra specs  this adds or modifies the ", 
" return volumes usage that have been updated after a specified time  \n ", 
" update cached volume usage for a volume ", 
" find local s3 image represented by the provided id  \n ", 
" find local s3 image represented by the provided uuid  \n ", 
" create local s3 image represented by provided uuid  \n ", 
" create a new aggregate with metadata  \n", 
" get a specific aggregate by id  \n", 
" get a list of aggregates that host belongs to  \n", 
" get metadata for all aggregates that host belongs to  ", 
" get hosts with a specific metadata key metadata for all aggregates  ", 
" update the attributes of an aggregates  if values contains a metadata ", 
" delete an aggregate  \n", 
" get all aggregates  \n", 
" add update metadata  if set_delete true  it adds only  \n", 
" get metadata for the specified aggregate  \n", 
" delete the given metadata key  \n", 
" add host to the aggregate  \n", 
" get hosts for the specified aggregate  \n", 
" delete the given host from the aggregate  \n", 
" create a new instance fault  \n", 
" get all instance faults for the provided instance_uuids  \n ", 
" start an action for an instance  \n", 
" finish an action for an instance  \n", 
" get all instance actions for the provided instance  \n", 
" get the action by request_id and given instance  \n ", 
" start an event on an instance action  \n ", 
" finish an event on an instance action  \n ", 
" get the events by action id  \n", 
" get ec2 id through uuid from instance_id_mappings table  \n", 
" get uuid through ec2 id from instance_id_mappings table  \n", 
" create the ec2 id to instance uuid mapping on demand  \n", 
" mark a task as complete for a given host time period  \n", 
" mark a task as started for a given host time period  \n", 
" move up to max_rows rows from production tables to corresponding shadow ", 
" move up to max_rows rows from tablename to corresponding shadow ", 
" return a list of filter classes found in this directory  ", 
" deprecated   configs should change to use all_filters    \n", 
" returns an instance of baremetalhoststate or hoststate according to ", 
" return a list of weight plugin classes found in this directory  \n", 
" return a pre weight cost of 1 for each host  \n", 
" higher weights win  so we should return a lower weight ", 
" returns a list of tuples containing weights and cost functions to ", 
" clear the host and node   set the scheduled_at field of an instance  ", 
" encode locally created instance for return via rpc  \n", 
" creates instance types  \n", 
" marks instance types as deleted  \n", 
" get all non deleted instance_types  ", 
" get the default instance type  \n", 
" retrieves single instance type by id  \n", 
" retrieves single instance type by name  \n", 
" retrieve instance type by flavorid  ", 
" retrieve instance type access list by flavor id  \n", 
" add instance type access for project  \n", 
" remove instance type access for project  \n", 
" create an instancetype like object from instance  s system_metadata ", 
" save properties from instance_type into instance  s system_metadata  ", 
" delete instance_type information from instance  s system_metadata ", 
" get the topic to use for a message  ", 
" adds the specified fault to the database  \n", 
" validates  or generates  a device name for instance  ", 
" generates   exists   notification for an instance for usage auditing ", 
" send a notification about an instance  ", 
" decorator to revert task_state on failure  \n", 
" wraps a method to catch exceptions related to instances  ", 
" wraps a method to log the event taken on the instance  and result  ", 
" returns the   hostapi   class from the same module as the configured compute ", 
" returns the   instanceactionapi   class from the same module as the ", 
" decorator to check vm and or task state before entry to api functions  ", 
" check corresponding policy prior of wrapped method to execution  \n", 
" sort a list with respect to the preferred network ordering  \n", 
" grab the name of the binary we  re running in  \n", 
" create forwarding rule for metadata  \n", 
" create the filter accept rule for metadata  \n", 
" basic networking setup goes here  \n", 
" bind ip to public interface  \n", 
" unbind a public ip from public interface  \n", 
" sets up local metadata ip  \n", 
" sets up forwarding rules for vlan  \n", 
" ensure floating ip forwarding rule  \n", 
" remove forwarding for floating ip  \n", 
" makes sure only in network traffic is bridged  \n", 
" return a network  s hosts config in dnsmasq leasefile format  \n", 
" get network  s hosts config in dhcp host format  \n", 
" get network  s dns hosts in hosts format  \n", 
" allow dhcp and dns traffic through to dnsmasq  \n", 
" remove dhcp and dns traffic allowed through to dnsmasq  \n", 
" get network  s hosts config in dhcp opts format  \n", 
"  re starts a dnsmasq server for a given network  ", 
" return a host string for an address in leasefile format  \n", 
" return a host string for an address in dhcp host format  \n", 
" return an empty gateway option  \n", 
" wrapper around utils _execute for fake_network  \n", 
" check if ethernet device exists  \n", 
" return path to a pid  leases  hosts or conf file for a bridge device  \n", 
" return path to a pid or conf file for a bridge device  \n", 
" returns the pid for prior dnsmasq instance for a bridge device  ", 
" returns the pid for prior radvd instance for a bridge device  ", 
" build commands to add del ips to bridges devices  \n", 
" create a pair of veth devices with the specified names  ", 
" decorator to update the instance_info_cache ", 
" check policy corresponding to the wrapped methods prior to execution  \n", 
" used to echo strings to scsi subsystem  \n", 
" try and discover the multipath device for a volume  \n", 
" we return the metadata sent to glance by modifying the sent_to_glance dict ", 
" factory for removing duplicate webob code from tests  \n", 
" compare xml atom links  \n ", 
" compare xml media types  \n ", 
" compare parts of lxml etree objects to dicts  \n ", 
" remove keys that aren  t serialized  \n", 
" remove keys that aren  t serialized  \n ", 
" simulates three possible behaviours for vm drivers or compute drivers when ", 
" create a test instance  \n", 
" create a dictionary for a test instance  \n", 
" domain names tend to have    s in them   urllib doesn  t quote dots  ", 
" monkeypatches httpconnection so that if you try to connect to host  you   ", 
" kludge the cache into instance s  without having to create db ", 
" kludge the cache into instance s  without having to create db  ", 
" helper wsgi app returns 403 if param   die   is 1  \n", 
" vm_utils with_vdi_attached_here needs to be stubbed out because it ", 
" stubs out the vmwareapisession  s get_vim_object method  \n", 
" stubs out the vmwareapisession  s is_vim_object method  \n", 
" set the stubs  \n", 
" stubs out the db api for creating instances  \n", 
" decorator for notify which is used from utils monkey_patch           ", 
" stubs out the db api for creating instances  \n ", 
" stubs out methods from xenapisession  \n", 
" assumes vms stu have pv kernels  \n", 
" always returns true ", 
" simulates a failure in lookup image  \n", 
" simulates a failure in fetch image_glance_disk  \n", 
" simulates a failure in create_vm  \n", 
" simulates a failure in _attach_disks  \n", 
" allows the client to configure replies to commands  \n ", 
" a reply handler for commands that haven  t been added to the reply list   ", 
" this function stubs out execute   ", 
" set the stubs in mapping in the db api  \n ", 
" stubs out the db api for creating instances  \n  ", 
" opens a fake connection with an ldap server  \n", 
" match an ldap query to an attribute dictionary   ", 
" split a string into parenthesized groups  \n ", 
" match a given key and value against an attribute list  \n ", 
" returns a list of subclass strings   ", 
" convert attribute values from json representation  ", 
" convert attribute values into json representation  ", 
" kludge the cache into instance s  without having to create db   ", 
" creates a random alphanumeric string of specified length  \n ", 
" creates a random numeric string of specified length  \n ", 
" creates a random string with prefix  that is not in   items   list  \n ", 
" try to get a connection with a very specific set of values  if we get   ", 
" returns an sqlalchemy table dynamically from db    ", 
" decorator to simplify catching drivers raising notimplementederror ", 
" return available and unavailable zones  \n", 
" return a generator that will return a list of active and ", 
" turn cell_name and item into  cell_name   item   \n", 
" split a combined cell item and return them  \n", 
" fix compute_node attributes that should be unique   allows ", 
" fix service attributes that should be unique   allows ", 
" fix task_log attributes that should be unique   in particular  ", 
" use as a decorator to wrap methods that use cell information to ", 
" reverse a path   used for sending responses upstream  \n", 
" reverse the routing_path   if we only want to send to our parent  ", 
" maps keys for volumes summary view  \n  ", 
" maps keys for snapshots summary view  \n   ", 
" returns a dictionary containing values associated to their property names \n", 
" returns a dictionary with attributes accociated to tags ", 
" normalizes the input array so that it sums to 1  ", 
" normalizes the input array so that the exponent of the sum is 1  ", 
" computes the log of input probabilities masking divide by zero in log  ", 
" generate a batch of sequences for the  add  task  e g  the target for the ", 
" helper function returning a list of gradients ", 
" stochastic gradient descent  sgd  updates ", 
" returns a modified update dictionary including momentum ", 
" stochastic gradient descent  sgd  updates with momentum ", 
" returns a modified update dictionary including nesterov momentum ", 
" stochastic gradient descent  sgd  updates with nesterov momentum ", 
" adagrad updates ", 
" rmsprop updates ", 
" adadelta updates ", 
" adam updates ", 
" adamax updates ", 
" max weight norm constraints and gradient clipping ", 
" rescales a list of tensors based on their combined norm ", 
" pad a tensor with a constant value  ", 
" using conv2d with a single input channel \n", 
" using conv2d with width    1 \n", 
" using conv2d with height    1 \n", 
" perform a strided 1d convolution by reshaping input and filters so that the ", 
" using a single dot product \n", 
" using multiple dot products \n", 
" get the package level random number generator  ", 
" set the package level random number generator  ", 
" ignore paths that would otherwise be collceted by the doctest ", 
" converts data to a numpy array of dtype   theano config floatx    ", 
" creates empty theano shared variable  ", 
" wrap as theano expression  ", 
" returns all shared variables the given expression s  depend on  ", 
" one hot representation of integer vector  ", 
" filters duplicates of iterable  ", 
" coerce a value to a tuple of given length  and possibly given type   ", 
" compute incoming weight vector norms  ", 
" helper method to create theano shared variables for layer parameters ", 
" helper function to unroll for loops  can be used to unroll theano scan  ", 
" computes the l1 norm of a tensor ", 
" computes the squared l2 norm of a tensor ", 
" computes the total cost for applying a specified penalty ", 
" computes a regularization cost by applying a penalty to the parameters ", 
" computes a regularization cost by applying a penalty to the parameters  ", 
" computes a regularization cost by applying a penalty to the parameters   ", 
" crops the given input arrays  ", 
" computes the shapes of the given arrays after auto cropping is applied  ", 
" helper function to compute the output size of a convolution operation ", 
" helper function to compute the input size of a convolution operation ", 
" compute the output length of a pooling operator ", 
" wrapper function that calls  func  theano tensor signal pool_2d  either ", 
" convenience function to drop full channels of feature maps  ", 
" convenience function to drop full locations of feature maps  ", 
" apply cudnn batch normalization to an existing layer  this is a drop in ", 
" this function gathers all layers below one or more given  class  layer  ", 
" computes the output of the network at one or more given layers  ", 
" computes the output shape of the network at one or more given layers  ", 
" returns a list of theano shared variables or expressions that ", 
" this function counts all parameters  i e   the number of scalar ", 
" this function returns the values of the parameters of all layers below one ", 
" given a list of numpy arrays  this function sets the parameters of all ", 
" convenience function for standardizing inputs by applying a fixed offset ", 
" calculates the transformed points   value using the provided coefficients ", 
" function which implements the u function from bookstein paper ", 
" initializes the thin plate spline calculation by creating the source ", 
" convenience function to apply parametric rectify to a given layer  s output  ", 
" convenience function to apply randomized rectify to a given layer  s output  ", 
" apply batch normalization to an existing layer  this is a convenience ", 
" helper function turning a target 1d vector into a column if needed  ", 
" computes the binary cross entropy between predictions and targets  ", 
" computes the categorical cross entropy between predictions and targets  ", 
" computes the element wise squared difference between two tensors  ", 
" aggregates an element  or item wise loss to a scalar loss  ", 
" computes the binary hinge loss between predictions and targets  ", 
" computes the multi class hinge loss between predictions and targets  ", 
" computes the binary accuracy between predictions and targets  ", 
" computes the categorical accuracy between predictions and targets  ", 
" sigmoid activation function  math   varphi x     frac 1  1   e   x    ", 
" softmax activation function ", 
" tanh activation function  math   varphi x     tanh x   ", 
" rectify activation function  math   varphi x     max 0  x   ", 
" exponential linear unit  math   varphi x     x   0    x   e x   1  ", 
" softplus activation function  math   varphi x     log 1   e x   ", 
" linear activation function  math   varphi x    x  ", 
" 2d convolution with unshared weights  no stride    same   padding  ", 
" channelwise 2d convolution with unshared weights  no stride  ", 
" execute a batch of a stack of n dimensional convolutions  ", 
" inserts  factors i    1  zeros between input elements on axis i  \n", 

]